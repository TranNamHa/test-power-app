"DetailCommunicationRecords As screen.'phoneLayout_FluidGridWithHeaderPageLayout_ver3.0'":
    Fill: =RGBA(248, 248, 249, 1)
    OnHidden: =Set(isFromDetailCommunicationRecord, true);
    OnVisible: |
        =Set(isLoading, true);
        Set(DealDetailTab,1);
        Set(Language, "En");
        If(!IsBlank(recordItemSelected), If(recordItemSelected.meeting_nature = "EXTERNAL", Set(TypeNature, "External"), Set(TypeNature, "Internal")));
        If(
            IsBlank(currenUserV2),
            If(IsBlank(env),Set(env,"TEST"); Set(envDEV,false);Set(envTEST,true);Set(envUAT1,false);Set(envUAT2,false));
            If(IsBlank(resKeyOpenAll),Set( resKeyOpenAll,'TVS->GetOpenAndCloseFinal-V1'.Run(envDEV,envTEST,envUAT1,envUAT2)));
            If(!IsBlank(resKeyOpenAll),
                ClearCollect(currentUserV2Res,'TVS->GetCurrentUser-V1'.Run(resKeyOpenAll.open,resKeyOpenAll.close,User().Email,envDEV,envTEST,envUAT1,envUAT2))
            );
            Clear(permissionLst);
            ForAll(currentUserV2Res,
                Collect(permissionLst,
                    {
                        process_code: ThisRecord.process_code,
                        role: Distinct(Split(ThisRecord.role,"#"),Value),
                        company: Distinct(Split(ThisRecord.company,"#"),Value),
                        division: Distinct(Split(ThisRecord.division,"#"),Value),
                        action: Distinct(Split(ThisRecord.action,"#"),Value),
                        name_team: Distinct(Split(ThisRecord.name_team,"#"),Value)
                    }
                )
            );
            Set(currenUserV2,
                {
                    id: First(currentUserV2Res).id,
                    name: First(currentUserV2Res).name,
                    email: First(currentUserV2Res).email,
                    internal_email: First(currentUserV2Res).internal_email,
                    phone_number: First(currentUserV2Res).phone_number,
                    permissionList: permissionLst,
                    status: First(currentUserV2Res).status
                }
            );
            
        );
        Concurrent(
        Set(dataCompanyNonList,'TVS->FindAllCompanyPEVC-V1'.Run(resKeyOpenAll.open,resKeyOpenAll.close,envDEV,envTEST,envUAT1,envUAT2)),
        If(CountRows(ListItemUnitConfig.listUnitConfig) <= 0 || CountRows(ListItemUnitConfig.listItemConfig) <= 0,
        Set(ListItemUnitConfig, 'TVS->GetAllItemUnitConfig'.Run(resKeyOpenAll.open,resKeyOpenAll.close, envDEV, envTEST, envUAT1, envUAT2))),
        Set(ListCompanyFounder, RenameColumns(ShowColumns('TVS->GetAllCompanyFounder_Process1.2'.Run(resKeyOpenAll.open,resKeyOpenAll.close, envDEV, envTEST, envUAT1, envUAT2), email, name, id_company, company_contact_id), company_contact_id, id))
        );
        
        ClearCollect(listCompanyNonList, AddColumns(dataCompanyNonList, company_department, company_name, name, "", external, true));
        ClearCollect( allDataCompany, AddColumns(listDepartment, id_company, ""), listCompanyNonList);
        // Go from Link but not have permission 
        If(!("VIEW" in LookUp(currenUserV2.permissionList,process_code = "Process1.1",action) && currenUserV2.status = "ACTIVE"),Select(Button2_4));
        ClearCollect(invalidValue,[]);
        // Need to check if DRAFT
        Reset(CRSummaryTitle_Input_2);
        Reset(Input_meeting_title);
        Reset(DateOfMeeting_DatePicker_2);
        Reset(Timer1_19);
        UpdateContext({ShowNotification: false});
        Clear(DataValues);
        Clear(emptyItemNew);
        Clear(emptyUnitNew);
        Clear(emptyUnitAndColumNew);
        Clear(emptyItemAndColumnNumberNew);
        Clear(DataQuaters);
        Clear(valuesConverted);
        Clear(results);
        Clear(QuaterIndex);
        Clear(DataItemUit);
        ClearCollect(filterDataCompantPEVC, Blank());
        Set(listUnitConfig,ListItemUnitConfig.listUnitConfig);
        Set(listItemConfig,ListItemUnitConfig.listItemConfig);
        Set(isSubmited,false);
        Set(crIdDraft,Blank());
        //Clear(HasTags);
        Clear(membersAdd);
        Set(hastagShowDropdown,false);
        Set(shareToShowDropdown,false);
        Set(shareToShowInGalleryDropdown,false);
        Set(meetingTypeShowDropdown,false);
        Set(meetingMemberMark,Blank());
        Set(shareToInGalleryDropdownY,-1);
        Set(partyInGalleryDropdownY,-1);
        Set(partyMark,Blank());
        //Header
        Set(MenuSelect,"Portal");
        Set(MenuSelect2,"Communication Records");
        Set(HeaderText,
            If(IsBlank(recordItemSelected),
                If(TypeNature = "External","Create new / External","Create new / Internal"),
                recordItemSelected.status = "DRAFT" && "CREATE" in LookUp(currenUserV2.permissionList,process_code = "Process1.1",action),
                If(TypeNature = "External","Update / External","Update / Internal"),
                recordItemSelected.status = "SUBMITTED" && "APPROVE" in LookUp(currenUserV2.permissionList,process_code = "Process1.1",action),
                If(TypeNature = "External","Approve / External","Approve / Internal"),
                "View"
            )
        );
        Clear(partyMemberDelete);
        //Clear(partyMembersAdd);
        Set(isOwner,IsBlank(recordItemSelected) || recordItemSelected.created_by_id = currenUserV2.id);
        Set(isCreateUser,
            "CREATE" in LookUp(currenUserV2.permissionList,process_code = "Process1.1",action)
        );
        Set(isApproveUser,"APPROVE" in LookUp(currenUserV2.permissionList,process_code = "Process1.1",action));
        Set(isSameDivision,If(IsBlank(recordItemSelected),true,First(Filter(listDepartment,id = recordItemSelected.division)).company_department in recorDivision.division));
        Set(isDisableProjectTab,!(TypeNature = "Internal" || (TypeNature = "External" && TypeDivison <> "Research")) && recordItemSelected.status in ["APPROVED"]);
        If(TypeNature = "Internal" || (TypeNature = "External" && (TypeDivison <> "Research" || IsEmpty(splitIssuerNotFirst))),
            // Internal và External division # RS || empty data project
            Set(isEnabled,
                If(IsBlank(recordItemSelected) || recordItemSelected.status in ["DRAFT"],
                    If(isCreateUser && isApproveUser,isOwner,
                        isApproveUser,false,
                        isOwner
                    ),
                    recordItemSelected.status in ["SUBMITTED"],false,
                    recordItemSelected.status in ["APPROVED"],
                    If(isCreateUser && isApproveUser,isOwner,
                        isApproveUser,false,
                        isOwner
                    ),
                    false
                )
            );
            ,
            // External divistion = RS và data k empty
            Set(isEnabled,
                If(IsBlank(recordItemSelected) || recordItemSelected.status in ["DRAFT"],
                    If(isCreateUser && isApproveUser,isOwner,
                        isApproveUser,false,
                        isOwner
                    ),
                    recordItemSelected.status in ["SUBMITTED"],
                    If(isCreateUser && isApproveUser,true,
                        isApproveUser,true,
                        false
                    ),
                    recordItemSelected.status in ["APPROVED"],
                    If(isCreateUser && isApproveUser,true,
                        isApproveUser,true,
                        isOwner
                    ),
                    false
                )
            );
            
        );
        Set(isDisable,!(isEnabled && isSameDivision));
        RemoveIf(attachments,name = "" || name = Blank());
        // Reset(AttachFile_3);
        Reset(AttachFile_4);
        If(IsBlank(recordItemSelected),
            ClearCollect(colExternalFiles,[]);
            Reset(ProjectFinancialInformationCheckbox);
        );
        Set(tvsCompany,LookUp(getAllCompanies,Upper(name) = "TVS"));
        //ClearCollect(memberInRS, Filter(employeeByDepartment, (department = "RS" || Upper(department) = "RESEARCH") && company_permission_id = tvsCompany.id));
        Set(rsTVS,LookUp(listDepartment,company_permission_id = tvsCompany.id && Upper(name) = "RESEARCH"));
        Clear(DepartmentsAndCompanies);
        //ForAll(listCompany As c, Collect(DepartmentsAndCompanies, {id:c.id, name: c.name, type: "Company", company_department: ""}));
        ForAll(listDepartment As d,
            Collect(DepartmentsAndCompanies,
                {
                    id: d.id,
                    name: d.name,
                    type: "Department",
                    company_department: d.company_department
                }
            )
        );
        ForAll(NonListPartyExternal As c,
            Collect(DepartmentsAndCompanies,
                {
                    id: c.id,
                    name: c.company_name,
                    type: "Company",
                    is_non_list: true,
                    company_department: c.company_name
                }
            )
        );
        //ClearCollect(HasTags, recordSelected.listHashtag);
        Set(isLoading,false);

    RectQuickActionBar5 As rectangle:
        Height: =56
        Width: =Parent.Width
        ZIndex: =1

    Canvas7 As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =App.Height - 60
        Width: =Parent.Width
        Y: =RectQuickActionBar5.Y + RectQuickActionBar5.Height
        ZIndex: =2

        DataCard7 As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: |-
                =//If(App.Width > 1400, App.Height - 100, App.Width > 800, Switch(DealDetailTab, 1, 1050, 2, 1050), 1050)
                White_Background_8.Height
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

            White_Background_8 As htmlViewer:
                Font: =Font.Arial
                Height: =Switch(DealDetailTab,1, Max(Gallery_share_to.Y + Gallery_share_to.Height, Gallery_hash_tag.Y + Gallery_hash_tag.Height), 3, Container5_2.Y + Container5_2.Height, 2, Gallery6.Y + Gallery6.Height) - Self.Y + 40
                HtmlText: |-
                    ="<div style='width: calc(100% - 16px); height: "& Self.Height - 20 &"px; background-color: white;border-radius: 12px;box-shadow: "& If(Parent.Width > 600, "7px 5px 7px 0px rgba(0, 0, 0, 0.10)", "none") & ";
                    '></div>"
                PaddingRight: =5.00
                PaddingTop: =5.00
                Size: =14.00
                Width: =If(Parent.Width > 800, Parent.Width - If(MobileShowMenu, 285, 85), Parent.Width + 10)
                X: =If(Parent.Width > 600, If(MobileShowMenu, 258, 70), 5)
                Y: =SubHeaderGroup_3.Y + SubHeaderGroup_3.Height + 20
                ZIndex: =1

            label_ticker_ex As htmlViewer:
                Color: =RGBA(82, 82, 82, 1)
                Font: =Font.Arial
                Height: =44
                HtmlText: |-
                    ="<div style=""line-height:30px; font-family: Arial;"">Meeting title <font color=red>*</font></div>"
                Size: =10.5
                Visible: =DealDetailTab = 1
                Width: =label_date_ex.Width
                X: =QT2Tabs_6.X
                Y: =QT2Tabs_6.Y + QT2Tabs_6.Height + 10
                ZIndex: =2

            Input_meeting_title As text:
                BorderColor: =If(IsBlank(Self.Text) && isSubmited, RGBA(214, 27, 27, 1), RGBA(191, 191, 192, 1))
                BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                Default: =recordItemSelected.meeting_title
                DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                FocusedBorderColor: =Self.HoverBorderColor
                FocusedBorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                Font: =Font.Arial
                Height: =44
                HoverFill: =
                LineHeight: =1.5
                MaxLength: =150
                Size: =If(App.Width > 800,10.5,12)
                Visible: =DealDetailTab = 1
                Width: =If(App.Width > 800, White_Background_8.Width - label_ticker_ex.Width - 50, White_Background_8.Width - 50)
                X: =If(App.Width > 800, label_ticker_ex.X + label_ticker_ex.Width , label_ticker_ex.X)
                Y: =label_ticker_ex.Y + If(App.Width > 800, 0, label_ticker_ex.Height)
                ZIndex: =3

            DateOfMeeting_Input_2 As text:
                BorderColor: =RGBA(191, 191, 192, 1)
                BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                Default: =//If(IsBlank(companyInfoDetail), "", companyInfoDetail.company_code)
                DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                FocusedBorderColor: =RGBA(0, 18, 107, 1)
                FocusedBorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                Font: =Font.Arial
                FontWeight: =FontWeight.Lighter
                Height: =44
                HoverFill: =
                LineHeight: =1.5
                Size: =10.5
                Visible: =DealDetailTab = 1
                Width: =If(App.Width > 800,270, White_Background_8.Width - 50)
                X: =If(App.Width > 800, label_date_ex.X + label_date_ex.Width, label_date_ex.X)
                Y: =If(App.Width > 800, label_date_ex.Y, label_date_ex.Y + label_date_ex.Height)
                ZIndex: =4

            "Gallery_Party As gallery.'BrowseLayout_Flexible_SocialFeed_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                BorderColor: =RGBA(191, 191, 192, 1)
                DelayItemLoading: =true
                Height: =Self.AllItemsCount * Self.TemplateHeight + If(TypeNature = "External", Min(CountRows(Filter(attachments, markId = Last(ListPartyExternal).markId)), 3) * 40 - (6 - Self.AllItemsCount) * 40 - If(App.Width < 800, Self.AllItemsCount * 40, 0), If(App.Width > 800, 0, Self.AllItemsCount * 170 + 60))
                Items: =SortByColumns(ListPartyExternal, "party_name")
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                ShowScrollbar: =false
                TemplatePadding: =0
                TemplateSize: =If(TypeNature = "External", If(App.Width > 800, 160 + ShareTo_CR_Input_1.Height, (170 + ShareTo_CR_Input_1.Height)*2), 60)
                Visible: =DealDetailTab = 1
                Width: =White_Background_8.Width - If(App.Width > 800, 50, 10)
                X: =label_party_ex.X
                Y: =label_party_ex.Y + label_party_ex.Height
                ZIndex: =5

                "Gallery9_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                    '#CopilotOverlayLabel': ="Filtered"
                    DisplayMode: =
                    Height: =Min(Self.AllItemsCount, 3) * Self.TemplateHeight
                    Items: =Filter(attachments, markId = GUID(txtMarkId_1.Text))
                    Layout: =Layout.Vertical
                    LoadingSpinner: =LoadingSpinner.Data
                    TemplatePadding: =0
                    TemplateSize: =40
                    Visible: =TypeNature = "External" && CountRows(Filter(attachments, markId = GUID(txtMarkId_1.Text))) > 0
                    Width: =att_21.Width
                    X: =ShareTo_CR_Input_1.X
                    Y: =att_21.Y + att_21.Height
                    ZIndex: =1

                    Button1_9 As button:
                        Align: =Align.Left
                        BorderThickness: =0
                        Color: =RGBA(0, 0, 0, 1)
                        DisabledFill: =RGBA(244, 244, 244, 0)
                        DisplayMode: =If("DOWNLOADFILE" in LookUp(currenUserV2.permissionList, process_code = "Process1.1", action), DisplayMode.Edit, DisplayMode.Disabled)
                        Fill: =RGBA(0, 0, 0, 0)
                        Font: =Font.Arial
                        FontWeight: =FontWeight.Normal
                        HoverColor: =RGBA(56, 96, 178, 1)
                        HoverFill: =
                        OnSelect: |-
                            =Set(urlCR,'TVS->DownloadFileExpTime-V1'.Run(bucketCRAttach,ThisItem.name).url);
                            Launch(urlCR);
                        PaddingLeft: =2
                        PressedColor: =Self.Color
                        PressedFill: =
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10.5
                        Text: =If(Len(ThisItem.name) < If(App.Width > 800, 150, 60), ThisItem.name, Left(ThisItem.name, If(App.Width > 800, 150, 60)) & "...")
                        Width: =Parent.Width - 65
                        X: =30
                        ZIndex: =6

                    HtmlText7_8 As htmlViewer:
                        Font: =Font.Arial
                        HtmlText: |-
                            ="<svg xmlns=""http://www.w3.org/2000/svg"" width=""16"" height=""20"" viewBox=""0 0 16 20"" fill=""none"">
                              <path d=""M10.7503 2.66732H2.50033V17.334H13.5003V5.41732H10.7503V2.66732ZM2.50033 0.833984H11.667L15.3337 4.50065V17.334C15.3337 17.8202 15.1405 18.2865 14.7967 18.6303C14.4529 18.9742 13.9866 19.1673 13.5003 19.1673H2.50033C2.0141 19.1673 1.54778 18.9742 1.20396 18.6303C0.860146 18.2865 0.666992 17.8202 0.666992 17.334V2.66732C0.666992 2.18109 0.860146 1.71477 1.20396 1.37096C1.54778 1.02714 2.0141 0.833984 2.50033 0.833984ZM4.33366 9.08398H11.667V10.9173H4.33366V9.08398ZM4.33366 12.7507H11.667V14.584H4.33366V12.7507Z"" fill=""#114F90""/>
                            </svg>"
                        OnSelect: |-
                            =//Patch(listOthersAttachFile, ThisItem, {IsDeleted: true});
                            //If(!IsBlank(ThisItem.Id),Collect(listOthersAttachDelete,ThisItem));
                        PaddingBottom: =0
                        PaddingRight: =0
                        PaddingTop: =10
                        Width: =30
                        ZIndex: =7

                    RemoveIConReport_VN_2 As icon.Cancel:
                        Color: =RGBA(0, 0, 0, 1)
                        FocusedBorderThickness: =3
                        Height: =18
                        Icon: =Icon.Cancel
                        OnSelect: |-
                            =If(!isDisable, RemoveIf(attachments, name = ThisItem.name);
                                If(ThisItem.id <> Blank() && ThisItem.id <> "", Collect(PartyFileDelete, {id: ThisItem.id}))
                            );
                        Visible: |-
                            =//!isDisable && !IsBlank(ThisItem.id)
                            !isDisable
                        Width: =18
                        X: =Parent.Width - If(App.Width > 800, 33, 30)
                        Y: =11
                        ZIndex: =8

                txtMarkId_1 As label:
                    Font: =Font.Arial
                    Height: =0
                    Text: =ThisItem.markId
                    Width: =20
                    Y: =60
                    ZIndex: =2

                txtPartyId_1 As label:
                    Font: =Font.Arial
                    Text: =ThisItem.id
                    Width: =0
                    X: =60
                    Y: =60
                    ZIndex: =3

                label_party_tvs_1 As htmlViewer:
                    Color: =RGBA(82, 82, 82, 1)
                    Font: =Font.Arial
                    Height: =44
                    HtmlText: |-
                        ="<div style=""line-height:30px"">" & If(ThisItem.party_name <> "A", "(*) ", "") & "Party " & ThisItem.party_name & "<font color=red>*</font></div>"
                    Size: =10.5
                    Width: =If(Checkbox1_1.Visible, 112, 142)
                    X: =Checkbox1_1.X + Checkbox1_1.Width
                    Y: =10
                    ZIndex: =4

                label_member_party_1 As htmlViewer:
                    Color: =RGBA(82, 82, 82, 1)
                    Font: =Font.Arial
                    Height: =44
                    HtmlText: |-
                        ="<div style=""line-height:30px"">Member <font color=red>*</font></div>"
                    Size: =10.5
                    Width: =If(Checkbox1_1.Visible, label_party_tvs_1.Width, label_party_tvs_1.Width - 30)
                    X: =If(App.Width > 800,PartyDropdown.X + PartyDropdown.Width + 30, 0)
                    Y: =PartyDropdown.Y + If(App.Width > 800, 0, PartyDropdown.Height + 10)
                    ZIndex: =5

                att_21 As attachments:
                    BorderColor: =
                    BorderThickness: =0
                    DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                    DropTargetBorderThickness: =0
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    Height: =If(Self.Visible, 90, 0)
                    IsInDataCard: =true
                    Items: =
                    MaxAttachments: =9999
                    MaxAttachmentSize: =50000
                    NoAttachmentsText: =If(Gallery9_1.AllItemsCount > 0, "", "There is nothing attached.")
                    OnAddFile: |
                        =//RemoveIf(attachments, markId = ThisItem.markId);\
                        //Clear(fileTemp);
                        //Clear(fileTemp2);
                        ForAll(Self.Attachments As file, 
                        If(CountIf(attachments, markId = GUID(txtMarkId_1.Text) && name = (Text(Now(), "ddmmyyyy_hhmmss_") & file.Name)) <= 0,
                        Collect(attachments, {name: Text(Now(), "ddmmyyyy_hhmmss_") & file.Name, value: file.Value, markId: ThisItem.markId, partyId:  If(txtPartyId_1.Text = Blank(), "_", txtPartyId_1.Text), file_path: "", container: "" })));
                        UpdateIf(attachments, true, {file_path: urlUploadCRHead & name, container: bucketCRAttach});
                        UpdateIf(ListPartyExternal, markId = ThisItem.markId, {files: Filter(attachments, markId = ThisItem.markId)});
                        //ClearCollect(fileTemp2, GroupBy(fileTemp, "markId", "name", "partyId", "value", "_data"));
                        //RemoveIf(attachments, markId = GUID(txtMarkId_1.Text));
                        //Collect(attachments, DropColumns(fileTemp2, "_data"))
                        //Clear(filesParty);
                        //ForAll(Self.Attachments As file, Collect(filesParty, {name: file.Name, value: file.Value}));
                        //UpdateIf(ListPartyExternal, markId = ThisItem.markId, {files: filesParty});
                    OnRemoveFile: |
                        =//RemoveIf(attachments, markId = ThisItem.markId);
                        ForAll(Self.Attachments As file, Collect(attachments, {name: Text(Now(), "dd/mm/yyyy_hh:mm:ss_") & file.Name, value: file.Value, markId: ThisItem.markId, partyId:  If(txtPartyId_1.Text = Blank(), "_", txtPartyId_1.Text) }));
                        UpdateIf(ListPartyExternal, markId = ThisItem.markId, {files: Filter(attachments, markId = ThisItem.markId)});
                        //Clear(filesParty);
                        //ForAll(Self.Attachments As file, Collect(filesParty, {name: file.Name, value: file.Value}));
                        //UpdateIf(ListPartyExternal, markId = ThisItem.markId, {files: filesParty});
                    PaddingBottom: =5
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    PaddingRight: =5
                    PaddingTop: =5
                    Size: =10.5
                    Tooltip: =
                    Visible: =TypeNature = "External" && !isDisable && ThisItem.markId <> First(SortByColumns(ListPartyExternal, "party_name")).markId
                    Width: =PartyDropdown.Width
                    X: =ShareTo_CR_Input_1.X
                    Y: =ShareTo_CR_Input_1.Y + ShareTo_CR_Input_1.Height - If(Self.NoAttachmentsText = "", 30, 0)
                    ZIndex: =6

                Checkbox1_1 As checkbox:
                    BorderColor: =RGBA(191, 191, 192, 1)
                    CheckboxBorderColor: =RGBA(191, 191, 192, 1)
                    CheckboxSize: =25
                    Default: |-
                        =If(ThisItem.party_name = "A", true,
                            If(Len(ThisItem.value) <= 0 && LookUp(checkList, markId = LookUp(ListPartyExternal, markId = ThisItem.markId).markId).stage, true, 
                                If(CountIf(partyValues, Substitute(ThisItem.value, " ", "") = Substitute(company_department, " ", "")) <= 0, false, true)))
                        //true
                    DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    Height: =30
                    OnCheck: |-
                        =If(CountIf(checkList, markId = ThisItem.markId) <= 0, 
                            Collect(checkList, {markId: ThisItem.markId, stage: true}),
                            UpdateIf(checkList, markId = ThisItem.markId, {markId: ThisItem.markId, stage: true}));
                        RemoveIf(membersAdd, Text(markId) = Text(txtMarkId_1.Text));
                        UpdateIf(ListPartyExternal, Text(markId) = txtMarkId_1.Text, {partyMembers: Filter(allEmployeesNoPaging, id = Blank())}); 
                        UpdateIf(ListPartyExternal, markId = ThisItem.markId, {value: ""});
                        If(txtPartyId_1.Text <> Blank() && txtPartyId_1.Text <> "" && txtPartyId_1.Text <> "_", ForAll(ThisItem.partyMembers As item,  Collect(partyMemberDelete, {partyId: ThisItem.id, value: item.email})));
                        If(txtPartyId_1.Text <> Blank() && txtPartyId_1.Text <> "", ForAll(Filter(attachments, markId = GUID(txtMarkId_1.Text)) As item, Collect(PartyFileDelete, {id: item.id})));
                        RemoveIf(attachments, markId = GUID(txtMarkId_1.Text));
                        Reset(att_21)
                    OnSelect: =
                    OnUncheck: |-
                        =If(CountIf(checkList, markId = ThisItem.markId) <= 0, 
                            Collect(checkList, {markId: ThisItem.markId, stage: false}),
                            UpdateIf(checkList, markId = ThisItem.markId, {markId: ThisItem.markId, stage: false}));
                        RemoveIf(membersAdd, Text(markId) = Text(txtMarkId_1.Text));
                        UpdateIf(ListPartyExternal, Text(markId) = txtMarkId_1.Text, {partyMembers: Filter(allEmployeesNoPaging, id = Blank())});
                        UpdateIf(ListPartyExternal, markId = ThisItem.markId, {value: ""});
                        If(txtPartyId_1.Text <> Blank() && txtPartyId_1.Text <> "" && txtPartyId_1.Text <> "_", ForAll(ThisItem.partyMembers As item,  Collect(partyMemberDelete, {partyId: ThisItem.id, value: item.email})));
                        If(txtPartyId_1.Text <> Blank() && txtPartyId_1.Text <> "", ForAll(Filter(attachments, markId = GUID(txtMarkId_1.Text)) As item, Collect(PartyFileDelete, {id: item.id})));
                        RemoveIf(attachments, markId = GUID(txtMarkId_1.Text));
                        Reset(att_21)
                    Text: =""
                    Visible: =ThisItem.markId <> First(SortByColumns(ListPartyExternal, "party_name")).markId
                    Width: =If(ThisItem.markId <> First(SortByColumns(ListPartyExternal, "party_name")).markId, 30, 0)
                    Y: =label_party_tvs_1.Y + 5
                    ZIndex: =7

                PartyDropdown As button:
                    Align: =Align.Left
                    BorderColor: =If(isSubmited && IsBlank(Self.Text), Color.Red, RGBA(191, 191, 192, 1))
                    BorderThickness: |+
                        =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                        
                    Color: =RGBA(0, 0, 0, 1)
                    DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                    Fill: =RGBA(255, 255, 255, 1)
                    FocusedBorderThickness: |+
                        =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                        
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    Height: =44
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(241, 244, 249, 1)
                    OnSelect: |-
                        =If(!isDisable,
                            ClearCollect(CountCollection, {Count:true, Value: 0, fileCount: 0});
                        
                            ForAll(SortByColumns(ListPartyExternal, "party_name") As party,
                                If(Last(CountCollection).Count,
                                    If(
                                        party.markId = ThisItem.markId,
                                        Collect(CountCollection, {Count: false, Value: Last(CountCollection).Value + 1, fileCount: Last(CountCollection).fileCount}),
                                        Collect(CountCollection, {Count: true, Value: Last(CountCollection).Value + 1, fileCount: Last(CountCollection).fileCount + Min(CountRows(Filter(attachments, markId = party.markId)), 3)})
                                    )
                                )
                            );
                        
                            Set(partyInGalleryDropdownY, Max(Last(CountCollection).Value - 1, 0) * Parent.TemplateHeight + Self.Y + Self.Height + Parent.Y + 5 - If(Last(CountCollection).Value = 1 || TypeNature <> "External", If(App.Width > 800, 0, -Max(Last(CountCollection).Value - 1, 0) * 140) - 5, Max(Last(CountCollection).Value - 1, 0) * If(App.Width > 800, 60, 142) + 80 - Last(CountCollection).fileCount * 40) + If(App.Width > 800, 0, Max(Last(CountCollection).Value - 1, 0) * 10));
                            Set(partyMark, ThisItem.markId);
                        );
                    PaddingLeft: =15
                    PaddingRight: =30
                    PaddingTop: =5.27
                    PressedBorderColor: =
                    PressedColor: =
                    PressedFill: =
                    RadiusBottomLeft: =5
                    RadiusBottomRight: =5
                    RadiusTopLeft: =5
                    RadiusTopRight: =5
                    Size: =If(App.Width > 800,10.5,12)
                    Text: =ThisItem.value
                    Visible: =false
                    Width: |-
                        =// If(App.Width > 800, (Gallery_Party.Width - iconDelete_7.Width - 140) * 0.35, White_Background_8.Width - 50)
                        If(App.Width > 800, (Gallery_Party.Width - label_party_tvs_1.Width - label_member_party_1.Width - Checkbox1_1.Width - iconDelete_7.Width - 80) * 0.5, White_Background_8.Width - 50)
                    X: =If(App.Width > 800,label_party_tvs_1.X + label_party_tvs_1.Width, 1)
                    Y: =label_party_tvs_1.Y + If(App.Width > 800, 0, label_party_tvs_1.Height)
                    ZIndex: =8

                CRParties_Input_dr As text:
                    BorderColor: =If(isSubmited && IsBlank(Self.Text), Color.Red, RGBA(191, 191, 192, 1))
                    BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Default: =ThisItem.value
                    DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                    FocusedBorderColor: =Self.HoverBorderColor
                    FocusedBorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Font: =Font.Arial
                    Height: =44
                    HoverFill: =
                    LineHeight: =1.5
                    OnChange: |-
                        =//If(Checkbox1_1.Value, If(CountIf() > 1, UpdateIf(ListPartyExternal, markId = ThisItem.markId, {value: Self.Text})
                    OnSelect: |-
                        =If(!isDisable,
                            ClearCollect(CountCollection, {Count:true, Value: 0, fileCount: 0});
                        
                            ForAll(SortByColumns(ListPartyExternal, "party_name") As party,
                                If(Last(CountCollection).Count,
                                    If(
                                        party.markId = ThisItem.markId,
                                        Collect(CountCollection, {Count: false, Value: Last(CountCollection).Value + 1, fileCount: Last(CountCollection).fileCount}),
                                        Collect(CountCollection, {Count: true, Value: Last(CountCollection).Value + 1, fileCount: Last(CountCollection).fileCount + Min(CountRows(Filter(attachments, markId = party.markId)), 3)})
                                    )
                                )
                            );
                        
                            Set(partyInGalleryDropdownY, Max(Last(CountCollection).Value - 1, 0) * Parent.TemplateHeight + Self.Y + Self.Height + Parent.Y + 5 - If(Last(CountCollection).Value = 1 || TypeNature <> "External", If(App.Width > 800, 0, -Max(Last(CountCollection).Value - 1, 0) * 140) - 5, Max(Last(CountCollection).Value - 1, 0) * If(App.Width > 800, 60, 142) + 80 - Last(CountCollection).fileCount * 40) + If(App.Width > 800, 0, Max(Last(CountCollection).Value - 1, 0) * 10));
                            Set(partyMark, ThisItem.markId);
                        );
                    Reset: =isResetInputDr
                    Size: =If(App.Width > 800,10.5,12)
                    Visible: =Checkbox1_1.Value = true
                    Width: =PartyDropdown.Width
                    X: =PartyDropdown.X
                    Y: =PartyDropdown.Y
                    ZIndex: =9

                CRTicker_Input As text:
                    BorderColor: =If(isSubmited && IsBlank(Self.Text), Color.Red, RGBA(191, 191, 192, 1))
                    BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Default: =ThisItem.value
                    DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                    FocusedBorderColor: =Self.HoverBorderColor
                    FocusedBorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Font: =Font.Arial
                    Height: =44
                    HoverFill: =
                    LineHeight: =1.5
                    OnChange: |-
                        =UpdateIf(ListPartyExternal, markId = ThisItem.markId, {value: Self.Text});
                    Size: =If(App.Width > 800,10.5,12)
                    Visible: |-
                        =//Checkbox1_1.Value = false && ThisItem.markId <> First(SortByColumns(ListPartyExternal, "party_name")).markId
                        Checkbox1_1.Value = false
                    Width: =PartyDropdown.Width
                    X: =PartyDropdown.X
                    Y: =PartyDropdown.Y
                    ZIndex: =10

                PartyChevron_1 As htmlViewer:
                    Font: =Font.Arial
                    Height: =44
                    HtmlText: |-
                        =If(partyMark = ThisItem.markId,
                        "<div style="""&If(!isDisable, "cursor: pointer")&"""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                        <g clip-path=""url(#clip0_1760_3688)"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill="""&If(isDisable, "#929292","#525252")&"""/>
                        </g>
                        <defs>
                        <clipPath id=""clip0_1760_3688"">
                        <rect width=""24"" height=""24"" fill=""white""/>
                        </clipPath>
                        </defs>
                        </svg></div>"
                        , "<div style="""&If(!isDisable, "cursor: pointer")&"""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill="""&If(isDisable, "#929292","#525252")&"""/>
                        </svg></div>")
                    OnSelect: =Select(PartyDropdown);
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    Size: =11.60
                    Visible: =Checkbox1_1.Value = true
                    Width: =35
                    X: =PartyDropdown.X + PartyDropdown.Width - If(App.Width > 800, 40, 30)
                    Y: =PartyDropdown.Y + 5
                    ZIndex: =11

                ShareTo_CR_Input_1 As text:
                    BorderColor: |-
                        =If(meetingMemberMark = ThisItem.markId,
                         RGBA(0, 18, 107, 1), 
                         If(isSubmited && CountRows(ThisItem.partyMembers) <= 0, Color.Red, RGBA(191, 191, 192, 1)))
                    BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Default: =
                    DisabledBorderColor: =Self.BorderColor
                    DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                    FocusedBorderColor: =RGBA(0, 18, 107, 1)
                    FocusedBorderThickness: |+
                        =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                        
                    Font: =Font.Arial
                    Height: =If(CountRows(ThisItem.partyMembers) > 2, 50, 44)
                    HintText: ="Search ..."
                    HoverBorderColor: =Self.BorderColor
                    HoverFill: =
                    OnChange: |+
                        =If(ThisItem.party_name <> "A" 
                            && CountIf(ShowColumns(Filter(
                        If(First(Filter(ListPartyExternal, markId = meetingMemberMark)).party_name = "A", 
                            Filter(allEmployeesNoPaging, !(id in First(Filter(ListPartyExternal, markId = meetingMemberMark)).partyMembers.id) && (Trim(ShareTo_CR_Input_1.Text) in name || Trim(ShareTo_CR_Input_1.Text) in email) && !(email in Gallery_Party.Selected.partyMembers.email)),
                            //If != A
                            If(!partyValueSelected.external, Filter(allEmployeesNoPaging, !(id in First(Filter(ListPartyExternal, markId = meetingMemberMark)).partyMembers.id) && (Trim(ShareTo_CR_Input_1.Text) in name || Trim(ShareTo_CR_Input_1.Text) in email) && !(email in Gallery_Party.Selected.partyMembers.email)), 
                            Filter(ListCompanyFounder, id_company = partyValueSelected.id_company))), Not(email in ShowColumns(LookUp(ListPartyExternal, markId = ThisItem.markId).partyMembers, email))), email), Self.Text in email) <= 0,
                        
                        Collect(partyMembersAdd, {partyId: Gallery_Party.Selected.id, value: Self.Text});
                        
                        RemoveIf(partyMembersAdd, partyId = "" || partyId = Blank() || partyId = "_");
                        Clear(membersAdd);
                        ClearCollect(membersAdd, AddColumns(Gallery_Party.Selected.partyMembers, markId, meetingMemberMark), {email: Self.Text, id: GUID(), markId: meetingMemberMark, name: ""});
                        
                        UpdateIf(ListPartyExternal, markId = meetingMemberMark, {partyMembers: Filter(membersAdd, markId = meetingMemberMark)});
                        Set(shareToInGalleryDropdownY, -1); // hide dropdown
                        Set(meetingMemberMark, Blank()));
                        
                    OnSelect: |-
                        =If(ThisItem.party_name = "A" || Checkbox1_1.Value,
                            ClearCollect(CountCollection, {Count:true, Value: 0, fileCount: 0});
                        
                            ForAll(SortByColumns(ListPartyExternal, "party_name") As party,
                                If(Last(CountCollection).Count,
                                    If(
                                        party.markId = ThisItem.markId,
                                        Collect(CountCollection, {Count: false, Value: Last(CountCollection).Value + 1, fileCount: Last(CountCollection).fileCount}),
                                        Collect(CountCollection,
                                        {   Count: true,
                                            Value: Last(CountCollection).Value + 1,
                                            fileCount: Last(CountCollection).fileCount + Min(CountRows(Filter(attachments, markId = party.markId)), 3)
                                        })
                                    )
                                )
                            );
                        
                            Set(shareToInGalleryDropdownY, Max(Last(CountCollection).Value - 1, 0) * Parent.TemplateHeight + Self.Y + Self.Height + Parent.Y + 5 - If(Last(CountCollection).Value = 1 || TypeNature <> "External", If(App.Width > 800, 0, -Max(Last(CountCollection).Value - 1, 0) * 140) - 5, Max(Last(CountCollection).Value - 1, 0) * If(App.Width > 800, 60, 142) + 85 - Last(CountCollection).fileCount * 40) + If(App.Width > 800, 0, Max(Last(CountCollection).Value - 1, 0) * 10));
                            Set(meetingMemberMark, ThisItem.markId);,
                            Set(meetingMemberMark, ThisItem.markId);
                        );
                    PaddingLeft: =Min(CountRows(ThisItem.partyMembers), If(App.Width < 1400, 1.3, 2)) * Members_1.TemplateWidth + 10
                    PaddingRight: =40
                    PaddingTop: =5.27
                    PressedBorderColor: =Self.BorderColor
                    PressedFill: =RGBA(244, 244, 244, 1)
                    Size: =If(App.Width > 800,10.5,12)
                    Visible: =DealDetailTab = 1
                    Width: =PartyDropdown.Width
                    X: =If(App.Width > 800, label_member_party_1.X + label_member_party_1.Width, 1)
                    Y: =If(App.Width > 800, label_member_party_1.Y, label_member_party_1.Y + label_member_party_1.Height + ButtonAddContact_7.Height + 10)
                    ZIndex: =12

                "Members_1 As gallery.'BrowseLayout_Horizontal_TwoTextOneImageVariant_ver5.0'":
                    '#CopilotOverlayLabel': ="Filtered"
                    DelayItemLoading: =true
                    DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                    Height: =ShareTo_CR_Input_1.Height
                    Items: =ThisItem.partyMembers
                    TemplatePadding: =0
                    TemplateSize: =120
                    Width: =If(CountRows(ThisItem.partyMembers) > 0, Min(ShareTo_CR_Input_1.Width - 100, If(CountRows(ThisItem.partyMembers) > If(App.Width < 1400, 1, 2), If(App.Width < 1400, 1.3, 2), CountRows(ThisItem.partyMembers)) * Self.TemplateWidth))
                    X: =ShareTo_CR_Input_1.X
                    Y: =ShareTo_CR_Input_1.Y
                    ZIndex: =13

                    Button4_1 As button:
                        BorderColor: =RGBA(0, 0, 0, 1)
                        BorderThickness: =1
                        Color: =RGBA(0, 0, 0, 1)
                        Fill: =RGBA(0, 0, 0, 0)
                        FocusedBorderThickness: =1
                        Font: =Font.Arial
                        FontWeight: =FontWeight.Normal
                        Height: =30
                        HoverColor: =Self.Color
                        HoverFill: =Self.Fill
                        OnSelect: =Select(Parent)
                        PaddingLeft: =20
                        PressedColor: =Self.Color
                        PressedFill: =Self.HoverFill
                        RadiusBottomLeft: =8
                        RadiusBottomRight: =8
                        RadiusTopLeft: =8
                        RadiusTopRight: =8
                        Size: =9
                        Text: =ThisItem.email
                        Tooltip: =ThisItem.email
                        Width: =Parent.TemplateWidth - Self.X - 5
                        X: =10
                        Y: =8
                        ZIndex: =4

                    HtmlText2_19 As htmlViewer:
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        DisabledFill: =RGBA(0, 0, 0, 0)
                        Font: =Font.Arial
                        Height: =32
                        HtmlText: |-
                            ="<div style=""cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""10"" height=""11"" viewBox=""0 0 10 11"" fill=""none"">
                              <g clip-path=""url(#clip0_5576_58443)"">
                                <path d=""M5 0.5C2.21429 0.5 0 2.71429 0 5.5C0 8.28571 2.21429 10.5 5 10.5C7.78571 10.5 10 8.28571 10 5.5C10 2.71429 7.78571 0.5 5 0.5ZM6.92857 8L5 6.07143L3.07143 8L2.5 7.42857L4.42857 5.5L2.5 3.57143L3.07143 3L5 4.92857L6.92857 3L7.5 3.57143L5.57143 5.5L7.5 7.42857L6.92857 8Z"" fill=""black""/>
                              </g>
                              <defs>
                                <clipPath id=""clip0_5576_58443"">
                                  <rect width=""10"" height=""10"" fill=""white"" transform=""translate(0 0.5)""/>
                                </clipPath>
                              </defs>
                            </svg></div>"
                        OnSelect: |-
                            =ClearCollect(memberTemp, Gallery_Party.Selected.partyMembers);
                            RemoveIf(memberTemp, id = ThisItem.id);
                            RemoveIf(membersAdd, id = ThisItem.id && Text(markId) = txtMarkId_1.Text);
                            
                            //RemoveIf(filterDataCompantPEVC, id = ThisItem.id && company_contact_id = "from-input");
                            //If(txtPartyId_1.Text <> Blank(), Collect(partyMemberDelete, {valueMember: ThisItem.email, partyId: txtPartyId_1.Text}));
                            If(txtPartyId_1.Text <> Blank(), Collect(partyMemberDelete, {partyId: txtPartyId_1.Text, value: ThisItem.email}));
                            RemoveIf(partyMemberDelete, partyId = Blank() || partyId = "" || partyId = "_");
                            UpdateIf(ListPartyExternal, markId = Gallery_Party.Selected.markId, {partyMembers: memberTemp})
                        Width: =25
                        X: =Button4_1.X + 2
                        Y: =Button4_1.Y - 2
                        ZIndex: =6

                SubHeaderHr_5 As rectangle:
                    Fill: =RGBA(191, 191, 192, 1)
                    Height: =Members_1.Height
                    Visible: |-
                        =//CountRows(ThisItem.partyMembers) > 0
                        false
                    Width: =0.5
                    X: =Members_1.X + Min(CountRows(ThisItem.partyMembers), 2) * Members_1.TemplateWidth
                    Y: =Members_1.Y
                    ZIndex: =14

                PartyChevron_2 As htmlViewer:
                    Font: =Font.Arial
                    Height: =44
                    HtmlText: |-
                        =If(meetingMemberMark = ThisItem.markId,
                        "<div style="""&If(!isDisable, "cursor: pointer")&"""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                        <g clip-path=""url(#clip0_1760_3688)"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill="""&If(isDisable, "#929292","#525252")&"""/>
                        </g>
                        <defs>
                        <clipPath id=""clip0_1760_3688"">
                        <rect width=""24"" height=""24"" fill=""white""/>
                        </clipPath>
                        </defs>
                        </svg></div>"
                        , "<div style="""&If(!isDisable, "cursor: pointer")&"""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill="""&If(isDisable, "#929292","#525252")&"""/>
                        </svg></div>")
                    OnSelect: =Select(ShareTo_CR_Input_1);
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    Size: =11.60
                    Visible: =Checkbox1_1.Value = true
                    Width: =35
                    X: =ShareTo_CR_Input_1.X + ShareTo_CR_Input_1.Width - If(App.Width > 800, 40, 30)
                    Y: =ShareTo_CR_Input_1.Y + 5
                    ZIndex: =15

                ButtonAddContact_7 As button:
                    BorderStyle: =BorderStyle.None
                    Fill: =RGBA(17, 79, 144, 1)
                    Font: =Font.Arial
                    Height: =If(Self.Visible, 30, 0)
                    OnSelect: |-
                        =Collect(
                            DataTableDetail,
                            {
                                header: ArrayBlankHeader,
                                id: GUID(),
                                type: "input",
                                unit: "",
                                items1: ArrayBlankItemsNew
                            }
                        );
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Text: =""
                    Visible: =DealDetailTab = 1 && !isDisable && ThisItem.markId = Last(SortByColumns(ListPartyExternal, "party_name")).markId
                    Width: =30
                    X: =If(App.Width > 800, ShareTo_CR_Input_1.X + ShareTo_CR_Input_1.Width + 50, 0)
                    Y: =If(App.Width > 800, ShareTo_CR_Input_1.Y + 5, Gallery9_1.Y + Gallery9_1.Height + 5)
                    ZIndex: =16

                HtmlText2_18 As htmlViewer:
                    Font: =Font.Arial
                    Height: =32
                    HtmlText: |-
                        ="<div style=""display:flex ;align-items:center; justify-content: center;width: 30px;height: 30px;cursor:pointer;""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                          <path d=""M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z"" fill=""#FEFEFE""/>
                        </svg></div>"
                    OnSelect: |
                        =If(!isDisable, Set(partyName, ShowColumns(ListPartyExternal, party_name));
                        Set(newPartyName, First(Filter(charUpcaseExternal, Not(Value in partyName))).Value);
                        Set(idTemp, GUID());
                        Collect(ListPartyExternal, [{id: "_", markId: idTemp, party_name: newPartyName, partyMembers: []}]));
                        Collect(checkList, {markId: idTemp, stage: true})
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Visible: =DealDetailTab = 1 && !isDisable && ThisItem.markId = Last(SortByColumns(ListPartyExternal, "party_name")).markId
                    Width: =30
                    X: =ButtonAddContact_7.X
                    Y: =ButtonAddContact_7.Y
                    ZIndex: =17

                iconDelete_7 As htmlViewer:
                    Fill: =
                    Font: =Font.Arial
                    Height: =42
                    HtmlText: |-
                        ="<div style=""display: flex; align-items: center;cursor: pointer; height:"&Self.Height - 2&"px; justify-content: center;""><svg xmlns=""http://www.w3.org/2000/svg"" width=""16"" height=""18"" viewBox=""0 0 16 18"" fill=""none"">
                          <path d=""M3 18C2.45 18 1.979 17.804 1.587 17.412C1.195 17.02 0.999333 16.5493 1 16V3H0V1H5V0H11V1H16V3H15V16C15 16.55 14.804 17.021 14.412 17.413C14.02 17.805 13.5493 18.0007 13 18H3ZM13 3H3V16H13V3ZM5 14H7V5H5V14ZM9 14H11V5H9V14Z"" fill=""#D61B1B""/>
                        </svg></div>"
                    OnSelect: |-
                        =RemoveIf(ListPartyExternal, markId = ThisItem.markId);
                        If(ThisItem.id <> Blank() && ThisItem.id <> "", Collect(PartyDeleted, {id: ThisItem.id}))
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Tooltip: ="Delete"
                    Visible: =!isDisable && First(SortByColumns(ListPartyExternal, "party_name")).markId <> ThisItem.markId && If(TypeNature = "External", Index(SortByColumns(ListPartyExternal, "party_name"), 2).markId <> ThisItem.markId, true)
                    Width: =38
                    X: =If(App.Width > 800, ShareTo_CR_Input_1.X + ShareTo_CR_Input_1.Width + 10, App.Width - Self.Width - 30)
                    Y: =If(App.Width > 800, ShareTo_CR_Input_1.Y, label_party_tvs_1.Y)
                    ZIndex: =18

            HtmlTextUncheck As htmlViewer:
                Font: =Font.Arial
                Height: =If(isDisable, 0, 40)
                HtmlText: |-
                    ="<div style=""line-height:24px; font-family: Arial;""><em>(*) Uncheck to enter data if the party cannot be found.</em></div>"
                Size: =10.5
                Visible: =DealDetailTab = 1
                Width: =If(App.Width > 800, 450, White_Background_8.Width - 50 )
                X: =Gallery_Party.X
                Y: =Gallery_Party.Y + Gallery_Party.Height
                ZIndex: =6

            Label_Text_Uncheck As label:
                Font: =Font.Arial
                Height: =If(isDisable, 0, 40)
                Italic: =true
                Size: =10.5
                Text: ="(*) Uncheck to enter data if the party cannot be found."
                Visible: =false
                Width: =If(App.Width > 800, 450, White_Background_8.Width - 50 )
                X: =Gallery_Party.X
                Y: =Gallery_Party.Y + Gallery_Party.Height
                ZIndex: =7

            DateOfMeeting_DatePicker_2 As datepicker:
                BorderThickness: =0
                DefaultDate: =If(recordItemSelected.date_of_meeting = Blank(), Today(), recordItemSelected.date_of_meeting)
                DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                FocusedBorderThickness: =0
                Font: =Font.Arial
                Format: ="dd/mm/yyyy"
                Height: =DateOfMeeting_Input_2.Height - 6
                IconBackground: =RGBA(56, 96, 178, 0)
                IconFill: =RGBA(0, 0, 0, 1)
                PaddingLeft: =5
                PaddingTop: =5
                Size: =If(App.Width > 800,10.5,12)
                Visible: =DealDetailTab = 1
                Width: =DateOfMeeting_Input_2.Width - 6
                X: =DateOfMeeting_Input_2.X + 3
                Y: =DateOfMeeting_Input_2.Y + 3
                ZIndex: =8

            label_date_ex As htmlViewer:
                Color: =RGBA(82, 82, 82, 1)
                Font: =Font.Arial
                Height: =44
                HtmlText: |-
                    ="<div style=""line-height:30px; font-family: Arial;"">Date of Meeting <font color=red>*</font></div>"
                Size: =10.5
                Visible: =DealDetailTab = 1
                Width: =142
                X: =label_ticker_ex.X
                Y: =Input_meeting_title.Y + Input_meeting_title.Height + 10
                ZIndex: =9

            label_meeting_type_ex As htmlViewer:
                Color: =RGBA(82, 82, 82, 1)
                Font: =Font.Arial
                Height: =44
                HtmlText: |-
                    ="<div style=""line-height:30px; font-family: Arial;"">Meeting type <font color=red>*</font></div>"
                Size: =10.5
                Visible: =DealDetailTab = 1
                Width: =label_date_ex.Width
                X: =label_date_ex.X
                Y: =DateOfMeeting_Input_2.Y + DateOfMeeting_Input_2.Height + 10
                ZIndex: =10

            Label_Summary As htmlViewer:
                Font: =Font.Arial
                Height: =29
                HtmlText: |-
                    ="<div style=""font-weight:700;"">Summary on Meeting Notes <font color=red>*</font></div>"
                Size: =10.5
                Visible: =DealDetailTab = 1
                Width: =255
                X: =Gallery_Party.X
                Y: =Label_Text_Uncheck.Y + Label_Text_Uncheck.Height
                ZIndex: =11

            CRSummaryTitle_Input_2 As text:
                BorderColor: =If(IsBlank(Self.Text) && isSubmited, RGBA(214, 27, 27, 1), RGBA(191, 191, 192, 1))
                BorderThickness: |+
                    =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    
                Default: =recordItemSelected.summary_on_the_meeting_notes
                DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                FocusedBorderColor: =Self.HoverBorderColor
                FocusedBorderThickness: |+
                    =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    
                Font: =Font.Arial
                Height: =200
                HoverFill: =
                LineHeight: =1.5
                MaxLength: =3500
                Mode: =TextMode.MultiLine
                PaddingBottom: =10
                PaddingTop: =10
                RadiusBottomLeft: =8
                RadiusBottomRight: =8
                RadiusTopLeft: =8
                RadiusTopRight: =8
                Size: =If(App.Width > 800,10.5,12)
                Visible: =DealDetailTab = 1
                Width: =White_Background_8.Width - 50
                X: =Label_Summary.X
                Y: =Label_Summary.Y + Label_Summary.Height
                ZIndex: =12

            Button5 As button:
                Font: =Font.Arial
                OnSelect: |-
                    =Clear(ItemValue);
                    ForAll(Gallery_Column_Item_Unit.AllItems As item, Collect(ItemValue, {id: GUID(), item: item.Dropdown_Item.Selected.id, unit: item.Dropdown_Unit.Selected.id}));
                    
                    Clear(Values);
                    Clear(emptyUnit);
                    Clear(emptyItem);
                    Clear(emptyUnitAndColum);
                    Clear(emptyItemAndColumnNumber);
                    ForAll(GalleryItems.AllItems As parent, Collect(Values, 
                        {items: Split(Concat(parent.Gallery_items_hoz.AllItems, inputValue.Text, "#####"), "#####")}));
                    ClearCollect(ItemValueAndValue, Values, ItemValue);
                    Collect(emptyUnit, Filter(ItemValueAndValue, unit = Blank()));
                    Collect(emptyItem, Filter(ItemValueAndValue, unit <> Blank()));
                    ForAll(emptyUnit, 
                        Collect(emptyUnitAndColum, 
                            Last(FirstN(AddColumns(emptyUnit, column, CountRows(emptyUnitAndColum)+1),
                                CountRows(emptyUnitAndColum)+1
                                ) 
                            )
                        ));
                    ForAll(emptyItem, 
                    Collect(emptyItemAndColumnNumber, 
                        Last(FirstN(AddColumns(emptyItem, columnNumber, CountRows(emptyItemAndColumnNumber)+1),
                            CountRows(emptyItemAndColumnNumber)+1
                            ) 
                        )
                    ));
                    UpdateIf(emptyItemAndColumnNumber, true, {items: LookUp(emptyUnitAndColum, column = columnNumber).items});
                    
                    Clear(Quaters);
                    ForAll(Gallery_header_quartar.AllItems As quater, Collect(Quaters, {id: GUID(), value: quater.Dropdown2_5.Selected.label}));
                    
                    ClearCollect(countQuater, RenameColumns(Sequence(CountRows(Quaters), 1), Value, QuaterByIndex));
                    Clear(results);
                    Clear(QuaterIndex);
                    
                    ForAll(emptyItemAndColumnNumber As value,
                        RemoveIf(emptyId, true);
                        RemoveIf(listItems, true);
                        RemoveIf(number, true);
                        RemoveIf(ReadyforExportNumbered, true);
                        Collect(listItems, value.items);
                        Collect(number, countQuater, value.items);
                        Collect(emptyId, Filter(number, QuaterByIndex = Blank()));
                        ForAll(emptyId, 
                        Collect(ReadyforExportNumbered, 
                            Last(FirstN(AddColumns(emptyId, columnNumber, CountRows(ReadyforExportNumbered)+1),
                                CountRows(ReadyforExportNumbered)+1
                                ) 
                            )
                        ));
                        Collect(results, AddColumns(ReadyforExportNumbered, ItemValue, value.id))
                    );
                    
                    ForAll(Quaters, 
                       Collect(QuaterIndex, 
                         Last(FirstN(AddColumns(Quaters, Index, CountRows(QuaterIndex)+1),
                            CountRows(QuaterIndex)+1
                             ) 
                         )
                       )
                    );
                    
                    ClearCollect(valuesConverted, AddColumns(SortByColumns(results, "columnNumber", SortOrder.Ascending), Quater, ""));
                    UpdateIf(valuesConverted, true, {Quater: LookUp(QuaterIndex, Index = columnNumber).value})
                Text: ="getData"
                Visible: =false
                X: =1211
                Y: =540
                ZIndex: =13

            ProjectFinancialInformationCheckbox As checkbox:
                CheckboxBorderColor: =RGBA(59, 113, 202, 1)
                CheckboxSize: =30
                Default: =recordItemSelected.projected_financial_check
                DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                FocusedBorderThickness: =0
                Font: =Font.Arial
                FontWeight: =FontWeight.Bold
                Height: =0
                OnSelect: =
                Size: =12
                Text: ="Projected financial information"
                Visible: =false
                Width: =350
                X: =672
                Y: =20
                ZIndex: =14

            HtmlText2_15 As htmlViewer:
                Font: =Font.Arial
                Height: =32
                HtmlText: |-
                    ="<div style=""display:flex ;align-items:center; justify-content: center;width: 30px;height: 30px;cursor:pointer;""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                      <path d=""M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z"" fill=""#FEFEFE""/>
                    </svg></div>"
                OnSelect: |
                    =Set(gallerySelected, GalleryItems.Selected.id);
                    Clear(valuesInputDetail);
                    ForAll(Filter(GalleryItems.AllItems, id = gallerySelected) As parent, 
                        ForAll(parent.Gallery_items_hoz.AllItems As item, Collect(valuesInputDetail, {id: item.id, value: item.inputValue.Text})));
                    
                    Patch(DataTableDetail, LookUp(DataTableDetail, id = gallerySelected), {items1: valuesInputDetail});
                    
                    Collect(ArrayBlankItemsNew, {id: GUID(),value: ""});
                    Collect(ArrayBlankHeader,{id: GUID(),value: ""});
                    //ClearCollect(DataTempBlankItems, ArrayBlankItemsNew);
                    //ClearCollect(ArrayBlankItemsNew, DataTempBlankItems);
                    ClearCollect(DataTempBlankHeader, ArrayBlankHeader);
                    ClearCollect(ArrayBlankHeader, DataTempBlankHeader);
                    ForAll(DataTableDetail As data, Collect(data.items1, {id: GUID(), value: ""}));
                    
                    ClearCollect(headers, First(DataTableDetail).items1);
                    ClearCollect(First(DataTableDetail).header, Blank());
                    ForAll(headers, Collect(First(DataTableDetail).header, {id: GUID(), value: ""}));
                    ClearCollect(DataTemp, DataTableDetail);
                    ClearCollect(DataTableDetail, DataTemp);
                    
                    ClearCollect(headerData, First(DataTableDetail).header);
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Visible: =DealDetailTab = 3
                Width: =30
                X: =ButtonAddContact_4.X
                Y: =ButtonAddContact_4.Y
                ZIndex: =15

            AttachFile_4 As attachments:
                AddAttachmentText: ="Click here to attach file"
                BorderColor: =
                BorderThickness: =0
                DisplayMode: |-
                    =//If(isProposalView || (!IsBlank(proposalInfoEdit) && !(proposalInfoEdit.proposal_status in ["PARTIALLY_REJECTED", "DRAFT"])) && "UPLOADFILE" in LookUp(currenUserV2.permissionList, process_code = "Process3", action), DisplayMode.Disabled, DisplayMode.Edit)
                    If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                DropTargetBorderThickness: =0
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderThickness: =0
                Font: =Font.Arial
                Height: =If(isDisable, 0, 85 + Max(If(CountRows(Self.Attachments) = 1, 0, CountRows(Self.Attachments) * 30)))
                IsInDataCard: =true
                Items: =
                MaxAttachments: =9999
                MaxAttachmentSize: =maxSizeFile
                NoAttachmentsText: =If(CountRows(Filter(colExternalFiles, IsDeleted <> true)) = 0, "There is nothing attached.", "")
                OnRemoveFile: |-
                    =RemoveIf(colExternalFiles, Id = Blank() || Id = "");
                    
                    ForAll(
                        Self.Attachments As att,
                        Collect(
                            colExternalFiles,
                            {   
                                Id:"",
                                Date: Text(
                                    Today(),
                                    "yyyy-mm-dd hh:mm:ss"
                                ),
                                By:  First(currentUserV2Res).id,
                                Name: Text(Now(), "dd/mm/yyyy_hh:mm:ss_") & att.Name,
                                Value: att.Value,
                                File: {
                                    file: {
                                        contentBytes: att.Value,
                                        name: att.Name
                                    }
                                },
                                IsDeleted: false
                            }
                        )
                    );
                PaddingBottom: =5
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 0, 0)
                PaddingRight: =5
                Size: =10.5
                Tooltip: =
                Visible: =DealDetailTab = 2
                Width: =If(App.Width > 1600, (White_Background_8.Width - 50) * 2/ 3, App.Width > 1400, (White_Background_8.Width - 50) * 2.3/ 3, (White_Background_8.Width - 50))
                X: =AttachmentLabel_1.X
                Y: =AttachmentLabel_1.Y + AttachmentLabel_1.Height
                ZIndex: =16

            AttachmentLabel_1 As label:
                Font: =Font.Arial
                FontWeight: =FontWeight.Bold
                Height: =50
                PaddingBottom: =20
                PaddingTop: =20
                Size: =12
                Text: ="Attachment"
                Visible: =DealDetailTab = 2
                Width: =130
                X: =QT2Tabs_6.X
                Y: =QT2Tabs_6.Y + QT2Tabs_6.Height
                ZIndex: =17

            label_party_ex As label:
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Height: =44
                Size: =10.5
                Text: ="Participating party"
                Visible: =DealDetailTab = 1
                X: =label_meeting_type_ex.X
                Y: =MeetingTypeDropdown.Y + MeetingTypeDropdown.Height + 20
                ZIndex: =18

            "Gallery6 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                DelayItemLoading: =true
                Height: =Self.AllItemsCount * Self.TemplateHeight
                Items: =colExternalFiles
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplatePadding: =0
                TemplateSize: =If(App.Width > 800, 40, 50)
                Visible: =DealDetailTab = 2 && (!IsBlank(recordItemSelected) || !IsBlank(crIdDraft))
                Width: =White_Background_8.Width - 50
                X: =AttachFile_4.X
                Y: =AttachFile_4.Y + AttachFile_4.Height
                ZIndex: =20

                Button1_10 As button:
                    Align: =Align.Left
                    BorderThickness: =0
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledFill: =RGBA(244, 244, 244, 0)
                    DisplayMode: =If("DOWNLOADFILE" in LookUp(currenUserV2.permissionList, process_code = "Process1.1", action), DisplayMode.Edit, DisplayMode.Disabled)
                    Fill: =RGBA(0, 0, 0, 0)
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    HoverColor: =RGBA(56, 96, 178, 1)
                    HoverFill: =
                    OnSelect: |-
                        =Set(urlCR,'TVS->DownloadFileExpTime-V1'.Run(bucketCRAttach,ThisItem.Name).url);
                        Launch(urlCR);
                    PaddingLeft: =2
                    PressedColor: =Self.Color
                    PressedFill: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: =If(Len(ThisItem.Name) < If(App.Width > 800, 150, 30), ThisItem.Name, Left(ThisItem.Name, If(App.Width > 800, 150, 30)) & "...")
                    Width: =Parent.Width * 0.4
                    X: =30
                    ZIndex: =1

                HtmlText7_9 As htmlViewer:
                    Font: =Font.Arial
                    HtmlText: |-
                        ="<svg xmlns=""http://www.w3.org/2000/svg"" width=""16"" height=""20"" viewBox=""0 0 16 20"" fill=""none"">
                          <path d=""M10.7503 2.66732H2.50033V17.334H13.5003V5.41732H10.7503V2.66732ZM2.50033 0.833984H11.667L15.3337 4.50065V17.334C15.3337 17.8202 15.1405 18.2865 14.7967 18.6303C14.4529 18.9742 13.9866 19.1673 13.5003 19.1673H2.50033C2.0141 19.1673 1.54778 18.9742 1.20396 18.6303C0.860146 18.2865 0.666992 17.8202 0.666992 17.334V2.66732C0.666992 2.18109 0.860146 1.71477 1.20396 1.37096C1.54778 1.02714 2.0141 0.833984 2.50033 0.833984ZM4.33366 9.08398H11.667V10.9173H4.33366V9.08398ZM4.33366 12.7507H11.667V14.584H4.33366V12.7507Z"" fill=""#114F90""/>
                        </svg>"
                    OnSelect: |-
                        =//Patch(listOthersAttachFile, ThisItem, {IsDeleted: true});
                        //If(!IsBlank(ThisItem.Id),Collect(listOthersAttachDelete,ThisItem));
                    PaddingBottom: =0
                    PaddingRight: =0
                    PaddingTop: =10
                    Width: =30
                    ZIndex: =2

                Label_By As label:
                    Font: =Font.Arial
                    OnSelect: =Select(Parent)
                    Size: =10.5
                    Text: =ThisItem.By
                    Width: =If(!IsBlank(ThisItem.By), 312, 20)
                    X: =Button1_10.X + Button1_10.Width
                    ZIndex: =3

                RemoveIConReport_VN_3 As icon.Cancel:
                    Color: =RGBA(0, 0, 0, 1)
                    FocusedBorderThickness: =3
                    Height: =18
                    Icon: =Icon.Cancel
                    OnSelect: |-
                        =If(!isDisable,
                        RemoveIf(colExternalFiles, Name = ThisItem.Name);
                        If(ThisItem.Id <> Blank() && ThisItem.Id <> "", Collect(listCommunicationRecordsAttachmentDelete, {Id: ThisItem.Id}))
                        );
                    Visible: |-
                        =//!isDisable && !IsBlank(ThisItem.id)
                        !isDisable
                    Width: =18
                    X: =If(App.Width > 800, Label_By.X + Label_By.Width, Parent.Width - 10 - Self.Width)
                    Y: =11
                    ZIndex: =4

            MeetingTypeDropdown As button:
                Align: =Align.Left
                BorderColor: =If(meetingTypeShowDropdown, RGBA(0, 18, 107, 1), If(IsBlank(Self.Text) && isSubmited, RGBA(214, 27, 27, 1), RGBA(191, 191, 192, 1)))
                BorderThickness: |+
                    =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    
                    
                Color: =RGBA(0, 0, 0, 1)
                DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                Fill: =RGBA(255, 255, 255, 1)
                FocusedBorderColor: =RGBA(0, 18, 107, 1)
                FocusedBorderThickness: |+
                    =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    
                    
                Font: =Font.Arial
                FontWeight: =FontWeight.Normal
                Height: =44
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(241, 244, 249, 1)
                OnSelect: =Set(meetingTypeShowDropdown, !meetingTypeShowDropdown)
                PaddingLeft: =15
                PaddingRight: =30
                PaddingTop: =5.27
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =
                RadiusBottomLeft: =5
                RadiusBottomRight: =5
                RadiusTopLeft: =5
                RadiusTopRight: =5
                Size: =If(App.Width > 800,10.5,12)
                Text: |-
                    =//If(recordItemSelected.meeting_type = Blank(), First(Filter(meetingType, id = meetingTypeValue)).meeting_type, LookUp(meetingType, id = recordItemSelected.meeting_type).meeting_type)
                    LookUp(meetingType, id = meetingTypeValue).meeting_type
                Visible: =DealDetailTab = 1
                Width: =DateOfMeeting_Input_2.Width
                X: =If(App.Width > 800, label_meeting_type_ex.X + label_meeting_type_ex.Width, label_meeting_type_ex.X)
                Y: =If(App.Width > 800, label_meeting_type_ex.Y, label_meeting_type_ex.Y + label_meeting_type_ex.Height)
                ZIndex: =21

            MeetingTypeChevron As htmlViewer:
                Font: =Font.Arial
                Height: =44
                HtmlText: |-
                    =If(meetingTypeShowDropdown,
                    "<div style="""&If(!isDisable, "cursor: pointer")&"""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                    <g clip-path=""url(#clip0_1760_3688)"">
                    <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill="""&If(isDisable, "#929292","#525252")&"""/>
                    </g>
                    <defs>
                    <clipPath id=""clip0_1760_3688"">
                    <rect width=""24"" height=""24"" fill=""white""/>
                    </clipPath>
                    </defs>
                    </svg></div>"
                    , "<div style="""&If(!isDisable, "cursor: pointer")&"""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                    <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill="""&If(isDisable, "#929292","#525252")&"""/>
                    </svg></div>")
                OnSelect: =If(!isDisable, Set(meetingTypeShowDropdown, !meetingTypeShowDropdown))
                PaddingRight: =5.27
                PaddingTop: =5.27
                Size: =11.60
                Visible: =DealDetailTab = 1
                Width: =35
                X: =MeetingTypeDropdown.X + MeetingTypeDropdown.Width - If(App.Width > 800, 35, 30)
                Y: =MeetingTypeDropdown.Y + 5
                ZIndex: =22

            "Gallery_hash_tag As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                Default: =//Filter(DataProcess, dataProcess.Code in Split(empSelect.process_code, "/"))
                Height: =Self.AllItemsCount * 32
                Items: =HasTags
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplatePadding: =0
                TemplateSize: =32
                Visible: =DealDetailTab = 1
                Width: =Hastag_CR_Input.Width
                X: =Hastag_CR_Input.X
                Y: =Hastag_CR_Input.Y + Hastag_CR_Input.Height + 3
                ZIndex: =23

                Label7_14 As label:
                    BorderColor: =RGBA(77, 77, 77, 1)
                    Font: =Font.Arial
                    Height: =32
                    OnSelect: =Select(Parent)
                    Size: =10.5
                    Text: |-
                        =//LookUp(getAllHasTag, id = ThisItem.value).value
                        ThisItem.value
                    Width: =Parent.Width - HtmlText2_17.Width
                    X: =HtmlText2_17.X + HtmlText2_17.Width
                    ZIndex: =1

                HtmlText2_17 As htmlViewer:
                    Font: =Font.Arial
                    Height: =32
                    HtmlText: |-
                        ="<div style=""cursor:pointer;""><svg xmlns=""http://www.w3.org/2000/svg"" width=""10"" height=""11"" viewBox=""0 0 10 11"" fill=""none"">
                          <g clip-path=""url(#clip0_5576_58443)"">
                            <path d=""M5 0.5C2.21429 0.5 0 2.71429 0 5.5C0 8.28571 2.21429 10.5 5 10.5C7.78571 10.5 10 8.28571 10 5.5C10 2.71429 7.78571 0.5 5 0.5ZM6.92857 8L5 6.07143L3.07143 8L2.5 7.42857L4.42857 5.5L2.5 3.57143L3.07143 3L5 4.92857L6.92857 3L7.5 3.57143L5.57143 5.5L7.5 7.42857L6.92857 8Z"" fill=""black""/>
                          </g>
                          <defs>
                            <clipPath id=""clip0_5576_58443"">
                              <rect width=""10"" height=""10"" fill=""white"" transform=""translate(0 0.5)""/>
                            </clipPath>
                          </defs>
                        </svg></div>"
                    OnSelect: |-
                        =If(!isDisable,
                            RemoveIf(HasTags, value = ThisItem.value);
                        If(ThisItem.id <> Blank() && ThisItem.id <> "" && ThisItem.id <> "_", Collect(HasTagsRemove, {id: ThisItem.id}))
                        );
                    Width: =25
                    ZIndex: =2

            Hastags_Label As label:
                BorderColor: =RGBA(89, 0, 0, 1)
                Color: =RGBA(82, 82, 82, 1)
                Font: =Font.Arial
                Height: =44
                PaddingTop: =10
                Size: =10.5
                Text: ="Hashtag"
                Visible: =DealDetailTab = 1
                Width: =Min(142, (White_Background_8.Width - 50) / 4)
                X: =CRSummaryTitle_Input_2.X
                Y: =CRSummaryTitle_Input_2.Y + CRSummaryTitle_Input_2.Height + 20
                ZIndex: =24

            Hastag_CR_Input As text:
                BorderColor: =RGBA(191, 191, 192, 1)
                BorderThickness: |+
                    =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    
                Default: =
                DisabledBorderColor: =Self.BorderColor
                DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                FocusedBorderColor: =RGBA(0, 18, 107, 1)
                FocusedBorderThickness: |+
                    =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    
                Font: =Font.Arial
                Height: =42
                HoverBorderColor: =Self.BorderColor
                HoverFill: =
                OnChange: |-
                    =Collect(HasTags, {value: Self.Text});
                    Set(hastagShowDropdown, false);
                    Reset(Hastag_CR_Input);
                OnSelect: |-
                    =If(TypeInformationNonList = "Research",
                        Set(hastagShowDropdown, Hastag_CR_Items.AllItemsCount > 0);
                        Set(shareToShowDropdown, false);
                    )
                PaddingRight: =5.27
                PaddingTop: =5.27
                PressedBorderColor: =Self.BorderColor
                PressedFill: =RGBA(244, 244, 244, 1)
                Size: =If(App.Width > 800,10.5,12)
                Visible: =DealDetailTab = 1
                Width: =Min(294, (White_Background_8.Width - 50) / 4)
                X: =If(App.Width > 800, Hastags_Label.X + Hastags_Label.Width, Hastags_Label.X)
                Y: =If(App.Width > 800, Hastags_Label.Y, Hastags_Label.Y + Hastags_Label.Height)
                ZIndex: =25

            PartyChevron_hashtag As htmlViewer:
                Font: =Font.Arial
                Height: =44
                HtmlText: |-
                    =If(hastagShowDropdown,
                    "<div style="""&If(!isDisable, "cursor: pointer")&"""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                    <g clip-path=""url(#clip0_1760_3688)"">
                    <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill="""&If(isDisable, "#929292","#525252")&"""/>
                    </g>
                    <defs>
                    <clipPath id=""clip0_1760_3688"">
                    <rect width=""24"" height=""24"" fill=""white""/>
                    </clipPath>
                    </defs>
                    </svg></div>"
                    , "<div style="""&If(!isDisable, "cursor: pointer")&"""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                    <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill="""&If(isDisable, "#929292","#525252")&"""/>
                    </svg></div>")
                OnSelect: |-
                    =If(!isDisable,
                    If(TypeInformationNonList = "Research",
                        If(hastagShowDropdown,
                            Set(hastagShowDropdown, false),
                            Set(hastagShowDropdown, Hastag_CR_Items.AllItemsCount > 0);
                            Set(shareToShowDropdown, false);
                        )
                    ))
                PaddingRight: =5.27
                PaddingTop: =5.27
                Size: =11.60
                Visible: =DealDetailTab = 1 && TypeInformationNonList = "Research"
                Width: =35
                X: =Hastag_CR_Input.X + Hastag_CR_Input.Width - If(App.Width > 800, 40, 30)
                Y: =Hastag_CR_Input.Y + 5
                ZIndex: =26

            "Gallery_share_to As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                Default: =//Filter(DataProcess, dataProcess.Code in Split(empSelect.process_code, "/"))
                DelayItemLoading: =true
                Height: =Self.AllItemsCount * 32
                Items: =ShareTo
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplatePadding: =0
                TemplateSize: =32
                Visible: =DealDetailTab = 1
                Width: =ShareTo_CR_Input.Width
                X: =ShareTo_CR_Input.X
                Y: =ShareTo_CR_Input.Y + ShareTo_CR_Input.Height + 3
                ZIndex: =28

                Label7_13 As label:
                    BorderColor: =RGBA(77, 77, 77, 1)
                    Font: =Font.Arial
                    Height: =32
                    OnSelect: =Select(Parent)
                    Size: =10.5
                    Text: =LookUp(allEmployeesNoPaging, id = ThisItem.value).name
                    Width: =Parent.Width - HtmlText2_16.Width
                    X: =HtmlText2_16.X + HtmlText2_16.Width
                    ZIndex: =1

                HtmlText2_16 As htmlViewer:
                    Font: =Font.Arial
                    Height: =32
                    HtmlText: |-
                        ="<div style=""cursor:pointer;""><svg xmlns=""http://www.w3.org/2000/svg"" width=""10"" height=""11"" viewBox=""0 0 10 11"" fill=""none"">
                          <g clip-path=""url(#clip0_5576_58443)"">
                            <path d=""M5 0.5C2.21429 0.5 0 2.71429 0 5.5C0 8.28571 2.21429 10.5 5 10.5C7.78571 10.5 10 8.28571 10 5.5C10 2.71429 7.78571 0.5 5 0.5ZM6.92857 8L5 6.07143L3.07143 8L2.5 7.42857L4.42857 5.5L2.5 3.57143L3.07143 3L5 4.92857L6.92857 3L7.5 3.57143L5.57143 5.5L7.5 7.42857L6.92857 8Z"" fill=""black""/>
                          </g>
                          <defs>
                            <clipPath id=""clip0_5576_58443"">
                              <rect width=""10"" height=""10"" fill=""white"" transform=""translate(0 0.5)""/>
                            </clipPath>
                          </defs>
                        </svg></div>"
                    OnSelect: |-
                        =If(!isDisable,
                            RemoveIf(ShareTo, value = ThisItem.value);
                        If(ThisItem.id <> Blank() && ThisItem.id <> "" && ThisItem.id <> "_", Collect(ShareToRemove, {id: ThisItem.id}))
                        ); 
                    Width: =25
                    ZIndex: =2

            ShareTo_Label As label:
                BorderColor: =RGBA(89, 0, 0, 1)
                Color: =RGBA(82, 82, 82, 1)
                Font: =Font.Arial
                Height: =44
                PaddingLeft: =0
                PaddingTop: =10
                Size: =10.5
                Text: ="Share to"
                Visible: =DealDetailTab = 1
                Width: =Hastags_Label.Width
                X: =Hastag_CR_Input.X + Hastag_CR_Input.Width + If(App.Width > 800, 60, 30)
                Y: =Hastags_Label.Y
                ZIndex: =29

            ShareTo_CR_Input As text:
                BorderColor: = RGBA(191, 191, 192, 1)
                BorderThickness: |+
                    =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    
                Default: =
                DisabledBorderColor: =Self.BorderColor
                DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                FocusedBorderColor: =RGBA(0, 18, 107, 1)
                FocusedBorderThickness: |+
                    =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    
                Font: =Font.Arial
                Height: =42
                HoverBorderColor: =Self.BorderColor
                HoverFill: =
                OnChange: =
                OnSelect: |-
                    =Set(shareToShowDropdown, ShareTo_CR_Items.AllItemsCount > 0);
                    Set(hastagShowDropdown, false);
                PaddingRight: =5.27
                PaddingTop: =5.27
                PressedBorderColor: =Self.BorderColor
                PressedFill: =RGBA(244, 244, 244, 1)
                Size: =If(App.Width > 800,10.5,12)
                Visible: =DealDetailTab = 1
                Width: =Min(294, (White_Background_8.Width - 50) / 4)
                X: =If(App.Width > 800, ShareTo_Label.X + ShareTo_Label.Width, ShareTo_Label.X)
                Y: =If(App.Width > 800, ShareTo_Label.Y, ShareTo_Label.Y + ShareTo_Label.Height)
                ZIndex: =30

            PartyChevron_ShareTo As htmlViewer:
                Font: =Font.Arial
                Height: =44
                HtmlText: |-
                    =If(shareToShowDropdown,
                    "<div style="""&If(!isDisable, "cursor: pointer")&"""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                    <g clip-path=""url(#clip0_1760_3688)"">
                    <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill="""&If(isDisable, "#929292","#525252")&"""/>
                    </g>
                    <defs>
                    <clipPath id=""clip0_1760_3688"">
                    <rect width=""24"" height=""24"" fill=""white""/>
                    </clipPath>
                    </defs>
                    </svg></div>"
                    , "<div style="""&If(!isDisable, "cursor: pointer")&"""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                    <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill="""&If(isDisable, "#929292","#525252")&"""/>
                    </svg></div>")
                OnSelect: |-
                    =If(!isDisable,
                    If(shareToShowDropdown,
                        Set(shareToShowDropdown, false),
                       Set(shareToShowDropdown, ShareTo_CR_Items.AllItemsCount > 0);
                        Set(hastagShowDropdown, false); 
                    ))
                PaddingRight: =5.27
                PaddingTop: =5.27
                Size: =11.60
                Visible: =DealDetailTab = 1
                Width: =35
                X: =ShareTo_CR_Input.X + ShareTo_CR_Input.Width - If(App.Width > 800, 40, 30)
                Y: =ShareTo_CR_Input.Y + 5
                ZIndex: =31

            HastagCloseDropdownBlur As rectangle:
                Fill: =RGBA(255, 255, 255, 0)
                Height: =DataCard7.Height - Self.Y
                OnSelect: |-
                    =Set(hastagShowDropdown, false);
                    Set(meetingTypeShowDropdown, false);
                    Set(shareToShowDropdown, false);
                    Set(partyInGalleryDropdownY, -1);
                    Set(partyMark, Blank());
                    Set(shareToInGalleryDropdownY, -1);
                    Set(meetingMemberMark, Blank());
                Visible: =Hastag_CR_Items.Visible || !IsBlank(Hastag_CR_Input.Text) || ShareTo_CR_Items.Visible || MeetingTypeItems.Visible || partyInGalleryDropdownY > 0 || shareToInGalleryDropdownY > 0
                Width: =Parent.Width
                ZIndex: =36

            "MeetingTypeItems As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                BorderColor: =RGBA(191, 191, 192, 1)
                BorderThickness: =0.5
                Fill: =RGBA(255, 255, 255, 1)
                Height: =Min(Self.AllItemsCount, 4) * Self.TemplateHeight + 10
                Items: =meetingType
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplatePadding: =0
                TemplateSize: =40
                Visible: =meetingTypeShowDropdown
                Width: =MeetingTypeDropdown.Width
                X: =MeetingTypeDropdown.X
                Y: =MeetingTypeDropdown.Y + 50
                ZIndex: =37

                Button6_37 As button:
                    Align: =Align.Left
                    BorderThickness: =0
                    Color: =RGBA(82, 82, 82, 1)
                    Fill: =If(meetingTypeValue = ThisItem.id, RGBA(241, 244, 249, 1), RGBA(0, 0, 0, 0))
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(241, 244, 249, 1)
                    OnSelect: |
                        =Set(meetingTypeValue, ThisItem.id);
                        //If(recordItemSelected.meeting_type <> Blank(),
                        //Set(selectedId, recordItemSelected.id);
                        //UpdateIf(First(colExternalRecord).listItem, id = selectedId, {meeting_type: meetingTypeValue});
                        //Set(recordItemSelected, LookUp(First(colExternalRecord).listItem, id = selectedId)),
                        //Set(recordItemSelected, Blank());
                        //Set(recordItemSelected, {meeting_type: meetingTypeValue}));
                        Set(meetingTypeShowDropdown, false);
                    PaddingLeft: =15
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    PressedColor: =Self.Color
                    PressedFill: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: =ThisItem.meeting_type
                    Width: =Parent.Width
                    X: =0.00
                    ZIndex: =1

            "MeetingMember_CR_Items_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                BorderColor: =RGBA(191, 191, 192, 1)
                BorderThickness: =0.5
                Fill: =RGBA(255, 255, 255, 1)
                Height: =Min(Self.AllItemsCount, 4) * Self.TemplateHeight + 10
                Items: =Filter(AddColumns(If(First(Filter(ListPartyExternal, markId = partyMark)).party_name = "A", AddColumns(listDepartment, id_company, ""), allDataCompany), company_name_name, company_name&"-"&name), Trim(CRParties_Input_dr.Text) in company_department || Trim(CRParties_Input_dr.Text) in company_name_name)
                Layout: =Layout.Vertical
                LoadingSpinner: =
                TemplatePadding: =0
                TemplateSize: =40
                Visible: =partyInGalleryDropdownY > 0 && Self.AllItemsCount > 0
                Width: =PartyDropdown.Width
                X: =PartyDropdown.X + Gallery_Party.X
                Y: =partyInGalleryDropdownY
                ZIndex: =38

                Button6_33 As button:
                    Align: =Align.Left
                    BorderThickness: =0
                    Color: =RGBA(82, 82, 82, 1)
                    Fill: =If(First(Filter(ListPartyExternal, markId = partyMark)).value = Self.Text, RGBA(241, 244, 249, 1), RGBA(0, 0, 0, 0))
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(241, 244, 249, 1)
                    OnSelect: |-
                        =If(!(ThisItem.company_department in ListPartyExternal.value) || (ThisItem.company_department = LookUp(ListPartyExternal, Text(markId) = txtMarkId_1.Text).value),
                        If(ThisItem.company_department <> LookUp(ListPartyExternal, Text(markId) = txtMarkId_1.Text).value, RemoveIf(membersAdd, Text(markId) = Text(txtMarkId_1.Text)));
                        UpdateIf(ListPartyExternal, Text(markId) = txtMarkId_1.Text, {partyMembers: Filter(allEmployeesNoPaging, id = Blank())});
                        UpdateIf(ListPartyExternal, markId = partyMark, {value: If(IsBlank(ThisItem.name), ThisItem.company_department, ThisItem.company_name &" - "& ThisItem.name)});,
                        UpdateContext({ShowNotification: false});
                        Set(IsError, true); Set(NoticationText,"Do not choose 2 parties with the same value!"); UpdateContext({ShowNotification: true});
                        );
                        Set(partyInGalleryDropdownY, -1); // hide dropdown
                        Set(partyMark, Blank());
                        Set(partyValueSelected, ThisItem);
                        Set(isResetInputDr, true);
                        Set(isResetInputDr, false)
                    PaddingBottom: =5.27
                    PaddingLeft: =10
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    PressedColor: =Self.Color
                    PressedFill: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: =Substitute(If(IsBlank(ThisItem.name), ThisItem.company_department, ThisItem.company_name &" - "& ThisItem.name), Char(10), " ")
                    Width: =Parent.Width
                    X: =0.00
                    ZIndex: =1

            "MeetingMember_CR_Items As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                BorderColor: =RGBA(191, 191, 192, 1)
                BorderThickness: =0.5
                Fill: =RGBA(255, 255, 255, 1)
                Height: =Min(Self.AllItemsCount, 4) * Self.TemplateHeight + 10
                Items: |-
                    =//If(First(Filter(ListPartyExternal, markId = meetingMemberMark)).party_name = "A", 
                    //    Filter(allEmployeesNoPaging, !(id in First(Filter(ListPartyExternal, markId = meetingMemberMark)).partyMembers.id) && (Trim(ShareTo_CR_Input_1.Text) in name || Trim//(ShareTo_CR_Input_1.Text) in email) && !(email in Gallery_Party.Selected.partyMembers.email)),
                     //   If(CountRows(Filter(filterDataCompantPEVC, company_contact_id <> "from-input")) > 0, Filter((AddColumns(Filter(filterDataCompantPEVC, company_contact_id <> "from-input"), "internal_email", "")) As item, !IsBlank(item.email)),
                    //        Filter(allEmployeesNoPaging, !(id in First(Filter(ListPartyExternal, markId = meetingMemberMark)).partyMembers.id) && (Trim(ShareTo_CR_Input_1.Text) in name || Trim(ShareTo_CR_Input_1.Text) in email) && !(email in Gallery_Party.Selected.partyMembers.email))
                    //))
                    Filter(
                    If(First(Filter(ListPartyExternal, markId = meetingMemberMark)).party_name = "A", 
                        Filter(allEmployeesNoPaging, !(id in First(Filter(ListPartyExternal, markId = meetingMemberMark)).partyMembers.id) && (Trim(ShareTo_CR_Input_1.Text) in name || Trim(ShareTo_CR_Input_1.Text) in email) && !(email in Gallery_Party.Selected.partyMembers.email)),
                        //If != A
                        If(!partyValueSelected.external, Filter(allEmployeesNoPaging, !(id in First(Filter(ListPartyExternal, markId = meetingMemberMark)).partyMembers.id) && (Trim(ShareTo_CR_Input_1.Text) in name || Trim(ShareTo_CR_Input_1.Text) in email) && !(email in Gallery_Party.Selected.partyMembers.email)), 
                        Filter(ListCompanyFounder, id_company = partyValueSelected.id_company))), Not(email in ShowColumns(LookUp(ListPartyExternal, Text(markId) = txtMarkId_1.Text).partyMembers, email)))
                        
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplatePadding: =0
                TemplateSize: =50
                Visible: =shareToInGalleryDropdownY > 0 && Self.AllItemsCount > 0 && (Len(CRTicker_Input.Text) > 0 || (PartyDropdown.Text <> "" && PartyDropdown.Text <> Blank()))
                Width: =ShareTo_CR_Input_1.Width
                X: =ShareTo_CR_Input_1.X + Gallery_Party.X
                Y: =shareToInGalleryDropdownY
                ZIndex: =39

                Button6_32 As button:
                    Align: =Align.Left
                    BorderThickness: =0
                    Color: =RGBA(82, 82, 82, 1)
                    Fill: =If(ThisItem in First(Filter(ListPartyExternal, markId = meetingMemberMark)).partyMembers, RGBA(241, 244, 249, 1), RGBA(0, 0, 0, 0))
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    Height: =50
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(241, 244, 249, 1)
                    OnSelect: |+
                        =ClearCollect(partyMembersAdd, {partyId: Gallery_Party.Selected.id, value: ThisItem.email});
                        RemoveIf(partyMembersAdd, partyId = "" || partyId = Blank() || partyId = "_");
                        Clear(membersAdd);
                        ClearCollect(membersAdd, AddColumns(Gallery_Party.Selected.partyMembers, markId, meetingMemberMark), AddColumns(ThisItem, markId, meetingMemberMark));
                        //Collect(membersAdd, );
                        //UpdateIf(ListPartyExternal, markId = meetingMemberMark, {partyMembers: Filter(membersAdd, markId = meetingMemberMark)});
                        UpdateIf(ListPartyExternal, markId = meetingMemberMark, {partyMembers: Filter(membersAdd, markId = meetingMemberMark)});
                        Set(shareToInGalleryDropdownY, -1); // hide dropdown
                        Set(meetingMemberMark, Blank());
                        
                    PaddingBottom: =20
                    PaddingLeft: =15
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    PressedColor: =Self.Color
                    PressedFill: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: =ThisItem.name & " ["&ThisItem.email&"]"
                    Width: =Parent.Width
                    X: =0.00
                    ZIndex: =1

            "Hastag_CR_Items As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                BorderColor: =RGBA(191, 191, 192, 1)
                BorderThickness: =0.5
                DisplayMode: =If(CountRows(Filter(getAllHasTag, Not(value in ShowColumns(HasTags, value)) && (IsBlank(Trim(Hastag_CR_Input.Text)) || Trim(Hastag_CR_Input.Text) in value))) > 0, DisplayMode.Edit, DisplayMode.Disabled)
                Fill: =RGBA(255, 255, 255, 1)
                Height: =Min(Self.AllItemsCount, 4) * Self.TemplateHeight + 10
                Items: |-
                    =If(CountRows(Filter(getAllHasTag, Not(value in ShowColumns(HasTags, value)) && (IsBlank(Trim(Hastag_CR_Input.Text)) || Trim(Hastag_CR_Input.Text) in value))) > 0, Filter(getAllHasTag, Not(value in ShowColumns(HasTags, value)) && (IsBlank(Trim(Hastag_CR_Input.Text)) || Trim(Hastag_CR_Input.Text) in value)), [{id: Blank(), value: "No item"}] )
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplatePadding: =0
                TemplateSize: =40
                Visible: =hastagShowDropdown && Self.AllItemsCount > 0
                Width: =Hastag_CR_Input.Width
                X: =Hastag_CR_Input.X
                Y: =Hastag_CR_Input.Y - Self.Height - 5
                ZIndex: =40

                Button6_36 As button:
                    Align: =Align.Left
                    BorderThickness: =0
                    Color: =RGBA(82, 82, 82, 1)
                    DisabledFill: =RGBA(0, 0, 0, 0)
                    Fill: =If(ThisItem.value in  ShowColumns(HasTags, value), RGBA(241, 244, 249, 1), RGBA(0, 0, 0, 0))
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(241, 244, 249, 1)
                    OnSelect: |-
                        =Collect(HasTags, {value: ThisItem.value});
                        Set(hastagShowDropdown, false);
                        Reset(Hastag_CR_Input);
                    PaddingLeft: =15
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    PressedColor: =Self.Color
                    PressedFill: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: =ThisItem.value
                    Width: =Parent.Width
                    X: =0.00
                    ZIndex: =1

            "ShareTo_CR_Items As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                BorderColor: =RGBA(191, 191, 192, 1)
                BorderThickness: =0.5
                DisplayMode: =If(CountRows(Filter(allEmployeesNoPaging, Not(id in ShowColumns(ShareTo, value)) && (IsBlank(Trim(ShareTo_CR_Input.Text)) || Trim(ShareTo_CR_Input.Text) in name))) > 0, DisplayMode.Edit, DisplayMode.Disabled)
                Fill: =RGBA(255, 255, 255, 1)
                Height: =Min(Self.AllItemsCount, 4) * Self.TemplateHeight + 10
                Items: |-
                    =If(CountRows(Filter(allEmployeesNoPaging, Not(id in ShowColumns(ShareTo, value)) && (IsBlank(Trim(ShareTo_CR_Input.Text)) || Trim(ShareTo_CR_Input.Text) in name))) > 0, Filter(allEmployeesNoPaging, Not(id in ShowColumns(ShareTo, value)) && (IsBlank(Trim(ShareTo_CR_Input.Text)) || Trim(ShareTo_CR_Input.Text) in name)), [{email: "", id: "", internal_email: "", name: "No item"}])
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplatePadding: =0
                TemplateSize: =If(Self.AllItemsCount = 1 && First(Self.AllItems).name = "No item", 30,  55)
                Visible: =shareToShowDropdown
                Width: =ShareTo_CR_Input.Width
                X: =ShareTo_CR_Input.X
                Y: =ShareTo_CR_Input.Y - Self.Height - 5
                ZIndex: =41

                Label6 As label:
                    Font: =Font.Arial
                    Height: =30
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingLeft: =12
                    PaddingTop: =0
                    Size: =9
                    Text: =ThisItem.email
                    Width: =Parent.Width
                    Y: =Label6_1.Y + Label6_1.Height - 5
                    ZIndex: =1

                Label6_1 As label:
                    Font: =Font.Arial
                    Height: =25
                    OnSelect: =Select(Parent)
                    PaddingLeft: =12
                    Size: =10.5
                    Text: =ThisItem.name
                    Width: =Parent.Width
                    Y: =5
                    ZIndex: =2

                Button4 As button:
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =0
                    Color: =RGBA(0, 0, 0, 0)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    DisabledColor: =RGBA(0, 0, 0, 0)
                    DisabledFill: =RGBA(0, 0, 0, 0)
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    Height: =55
                    HoverColor: =RGBA(0, 0, 0, 0)
                    HoverFill: =RGBA(241, 244, 249, 0.5)
                    OnSelect: |-
                        =Collect(ShareTo, {value: ThisItem.id});
                        Set(shareToShowDropdown, false);
                        Reset(ShareTo_CR_Input);
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Text: =""
                    Width: =Parent.Width
                    ZIndex: =3

            QT2Tabs_6 As groupContainer.horizontalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                Height: =If(CR_Tab1_1.Width + CR_Tab3_1.Width + CR_Tab2_1.Width + 20 > App.Width - 20, 52, 47)
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowX: =LayoutOverflow.Scroll
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Width: =Min(CR_Tab1_1.Width + CR_Tab3_1.Width + CR_Tab2_1.Width, App.Width - 50)
                X: =White_Background_8.X + 20
                Y: =White_Background_8.Y + 20
                ZIndex: =42

                CR_Tab1_1 As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    LayoutMinHeight: =47
                    LayoutMinWidth: =250
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =170
                    ZIndex: =1

                    Button8_16 As button:
                        BorderStyle: =BorderStyle.None
                        Color: =If(DealDetailTab = 1, RGBA(14, 63, 115, 1), RGBA(176, 176, 176, 1))
                        Fill: =RGBA(0, 0, 0, 0)
                        Font: =Font.Arial
                        Height: =35
                        HoverColor: =If(DealDetailTab = 1, RGBA(14, 63, 115, 1), RGBA(176, 176, 176, 1))
                        HoverFill: =RGBA(248, 248, 249, 1)
                        OnSelect: =Set(DealDetailTab, 1);
                        PaddingLeft: =0
                        PaddingRight: =0
                        PressedColor: =Self.Color
                        PressedFill: =Self.Fill
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =If(App.Width > 600, 10.5, 10.5)
                        Text: ="Communication records"
                        Tooltip: ="Communication records"
                        Width: =Parent.Width
                        ZIndex: =1

                    BottomBorder1_23 As rectangle:
                        BorderColor: =If(DealDetailTab = 1, RGBA(14,63,115,1),RGBA(176, 176, 176, 1))
                        BorderThickness: =If(DealDetailTab = 1, 2, 0)
                        Fill: =RGBA(246, 246, 246, 1)
                        Height: =If(DealDetailTab = 1, 2, 0)
                        Width: =Parent.Width
                        Y: =38
                        ZIndex: =2

                CR_Tab2_1 As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    LayoutMinHeight: =47
                    LayoutMinWidth: =250
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Visible: =TypeNature = "External" && TypeInformationNonList = "Research"
                    Width: =230
                    ZIndex: =2

                    Button8_19 As button:
                        BorderStyle: =BorderStyle.None
                        Color: =If(DealDetailTab = 3, RGBA(14, 63, 115, 1), RGBA(176, 176, 176, 1))
                        Fill: =RGBA(0, 0, 0, 0)
                        Font: =Font.Arial
                        Height: =35
                        HoverColor: =If(DealDetailTab = 3, RGBA(14, 63, 115, 1), RGBA(176, 176, 176, 1))
                        HoverFill: =RGBA(248, 248, 249, 1)
                        OnSelect: =Set(DealDetailTab, 3);
                        PaddingLeft: =0
                        PaddingRight: =0
                        PressedColor: =Self.Color
                        PressedFill: =Self.Fill
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =If(App.Width > 600, 10.5, 10.5)
                        Text: ="Projected financial information"
                        Tooltip: ="Projected financial information"
                        Width: =Parent.Width
                        ZIndex: =1

                    BottomBorder1_26 As rectangle:
                        BorderColor: =If(DealDetailTab = 3, RGBA(14,63,115,1),RGBA(176, 176, 176, 1))
                        BorderThickness: =If(DealDetailTab = 3, 2, 0)
                        Fill: =RGBA(246, 246, 246, 1)
                        Height: =If(DealDetailTab = 3, 2, 0)
                        Width: =Parent.Width
                        Y: =38
                        ZIndex: =2

                CR_Tab3_1 As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    LayoutMinHeight: =47
                    LayoutMinWidth: =250
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =100
                    ZIndex: =3

                    Button8_20 As button:
                        BorderStyle: =BorderStyle.None
                        Color: =If(DealDetailTab = 2, RGBA(14, 63, 115, 1), RGBA(176, 176, 176, 1))
                        Fill: =RGBA(0, 0, 0, 0)
                        Font: =Font.Arial
                        Height: =35
                        HoverColor: =If(DealDetailTab = 2, RGBA(14, 63, 115, 1), RGBA(176, 176, 176, 1))
                        HoverFill: =RGBA(248, 248, 249, 1)
                        OnSelect: =Set(DealDetailTab, 2);
                        PaddingLeft: =0
                        PaddingRight: =0
                        PressedColor: =Self.Color
                        PressedFill: =Self.Fill
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =If(App.Width > 600, 10.5, 10.5)
                        Text: ="Attachment"
                        Tooltip: ="Attachment"
                        Width: =Parent.Width
                        ZIndex: =1

                    BottomBorder1_27 As rectangle:
                        BorderColor: =If(DealDetailTab = 2, RGBA(14,63,115,1),RGBA(176, 176, 176, 1))
                        BorderThickness: =If(DealDetailTab = 2, 2, 0)
                        Fill: =RGBA(246, 246, 246, 1)
                        Height: =If(DealDetailTab = 2, 2, 0)
                        Width: =Parent.Width
                        Y: =38
                        ZIndex: =2

            Container5_2 As groupContainer.horizontalAutoLayoutContainer:
                DropShadow: =DropShadow.None
                Height: =Gallery_header.Height + (Min(Gallery_body.AllItemsCount, 10) * Gallery_body.TemplateHeight) + 25
                LayoutMode: =LayoutMode.Auto
                LayoutOverflowX: =LayoutOverflow.Scroll
                LayoutOverflowY: =LayoutOverflow.Scroll
                Visible: =DealDetailTab = 3
                Width: =White_Background_8.Width - 50
                X: =Label_input_data_here.X
                Y: =LabelErrorTable.Y + LabelErrorTable.Height + 10
                ZIndex: =44

                Container6_4 As groupContainer.manualLayoutContainer:
                    DropShadow: =DropShadow.None
                    FillPortions: =0
                    Height: =Gallery_header.Height + Gallery_body.Height + 21
                    LayoutMinHeight: =100
                    LayoutMinWidth: =250
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Width: =Gallery_header.Width
                    ZIndex: =1

                    "Gallery_header As gallery.'BrowseLayout_Horizontal_TwoTextOneImageVariant_ver5.0'":
                        '#CopilotOverlayLabel': ="Filtered"
                        DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                        Height: =If(Self.AllItemsCount > 0, 50, 0)
                        Items: =header
                        LoadingSpinner: =LoadingSpinner.Data
                        ShowScrollbar: =false
                        TemplatePadding: =0
                        TemplateSize: =TextInput2_2.Width/2
                        Visible: =DealDetailTab = 3
                        Width: =Self.AllItemsCount * Self.TemplateWidth
                        ZIndex: =1

                        layout_header As rectangle:
                            BorderColor: |-
                                =If(Upper(ThisItem.Value) <> "ITEM CODE" && Upper(ThisItem.Value) <> "ITEM NAME" && Upper(ThisItem.Value) <> "UNIT",
                                    If(Len(ThisItem.Value) = 7 && CountRows(Split(ThisItem.Value, "_")) = 2 
                                    && IsNumeric(Left(ThisItem.Value, 4)) && IsNumeric(Right(ThisItem.Value, 1)) && Mid(ThisItem.Value, 6, 1) = "Q" && Value(Right(ThisItem.Value, 1)) >= 1 && Value(Right(ThisItem.Value, 1)) <= 5,
                                        RGBA(191, 191, 192, 1), Color.Red), RGBA(191, 191, 192, 1))
                            BorderThickness: =0.5
                            Fill: =RGBA(0, 0, 0, 0)
                            Height: =Gallery8.TemplateHeight
                            Width: =TextInput2_2.Width/2
                            ZIndex: =5

                        label_header As label:
                            Font: =Font.Arial
                            Height: =Gallery8.TemplateHeight - 2
                            PaddingBottom: =If(App.Width > 800, 5, 20)
                            PaddingLeft: =10
                            PaddingRight: =10
                            Size: =If(App.Width > 600, 10.5, 9)
                            Text: =ThisItem.Value
                            Width: =layout_header.Width - 2
                            X: =layout_header.X + 1
                            Y: =layout_header.Y + 1
                            ZIndex: =6

                    "Gallery_body As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                        '#CopilotOverlayLabel': ="Filtered"
                        DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                        Height: =Min(Self.AllItemsCount, 10) * Self.TemplateHeight
                        Items: =splitIssuerNotFirst
                        Layout: =Layout.Vertical
                        LoadingSpinner: =LoadingSpinner.Data
                        TemplatePadding: =0
                        TemplateSize: =52
                        Visible: =DealDetailTab = 3
                        Width: =Gallery_header.Width
                        X: =Gallery_header.X
                        Y: =Gallery_header.Y + Gallery_header.Height
                        ZIndex: =2

                        "Gallery_row As gallery.'BrowseLayout_Horizontal_TwoTextOneImageVariant_ver5.0'":
                            '#CopilotOverlayLabel': ="Filtered"
                            Height: =52
                            Items: =Split(ThisItem.Value, "<")
                            LoadingSpinner: =LoadingSpinner.Data
                            ShowScrollbar: =false
                            TemplatePadding: =0
                            TemplateSize: =TextInput2_2.Width/2
                            Width: =Gallery_body.Width
                            ZIndex: =7

                            layout_column_in_row As rectangle:
                                BorderColor: =If(CountRows(splitIssuerNotFirst) = 1 && (First(splitIssuerNotFirst).Value = " < "), RGBA(191, 191, 192, 1), If((ThisItem.Value in ItemValidNotExit || ThisItem.Value in UnitValidNotExit) && Upper(ThisItem.Value) <> "DATA NATURE" && !IsBlank(ThisItem.Value), Color.Red, RGBA(191, 191, 192, 1)))
                                BorderThickness: =0.5
                                Fill: =RGBA(0, 0, 0, 0)
                                Height: =52
                                Width: =TextInput2_2.Width/2
                                ZIndex: =5

                            label_column_in_row As label:
                                Font: =Font.Arial
                                Height: =Gallery8.TemplateHeight - 2
                                PaddingBottom: =If(App.Width > 800, 5, 20)
                                PaddingLeft: =10
                                PaddingRight: =10
                                Size: =If(App.Width > 600, 10.5, 9)
                                Text: |-
                                    =If(Len(If(IsBlank(ThisItem.Value), If(IsBlank(ThisItem.Value), "", ThisItem.Value), ThisItem.Value)) > 40,
                                        Left(If(IsBlank(ThisItem.Value), If(IsBlank(ThisItem.Value), "", ThisItem.Value), ThisItem.Value), 40) & "...",
                                        If(IsBlank(ThisItem.Value), If(IsBlank(ThisItem.Value), "", ThisItem.Value), ThisItem.Value)
                                    )
                                Width: =layout_column_in_row.Width - 2
                                X: =layout_column_in_row.X + 1
                                Y: =layout_column_in_row.Y + 1
                                ZIndex: =6

            Table_ProjectedFI As group:
                Height: =5
                Width: =5
                X: =40
                Y: =40
                ZIndex: =47

                "Gallery_header_1 As gallery.'BrowseLayout_Horizontal_TwoTextOneImageVariant_ver5.0'":
                    '#CopilotOverlayLabel': ="Filtered"
                    DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                    Height: =50
                    Items: =header
                    LoadingSpinner: =LoadingSpinner.Data
                    ShowScrollbar: =false
                    TemplatePadding: =0
                    TemplateSize: =TextInput2_2.Width/2
                    Visible: =DealDetailTab = 3 && ProjectFinancialInformationCheckbox.Value = true
                    Width: =2 * Self.TemplateWidth
                    X: =Label_input_data_here.X
                    Y: =Container5_2.Y
                    ZIndex: =33

                "Gallery_body_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                    '#CopilotOverlayLabel': ="Filtered"
                    DisplayMode: =If(isDisable, DisplayMode.Disabled, DisplayMode.Edit)
                    Height: =Min(Self.AllItemsCount, 10) * Self.TemplateHeight
                    Items: =splitIssuerNotFirst
                    Layout: =Layout.Vertical
                    LoadingSpinner: =LoadingSpinner.Data
                    ShowScrollbar: =false
                    TemplatePadding: =0
                    TemplateSize: =52
                    Visible: =DealDetailTab = 3 && ProjectFinancialInformationCheckbox.Value = true
                    Width: =Gallery_header_1.Width
                    X: =Label_input_data_here.X
                    Y: =Gallery_header_1.Y + Gallery_header_1.Height
                    ZIndex: =34

                LabelErrorTable As label:
                    Color: =RGBA(255, 0, 0, 1)
                    Font: =Font.Arial
                    Height: =If(CountRows(invalidValue) > 0, 40, 0)
                    Italic: =true
                    Size: =10.5
                    Text: ="Invalid data, please check the data again."
                    Visible: =DealDetailTab = 3 && (CountRows(invalidValue) > 0 || !isMissDataNature)
                    Width: =If(App.Width > 800, 450, White_Background_8.Width - 50 )
                    X: =Label_input_data_here.X
                    Y: =LabelNoteAction.Y + (LabelNoteAction.Height * 2) + 3
                    ZIndex: =35

            Input_ProjectedFI As group:
                Height: =5
                Width: =5
                X: =40
                Y: =40
                ZIndex: =48

                TextInput2_2 As text:
                    BorderColor: =RGBA(191, 191, 192, 1)
                    BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Default: =
                    DisplayMode: =If(isDisable || isDisableProjectTab, DisplayMode.Disabled, DisplayMode.Edit)
                    FocusedBorderColor: =Self.HoverBorderColor
                    FocusedBorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Font: =Font.Arial
                    Height: =42
                    HoverFill: =RGBA(186, 202, 226, 0)
                    Mode: =TextMode.MultiLine
                    OnChange: |-
                        =If(!IsBlank(recordItemSelected.id) || !IsBlank(childRecordSelected.id) , Set(isUpdateTable, true));
                        
                        UpdateContext({ShowNotification: false});
                        Clear(invalidValue);
                        If(!IsBlank(Self.Text),
                        Set(
                            splitIssuer,
                            Substitute(
                                Split(
                                    Self.Text,
                                    Char(10)
                                ),
                                Char(9),
                                "<"
                            )
                        );
                        Set(header, Split(First(splitIssuer).Value, "<"));
                        ClearCollect(splitIssuerNotFirst, Filter(splitIssuer, Value <> First(splitIssuer).Value));
                        
                        ClearCollect(Quaters, RenameColumns(Filter(header, Upper(Value) <> "ITEM" && Upper(Value) <> "UNIT"), Value, value));
                        //ForAll(Quaters As quater, 
                            //If(CountRows(splitIssuerNotFirst) = 1 && (First(splitIssuerNotFirst).Value = " < "), RGBA(191, 191, 192, 1), If(quater.Value in ItemValidNotExit || quater.Value in //UnitValidNotExit, Collect(invalidValue, 1), false))
                        //);
                        ClearCollect(DynamicTableValidate, splitIssuerNotFirst);
                        
                        ForAll(DynamicTableValidate As item, Collect(ValidItemTemp, {item: First(Split(item.Value, "<")).Value}));
                        ClearCollect(ItemValidNotExit, Filter(ValidItemTemp, Not(Trim(item) in ShowColumns(listItemConfig, item_code))));
                        ClearCollect(temp1, ValidItemTemp);
                        
                        ForAll(DynamicTableValidate As item, Collect(ValidUnitTemp, {item: Last(FirstN(Split(item.Value, "<"), 3)).Value}));
                        ClearCollect(UnitValidNotExit, Filter(ValidUnitTemp, Not( Trim(item) in ShowColumns(listUnitConfig, unit))));
                        ClearCollect(temp2, ValidUnitTemp);
                        
                        Clear(ValidItemTemp);
                        Clear(ValidUnitTemp);
                        
                        ForAll(allDataCompany As item, Collect(tempPartyValue, {company_department: Substitute(If(IsBlank(item.name), item.company_department, item.company_name &"-"& item.name), Char(9), " ")}));
                        ForAll(header As header, 
                            If(Upper(header.Value) <> "ITEM CODE" && Upper(header.Value) <> "ITEM NAME" && Upper(header.Value) <> "UNIT",
                            If(Len(header.Value) = 7 && CountRows(Split(header.Value, "_")) = 2 
                            && IsNumeric(Left(header.Value, 4)) && IsNumeric(Right(header.Value, 1)) && Mid(header.Value, 6, 1) = "Q" && Value(Right(header.Value, 1)) >= 1 && Value(Right(header.Value, 1)) <= 5, false, Collect(invalidValue, 1)), false)
                        );
                        ClearCollect(partyValues, tempPartyValue);
                        Clear(tempPartyValue);
                        Clear(Values);
                        ForAll(splitIssuerNotFirst As item,
                            ForAll(Split(item.Value, "<") As itemChild,
                                If((itemChild.Value in ItemValidNotExit || itemChild.Value in UnitValidNotExit) && Upper(itemChild.Value) <> "DATA NATURE" && !IsBlank(itemChild.Value), Collect(invalidValue, 1))
                            );
                            RemoveIf(firstSlash, true);
                            RemoveIf(secondSlash, true);
                            Collect(firstSlash, {value: Find("<", item.Value)});
                            Collect(secondSlash, {value: (Find("<", item.Value, First(firstSlash).value + 1))});
                            Collect(Values, {items: Split(Mid(item.Value, First(secondSlash).value + 1, Len(item.Value) - First(secondSlash).value), "<")})
                        );
                        //If(CountRows(invalidValue) > 0, Set(IsError, true); Set(NoticationText,"Table failed!"); UpdateContext({ShowNotification: true}))
                        );
                        If(IsBlank(Last(splitIssuerNotFirst).Value), Remove(splitIssuerNotFirst, Last(splitIssuerNotFirst)));
                        
                        If(Upper(First(Split(First(splitIssuerNotFirst).Value, "<").Value).Value) <> "DATA NATURE", Set(isMissDataNature, true), Set(isMissDataNature, false));
                        
                        Reset(TextInput2_2);
                    Size: =If(App.Width > 800, 10.5, 12)
                    Visible: =DealDetailTab = 3
                    Width: =If(Parent.Width > 800, 350, White_Background_8.Width - 70 - Refresh_table.Width)
                    X: =Label_input_data_here.X + If(App.Width > 800, Label_input_data_here.Width, 0)
                    Y: =Label_input_data_here.Y + If(App.Width > 800, 0,  Label_input_data_here.Height)
                    ZIndex: =19

                Refresh_table As icon.Reload:
                    Color: =RGBA(0, 0, 0, 1)
                    Height: =20
                    Icon: =Icon.Reload
                    OnSelect: |-
                        =ClearCollect(invalidValue, []);
                        Set(header, []);
                        ClearCollect(splitIssuerNotFirst, []);
                    Tooltip: ="Click here to clear data."
                    Visible: =DealDetailTab = 3 && !(isDisable || isDisableProjectTab)
                    Width: =20
                    X: =TextInput2_2.X + TextInput2_2.Width + 10
                    Y: =TextInput2_2.Y + 11
                    ZIndex: =27

                Label_input_data_here As label:
                    Font: =Font.Arial
                    Size: =10.5
                    Text: ="Input data here"
                    Visible: =DealDetailTab = 3
                    Width: =109
                    X: =QT2Tabs_6.X
                    Y: =QT2Tabs_6.Y + QT2Tabs_6.Height
                    ZIndex: =32

                LabelNoteAction As label:
                    Color: =RGBA(82, 82, 82, 1)
                    Font: =Font.Arial
                    Italic: =true
                    Size: =10.5
                    Text: ="Please click outside the screen after pasting the data."
                    Visible: =DealDetailTab = 3
                    Width: =353
                    X: =Label_input_data_here.X
                    Y: =TextInput2_2.Y + TextInput2_2.Height
                    ZIndex: =43

    HeaderQT2List_6 As Header:
        ZIndex: =17

    MenuItemsSideBar_20 As MenuItemsSideBar:
        Height: =Parent.Height - Self.Y
        MenuItems: |-
            =Table(
                {
                    MenuLabel: "Dashboard",
                    MenuIcon: MenuItemsSideBar_20.IconDasboard,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 1,
                    MenuIconDropDown: MenuItemsSideBar_20.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_20.IconDropUp,
                    Submenu: []
                },
                {
                    MenuLabel: "Portal",
                    MenuIcon: MenuItemsSideBar_20.IconSettings,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 2,
                    MenuIconDropDown: MenuItemsSideBar_20.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_20.IconDropUp,
                    Submenu: Table(
                        {
                            MenuLabel: "'Information of non-listed compan",
                            MenuIcon: MenuItemsSideBar_20.IconDasboard,
                            MenuScreenNavigate: Portal,
                            MenuID: 2.1
                        },
                        {
                            MenuLabel: "Comunication Records (Minutes of meeting)",
                            MenuIcon: MenuItemsSideBar_20.IconDasboard,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 2.2
                        },
                        {
                            MenuLabel: "Investment Research",
                            MenuIcon: MenuItemsSideBar_20.IconDasboard,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 2.3
                        }
                    )
                },
                {
                    MenuLabel: "Business process",
                    MenuIcon: MenuItemsSideBar_20.IconFile,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 3,
                    MenuIconDropDown: MenuItemsSideBar_20.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_20.IconDropUp,
                    Submenu: Table(
                        {
                            MenuLabel: "M&A",
                            MenuIcon: MenuItemsSideBar_20.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 3.1
                        },
                        {
                            MenuLabel: "Fixed Income Investment ProcessA",
                            MenuIcon: MenuItemsSideBar_20.IconFile,
                            MenuScreenNavigate: TableProposalQT2,
                            MenuID: 3.2
                        },
                        {
                            MenuLabel: "Margin limit approvalprocess (ad-hoc)",
                            MenuIcon: MenuItemsSideBar_20.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 3.3
                        },
                        {
                            MenuLabel: "PEVC",
                            MenuIcon: MenuItemsSideBar_20.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 3.4
                        }
                    )
                },
                {
                    MenuLabel: "Admin",
                    MenuIcon: MenuItemsSideBar_20.IconSettings,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 4,
                    MenuIconDropDown: MenuItemsSideBar_20.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_20.IconDropUp,
                    Submenu: Table(
                        {
                            MenuLabel: "Manager Authoration&A",
                            MenuIcon: MenuItemsSideBar_20.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 4.1
                        },
                        {
                            MenuLabel: "Decentralization",
                            MenuIcon: MenuItemsSideBar_20.IconFile,
                            MenuScreenNavigate: TableProposalQT2,
                            MenuID: 4.2
                        }
                    )
                }
            )
        Visible: =MobileShowMenu
        Width: =If(App.Width > 800, 240, App.Width)
        Y: =56
        ZIndex: =18

    MenuItemsSideBar_Small_17 As MenuItemsSideBar_Small:
        Height: =Parent.Height - Self.Y
        MenuItems: |-
            =Table(
                {
                    MenuLabel: "Dashboard",
                    MenuIcon: MenuItemsSideBar_Small_17.IconDasboard,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 1,
                    MenuIconDropDown: MenuItemsSideBar_Small_17.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_Small_17.IconDropUp,
                    Submenu: []
                },
                {
                    MenuLabel: "Portal",
                    MenuIcon: MenuItemsSideBar_Small_17.IconSettings,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 2,
                    MenuIconDropDown: MenuItemsSideBar_Small_17.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_Small_17.IconDropUp,
                    Submenu: Table(
                        {
                            MenuLabel: "'Information of non-listed compan",
                            MenuIcon: MenuItemsSideBar_Small_17.IconDasboard,
                            MenuScreenNavigate: Portal,
                            MenuID: 2.1
                        },
                        {
                            MenuLabel: "Comunication Records (Minutes of meeting)",
                            MenuIcon: MenuItemsSideBar_Small_17.IconDasboard,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 2.2
                        },
                        {
                            MenuLabel: "Investment Research",
                            MenuIcon: MenuItemsSideBar_Small_17.IconDasboard,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 2.3
                        }
                    )
                },
                {
                    MenuLabel: "Business process",
                    MenuIcon: MenuItemsSideBar_Small_17.IconFile,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 3,
                    MenuIconDropDown: MenuItemsSideBar_Small_17.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_Small_17.IconDropUp,
                    Submenu: Table(
                        {
                            MenuLabel: "M&A",
                            MenuIcon: MenuItemsSideBar_Small_17.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 3.1
                        },
                        {
                            MenuLabel: "Fixed Income Investment ProcessA",
                            MenuIcon: MenuItemsSideBar_Small_17.IconFile,
                            MenuScreenNavigate: TableProposalQT2,
                            MenuID: 3.2
                        },
                        {
                            MenuLabel: "Margin limit approvalprocess (ad-hoc)",
                            MenuIcon: MenuItemsSideBar_Small_17.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 3.3
                        },
                        {
                            MenuLabel: "PEVC",
                            MenuIcon: MenuItemsSideBar_Small_17.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 3.4
                        }
                    )
                },
                {
                    MenuLabel: "Admin",
                    MenuIcon: MenuItemsSideBar_Small_17.IconSettings,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 4,
                    MenuIconDropDown: MenuItemsSideBar_Small_17.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_Small_17.IconDropUp,
                    Submenu: Table(
                        {
                            MenuLabel: "Manager Authoiation&A",
                            MenuIcon: MenuItemsSideBar_Small_17.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 4.1
                        },
                        {
                            MenuLabel: "Decentralization",
                            MenuIcon: MenuItemsSideBar_Small_17.IconFile,
                            MenuScreenNavigate: TableProposalQT2,
                            MenuID: 4.2
                        }
                    )
                }
            )
        Visible: =App.Width > 800 && !MobileShowMenu
        Y: =56
        ZIndex: =19

    SubHeaderGroup_3 As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =34

        SubHeaderBg_4 As rectangle:
            BorderColor: =RGBA(255, 255, 255, 1)
            Fill: =RGBA(255, 255, 255, 1)
            Height: =56
            Width: =Parent.Width - If(Parent.Width > 800, If(MobileShowMenu, 240, 50), 0)
            X: =If(App.Width < 576, 0, If(MobileShowMenu, MenuItemsSideBar_8.X + MenuItemsSideBar_8.Width, MenuItemsSideBar_Small_12.X + MenuItemsSideBar_Small_12.Width))
            Y: =56
            ZIndex: =3

        IconBack_4 As icon.ArrowLeft:
            Color: =RGBA(0, 0, 0, 1)
            Height: =If(App.Width > 600, 25, 15)
            Icon: =If(App.Width > 600, Icon.ArrowLeft, Icon.ChevronLeft)
            OnSelect: |-
                =Set(DealDetailTab, If(IsBlank(DealDetailTabOld), 1, DealDetailTabOld));
                Navigate(ListCommunicationRecord, ScreenTransition.Fade);
                Reset(CRSummaryTitle_Input_2);
                Reset(Input_meeting_title);
                Reset(DateOfMeeting_DatePicker_2);
                Set(recordItemSelected, Blank());
            Width: =If(App.Width > 600, 25, 25)
            X: =SubHeaderBg_4.X + 10
            Y: =SubHeaderBg_4.Y + If(App.Width > 600, 16, 20)
            ZIndex: =4

        LabelTitle_3 As label:
            Font: =Font.Arial
            FontWeight: =FontWeight.Bold
            Height: =19
            Size: =10.5
            Text: =If(IsBlank(recordItemSelected) && IsBlank(crIdDraft), Input_meeting_title.Text, If(!IsBlank(crIdDraft), crIdDraft, recordItemSelected.id) & " - " & Input_meeting_title.Text)
            Width: =If(btnDelete_3.Visible, btnDelete_3.X, SaveButton_4.X) - Self.X
            Wrap: =false
            X: =IconBack_4.X + IconBack_4.Width + 10
            Y: =IconBack_4.Y - 4
            ZIndex: =5

        LabelSubTitle_3 As label:
            Font: =Font.Arial
            Height: =19
            Size: =If(App.Width > 600, 10.5, 9)
            Text: |-
                =If(App.Width > 600, "Last edited user: ", "")& If(IsBlank(recordItemSelected), currenUserV2.name
                , recordItemSelected.created_by) &" "& If(IsBlank(recordItemSelected), Text(Now(), "dd/mm/yyyy hh:mm:ss"), Text(DateTimeValue(recordItemSelected.write_date),"dd/mm/yyyy hh:mm:ss")) &""
            Width: =LabelTitle_3.Width
            Wrap: =false
            X: =LabelTitle_3.X
            Y: =LabelTitle_3.Y + LabelTitle_3.Height
            ZIndex: =6

        SaveButton_4 As htmlViewer:
            BorderStyle: =BorderStyle.Solid
            Font: =Font.Arial
            Height: =50
            HtmlText: |-
                ="<div style=""width: 40px; height: 38px; display: flex; justify-content: center; align-items: center; border: 1px solid black; border-radius: 5px; cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                  <path d=""M21 7V19C21 19.55 20.804 20.021 20.412 20.413C20.02 20.805 19.5493 21.0007 19 21H5C4.45 21 3.979 20.804 3.587 20.412C3.195 20.02 2.99934 19.5493 3 19V5C3 4.45 3.196 3.979 3.588 3.587C3.98 3.195 4.45067 2.99934 5 3H17L21 7ZM19 7.85L16.15 5H5V19H19V7.85ZM12 18C12.8333 18 13.5417 17.7083 14.125 17.125C14.7083 16.5417 15 15.8333 15 15C15 14.1667 14.7083 13.4583 14.125 12.875C13.5417 12.2917 12.8333 12 12 12C11.1667 12 10.4583 12.2917 9.875 12.875C9.29167 13.4583 9 14.1667 9 15C9 15.8333 9.29167 16.5417 9.875 17.125C10.4583 17.7083 11.1667 18 12 18ZM6 10H15V6H6V10ZM5 7.85V19V5V7.85Z"" fill=""#525252""/>
                </svg></div>"
            OnSelect: |-
                =// files
                RemoveIf(colExternalFiles, Id = Blank() || Id = "");
                ForAll(AttachFile_4.Attachments As att,
                    Collect(colExternalFiles,
                        {   
                            Id:"",
                            Date: Text(Today(),"yyyy-mm-dd hh:mm:ss"),
                            By:  First(currentUserV2Res).id,
                            Name: Text(Now(), "ddmmyyyy_hhmmss_") & att.Name,
                            Value: att.Value,
                            File: {file: {contentBytes: att.Value,name: att.Name}},
                            IsDeleted: false,
                            FilePath: "",
                            Container: ""
                        }
                    )
                );
                UpdateIf(colExternalFiles As f, true, {By: LookUp(allEmployeesNoPaging, id = f.By).name, FilePath: urlUploadCRHead & f.Name, Container: bucketCRAttach});
                
                UpdateContext({ShowNotification: false});
                Set(isLoading, true);
                Set(isSubmited,false);
                //External
                If(TypeNature = "External",
                    Clear(DataValues);
                    Clear(emptyItemNew);
                    Clear(emptyUnitNew);
                    Clear(emptyUnitAndColumNew);
                    Clear(emptyItemAndColumnNumberNew);
                    Clear(DataQuaters);
                    Clear(DataItemUit);
                    Clear(valuesConverted);
                    Clear(results);
                    Clear(QuaterIndex);
                    Clear(DataItemUit);
                    If(CountRows(splitIssuerNotFirst) = 1 && (First(splitIssuerNotFirst).Value = " < "), ClearCollect(splitIssuerNotFirst, Blank()));
                    ForAll(splitIssuerNotFirst As temp, Collect(DataItemUit, 
                    {id: GUID(), index: CountRows(DataItemUit) + 1, 
                    itemCode: First(FirstN(Split(temp.Value, "<"), 1)).Value,
                    item: If(LookUp(listItemConfig,  item_code = First(FirstN(Split(temp.Value, "<"), 1)).Value).id <> "" && LookUp(listItemConfig,  item_code = First(FirstN(Split         (temp.Value, "<"), 1)).Value).id <> Blank(), LookUp(listItemConfig,  item_code = First(FirstN(Split(temp.Value, "<"), 1)).Value).id, "_"),
                    unit: If(LookUp(listUnitConfig,  unit = Last(FirstN(Split(temp.Value, "<"), 3)).Value).id <> "" && LookUp(listUnitConfig,  unit = Last(FirstN(Split(temp.Value, "<"), 3)).Value).id <> Blank(), LookUp(listUnitConfig,  unit = Last(FirstN(Split(temp.Value, "<"), 3)).Value).id, "_"), 
                    type: If(LookUp(listItemConfig,  item_code = First(FirstN(Split(temp.Value, "<"), 1)).Value).data_type <> "" && LookUp(listItemConfig,  item_code = First(FirstN(Split(temp.Value, "<"), 1)).Value).data_type <> Blank(), LookUp(listItemConfig,  item_code = First(FirstN(Split(temp.Value, "<"), 1)).Value).data_type, "_") 
                    }));
                    Clear(DataQuaters);
                    ClearCollect(QuatersTemp, AddColumns(RenameColumns(Filter(header, Upper(Value) <> "ITEM CODE" && Upper(Value) <> "ITEM NAME" && Upper(Value) <> "UNIT"), Value, value), Id, GUID()));
                    ForAll(QuatersTemp As item, Collect(DataQuaters, {id: item.Id, value: item.value, index: CountRows(DataQuaters) + 1}));
                    Clear(DataValues);
                    ForAll(splitIssuerNotFirst As item, 
                    Collect(DataValues, {items: Split(Mid(item.Value, Find("<", item.Value, Find("<", item.Value, Find("<", item.Value, 1) + 1) + 1) + 1, Len(item.Value) - Find("<",   item.Value, Find("<", item.Value, Find("<", item.Value, 1) + 1) + 1)), "<")
                    }));
                //----
                    ClearCollect(ItemValueAndValue, DataValues, DataItemUit);
                        Collect(emptyItemNew, Filter(ItemValueAndValue, unit = Blank() || unit = ""));
                        Collect(emptyUnitNew, Filter(ItemValueAndValue, unit <> Blank() && unit <> ""));
                        ForAll(emptyItemNew, 
                        Collect(emptyUnitAndColumNew,  Last(FirstN(AddColumns(emptyItemNew, column, CountRows(emptyUnitAndColumNew)+1), CountRows(emptyUnitAndColumNew) + 1))
                    ));
                    ForAll(emptyUnitNew, 
                    Collect(emptyItemAndColumnNumberNew, Last(FirstN(AddColumns(emptyUnitNew, columnNumber, CountRows(emptyItemAndColumnNumberNew)+1), CountRows  (emptyItemAndColumnNumberNew)+1))
                    ));
                
                    UpdateIf(emptyItemAndColumnNumberNew, true, {items: LookUp(emptyUnitAndColumNew, column = columnNumber).items});
                    ClearCollect(countQuater, RenameColumns(Sequence(CountRows(DataQuaters), 1), Value, QuaterByIndex));
                
                    ForAll(emptyItemAndColumnNumberNew As value,
                        RemoveIf(emptyId, true);
                        RemoveIf(listItems, true);
                        RemoveIf(number, true);
                        RemoveIf(ReadyforExportNumbered, true);
                        Collect(listItems, value.items);
                        Collect(number, countQuater, value.items);
                        Collect(emptyId, Filter(number, QuaterByIndex = Blank()));
                        ForAll(emptyId, 
                        Collect(ReadyforExportNumbered, 
                            Last(FirstN(AddColumns(emptyId, columnNumber, CountRows(ReadyforExportNumbered)+1),
                                CountRows(ReadyforExportNumbered)+1
                                ) 
                            )
                        ));
                        Collect(results, AddColumns(ReadyforExportNumbered, DataItemUit, value.id))
                    );
                
                    ForAll(DataQuaters, 
                    Collect(QuaterIndex, Last(FirstN(AddColumns(DataQuaters, Index, CountRows(QuaterIndex)+1),CountRows(QuaterIndex) + 1))));
                
                    ClearCollect(valuesConverted, AddColumns(SortByColumns(results, "columnNumber", SortOrder.Ascending), Quater, ""));
                    UpdateIf(valuesConverted, true, {Quater: LookUp(QuaterIndex, Index = columnNumber).id});
                    Clear(InputListPartyExternal);
                    ForAll(Filter(ListPartyExternal, id = Blank() || id = "" || id = "_") As item, Collect(InputListPartyExternal, {id: item.id, markId: item.markId, 
                    partyMembers: item.partyMembers, party_name: item.party_name, value: item.value, files: Filter(Filter(attachments, id = Blank() || id = "_" || id = ""), markId = item.markId)}));
                
                Set(inputDataExternalNew,
                    {
                        division: DivisionSelected.id,
                        meeting_nature: "EXTERNAL",
                        date_of_meeting: Text(DateOfMeeting_DatePicker_2.SelectedDate, "yyyy-mm-dd hh:mm:ss"),
                        meeting_type: If(IsBlank(meetingTypeValue), "", meetingTypeValue),
                        meeting_title: If(IsBlank(Input_meeting_title.Text), "", Input_meeting_title.Text),
                        summary_on_the_meeting_notes: If(IsBlank(CRSummaryTitle_Input_2.Text), "", CRSummaryTitle_Input_2.Text),
                        hasTags: Filter(HasTags, id =  Blank() || id = ""),
                        status: If(IsBlank(recordItemSelected), "DRAFT", recordItemSelected.status),
                        status_view: If(IsBlank(recordItemSelected.status), "DRAFT", If(Upper(recordItemSelected.status) = "SUBMITTED", "Pending approval", Proper(recordItemSelected.status))),
                        listtable: DataItemUit,
                        listAttachment: Filter(colExternalFiles, Id = Blank() || Id = ""),
                        DataQuaters: If(IsEmpty(DataQuaters), [], DataQuaters),
                        DataValues: valuesConverted,
                        shareTo: Filter(ShareTo, id = Blank() || id = ""),
                        listparty: DropColumns(Filter(InputListPartyExternal, id = Blank() || id = "" || id = "_"), id),
                        //remove
                        listCommunicationRecordsAttachmentDelete: Concat(listCommunicationRecordsAttachmentDelete, "'" & Id & "',") & "''",
                        partyFileDelete:  Concat(PartyFileDelete, "'" & id & "',") & "''",
                        hasTagDelete: Concat(HasTagsRemove, "'" & id & "',") & "''",
                        shareToDelete: Concat(ShareToRemove, "'" & id & "',") & "''",
                        partyDelete: Concat(PartyDeleted, "'" & id & "',") & "''",
                        partyMemberDelete: partyMemberDelete,
                        //update
                        listPartyUpdate: Filter(ShowColumns(ListPartyExternal, value, id), id <> Blank() && id <> "" && id <> "_"),
                        //add
                        partyFileAdd: Filter(attachments, (id = Blank() || id = "") && (partyId <> Blank() && partyId <> "" && id <> "_" && partyId <> "_")),
                        partyMemberAdd: partyMembersAdd,
                        division_name: If(IsBlank(divison_name_popup), First(Filter(listDepartment, id = recordItemSelected.division)).company_department, divison_name_popup)
                    });
                
                    Set(resExternal, 'Copyof-TVS->CreateUpadateExternal'.Run(resKeyOpenAll.open, resKeyOpenAll.close, currenUserV2.id, JSON(inputDataExternalNew, JSONFormat.IndentFour),      If(IsBlank(recordItemSelected), If(IsBlank(crIdDraft), "0", crIdDraft), recordItemSelected.id), DivisionSelected.id, "EXTERNAL", If(ProjectFinancialInformationCheckbox.Value, 1, 0), envDEV, envTEST, envUAT1, envUAT2, If(isUpdateTable, isUpdateTable, false)));
                    If(Value(resExternal.status) = 200,
                        Set(crIdDraft, resExternal.id);
                        Reset(AttachFile_4);
                        Set(NoticationText, "Saved successfully!"); UpdateContext({ShowNotification: true});,
                        Set(IsError, true); Set(NoticationText,"Saved failed!"); UpdateContext({ShowNotification: true})
                    ),
                
                If(TypeNature = "Internal",
                Clear(inputPartyData);
                ForAll(Filter(ListPartyExternal, id = Blank() || id = "" || id = "_") As data, Collect(inputPartyData, {id: data.id,party_name: data.party_name, value: data.value, listmember: RenameColumns(RenameColumns(ShowColumns(data.partyMembers, id, email), email, value), id, employee_id)}));
                Set(
                    recordInternal,
                    {
                        division: DivisionSelected.id,
                        meeting_nature: "INTERNAL",
                        meeting_title: If(IsBlank(Input_meeting_title.Text), "", Input_meeting_title.Text),
                        date_of_meeting: Text(
                            DateOfMeeting_DatePicker_2.SelectedDate,
                            "yyyy-mm-dd hh:mm:ss"
                        ),
                        meeting_type: If(IsBlank(meetingTypeValue), "", meetingTypeValue),
                        summary_on_the_meeting_notes: If(IsBlank(CRSummaryTitle_Input_2.Text), "", CRSummaryTitle_Input_2.Text),
                        status: If(isSubmited, "SUBMITTED", "DRAFT"),
                        status_view: If(isSubmited, "Pending approval", "DRAFT"),
                        listAttachment: Filter(colExternalFiles, Id = Blank() || Id = ""),
                        listCommunicationRecordsAttachmentDelete: Concat(listCommunicationRecordsAttachmentDelete, "'" & Id & "',") & "''",
                        listparty: DropColumns(Filter(inputPartyData, id = Blank() || id = "" || id = "_"), id),
                //        listmember: ListParty,
                        partyMemberDelete: partyMemberDelete,
                        hasTags: Filter(HasTags, id =  Blank() || id = ""),
                        listShare: Filter(ShareTo, id = Blank() || id = ""),
                		hasTagDelete: Concat(HasTagsRemove, "'" & id & "',") & "''",
                        shareToDelete: Concat(ShareToRemove, "'" & id & "',") & "''",
                		partyDelete: Concat(PartyDeleted, "'" & id & "',") & "''",
                		listPartyUpdate: Filter(ShowColumns(ListPartyExternal, value, id), id <> Blank() && id <> "" && id <> "_"),
                        partyMemberAdd: partyMembersAdd,
                        division_name: If(IsBlank(divison_name_popup), First(Filter(listDepartment, id = recordItemSelected.division)).company_department, divison_name_popup)
                    }
                );
                
                    Set(resInternal, 'Copyof-TVS->InsertUpdateRecordsRI'.Run(resKeyOpenAll.open, resKeyOpenAll.close, currenUserV2.id, 
                        JSON(recordInternal, JSONFormat.IndentFour), If(IsBlank(recordItemSelected), If(IsBlank(crIdDraft), "0", crIdDraft), recordItemSelected.id), DivisionSelected.id, "INTERNAL", 0, envDEV, envTEST, envUAT1, envUAT2));
                    );
                
                    If(Value(resInternal.status) = 200,
                        Set(crIdDraft, resInternal.id);
                        Reset(AttachFile_4);
                        Set(NoticationText,"Saved successfully!"); UpdateContext({ShowNotification: true});,
                        Set(IsError, true); Set(NoticationText,"Saved failed!"); UpdateContext({ShowNotification: true})
                    )
                );
                
                Concurrent(
                    ForAll(Filter(attachments, id = "" || id = Blank() || id = "_") As item, AzureBlobStorage.CreateFile(bucketCRAttach, item.name, item.value)),
                    ForAll(colExternalFiles As item2, AzureBlobStorage.CreateFile(bucketCRAttach,item2.Name, item2.Value))
                );
                
                Clear(PartyFileDelete);
                Clear(listCommunicationRecordsAttachmentDelete);
                Clear(HasTagsRemove);
                Clear(ShareToRemove);
                Clear(PartyDeleted);
                Clear(listAttachmentInsert);
                Clear(listAttachmentDelete);
                Clear(partyMembersAdd);
                Clear(partyMemberDelete);
                Clear(colExternalFiles);
                
                Set(isUpdateTable, false);
                // check data re-call
                If(!IsBlank(crIdDraft),
                ////---External
                If(TypeNature = "External",
                Concurrent(
                ClearCollect(NonListPartyExternal, AddColumns('TVS->GetAllCompanyInformation'.Run(resKeyOpenAll.open,resKeyOpenAll.close, envDEV, envTEST, envUAT1, envUAT2), type, "company")),
                Set(ListItemUnitConfig, 'TVS->GetAllItemUnitConfig'.Run(resKeyOpenAll.open,resKeyOpenAll.close, envDEV, envTEST, envUAT1, envUAT2)),
                    Set(childRecordSelected, 'TVS->FindCommunicationRecordsByIdExternal'.Run(resKeyOpenAll.open, resKeyOpenAll.close, crIdDraft, envDEV, envTEST, envUAT1, envUAT2)));
                    ClearCollect(HasTags, childRecordSelected.has_tag);
                    ClearCollect(ShareTo, childRecordSelected.share_to);
                    ClearCollect(colExternalFiles, RenameColumns(RenameColumns(RenameColumns(RenameColumns(childRecordSelected.attachment, created_date, Date), file_name, Name), created_by, By), id, Id));
                    UpdateIf(colExternalFiles As f, true, {By: LookUp(allEmployeesNoPaging, id = f.By).name});
                    Reset(AttachFile_3);
                
                    ClearCollect(ListPartyExternal, ShowColumns(RenameColumns(GroupBy(childRecordSelected.party, id, party_name, party_value, _data), party_value, value), id, party_name, value));
                    UpdateIf(ListPartyExternal As item, true, {
                    markId: GUID(),
                    partyMembers: AddColumns(RenameColumns(
                        ShowColumns(GroupBy(Filter(childRecordSelected.party, id = item.id && member_id <> Blank()), member_value, member_id, party_value, _data), member_value, member_id, party_value), member_value, email), id, GUID(), internal_email, "", name, "")
                    });
                    RenameColumns(ShowColumns(childRecordSelected.party, member_value), member_value, email);
                    Clear(attachments);
                    ForAll(Filter(GroupBy(childRecordSelected.party, file_id, file_name, id, _data), !IsBlank(file_id)) As p, Collect(attachments, {id: p.file_id, name: p.file_name, markId: LookUp(ListPartyExternal, id = p.id).markId}))
                );
                
                ////---Internal
                Clear(partyItems);
                If(TypeNature = "Internal", 
                Concurrent(
                ClearCollect(NonListPartyExternal, AddColumns('TVS->GetAllCompanyInformation'.Run(resKeyOpenAll.open,resKeyOpenAll.close, envDEV, envTEST, envUAT1, envUAT2), type, "company")),
                Set(ListItemUnitConfig, 'TVS->GetAllItemUnitConfig'.Run(resKeyOpenAll.open,resKeyOpenAll.close, envDEV, envTEST, envUAT1, envUAT2)),
                    Set(recordInternalSelected, 'TVS->FindByIdInternalRecord'.Run(resKeyOpenAll.open, resKeyOpenAll.close, crIdDraft, envDEV, envTEST, envUAT1, envUAT2)));
                    ClearCollect(partyGroup, GroupBy(recordInternalSelected.parties, id, party_name, value, created_date, partyMembers));
                
                    ForAll(partyGroup As data,
                    Collect(partyItems, {id: data.id, party_name: data.party_name, value: data.value, created_date: data.created_date, 
                    partyMembers: AddColumns(RenameColumns(Filter(data.partyMembers As item, item.member <> Blank()), member, email), id, "", internal_email, "", name, "")
                    }));
                    ClearCollect(colExternalFiles, RenameColumns(RenameColumns(RenameColumns(RenameColumns(recordInternalSelected.attachments, created_date, Date), file_name, Name), created_by, By), id, Id));
                    UpdateIf(colExternalFiles As f, true, {By: LookUp(allEmployeesNoPaging, id = f.By).name});
                    ClearCollect(ListPartyExternal, partyItems);
                    UpdateIf(ListPartyExternal, true, {markId: GUID()});
                    ClearCollect(HasTags, recordInternalSelected.hasTags);
                    ClearCollect(ShareTo, recordInternalSelected.shareTo)
                );
                
                //Set dataCommon
                If(!IsBlank(recordItemSelected),
                    Set(meetingTypeValue, recordItemSelected.meeting_type);
                );
                
                ClearCollect(colInternalFiles, RenameColumns(RenameColumns(RenameColumns(recordInternalSelected.attachments, file_name, Name), created_date, Date), created_by, By));
                UpdateIf(colInternalFiles As f, true, {By: LookUp(allEmployeesNoPaging, id = f.By).name})
                );
                Set(isLoading, false);
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Visible: |-
                =// ((isCreateUser && isOwner && (IsBlank(recordItemSelected) || recordItemSelected.status in ["DRAFT"])) || (isApproveUser && recordItemSelected.status in ["SUBMITTED"])) && !isDisable
                ((!isDisable && btnSubmit_3.Text <> "Re-Submit") || (!(TypeNature = "Internal" || (TypeNature = "External" && (TypeDivison <> "Research" || IsEmpty(splitIssuerNotFirst)))) && recordItemSelected.status in ["APPROVED"] && isApproveUser)) && isSameDivision && !isLoadingOnStart
            Width: =43
            X: =If(btnReject_3.Visible, btnReject_3.X, btnSubmit_3.Visible, btnSubmit_3.X, btnSubmit_3.X + btnSubmit_3.Width + 10) - Self.Width - 8
            Y: =SubHeaderBg_4.Y + SubHeaderBg_4.Height*0.5 - Self.Height*0.5 + 5
            ZIndex: =7

        btnSubmit_3 As button:
            BorderColor: =Self.Fill
            BorderThickness: =0
            DisabledFill: =Self.Fill
            Fill: =RGBA(17, 79, 144, 1)
            FocusedBorderThickness: =0
            Font: =Font.Arial
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            OnSelect: |-
                =UpdateContext({ShowNotification: false});
                Set(isSubmited,true);
                // files
                RemoveIf(colExternalFiles, Id = Blank() || Id = "");
                ForAll(AttachFile_4.Attachments As att,
                    Collect(colExternalFiles,
                        {   
                            Id:"",
                            Date: Text(Today(),"yyyy-mm-dd hh:mm:ss"),
                            By:  First(currentUserV2Res).id,
                            Name: Text(Now(), "ddmmyyyy_hhmmss_") & att.Name,
                            Value: att.Value,
                            File: {file: {contentBytes: att.Value,name: att.Name}},
                            IsDeleted: false,
                            FilePath: "",
                            Container: ""
                        }
                    )
                );
                UpdateIf(colExternalFiles, true, {FilePath: urlUploadCRHead & Name, Container: bucketCRAttach});
                If(!IsBlank(recordItemSelected), 
                    ForAll(splitIssuerNotFirst As item,
                        ForAll(Split(item.Value, "<") As itemChild,
                            If((itemChild.Value in ItemValidNotExit || itemChild.Value in UnitValidNotExit) && Upper(itemChild.Value) <> "DATA NATURE" && !IsBlank(itemChild.Value),    Collect(invalidValue, 1))
                        );
                        RemoveIf(firstSlash, true);
                        RemoveIf(secondSlash, true);
                        Collect(firstSlash, {value: Find("<", item.Value)});
                        Collect(secondSlash, {value: (Find("<", item.Value, First(firstSlash).value + 1))});
                        Collect(Values, {items: Split(Mid(item.Value, First(secondSlash).value + 1, Len(item.Value) - First(secondSlash).value), "<")})
                    );
                    ForAll(header As header, 
                        If(Upper(header.Value) <> "ITEM CODE" && Upper(header.Value) <> "ITEM NAME" && Upper(header.Value) <> "UNIT",
                        If(Len(header.Value) = 7 && CountRows(Split(header.Value, "_")) = 2 
                        && IsNumeric(Left(header.Value, 4)) && IsNumeric(Right(header.Value, 1)) && Mid(header.Value, 6, 1) = "Q" && Value(Right(header.Value, 1)) >= 1 && Value(Right(header.Value, 1)) <= 5, false, Collect(invalidValue, 1)), false)
                    );
                );
                
                //Validate
                If(
                    IsBlank(Trim(Input_meeting_title.Text)), Set(IsError, true); Set(NoticationText,"Meeting title is required!"); UpdateContext({ShowNotification: true}),
                    IsBlank(Trim(MeetingTypeDropdown.Text)), Set(IsError, true); Set(NoticationText,"Meeting type is required!"); UpdateContext({ShowNotification: true}),
                    CountIf(ListPartyExternal, CountRows(partyMembers) <= 0) > 0, Set(IsError, true); Set(NoticationText,"Party Members is required!"); UpdateContext({ShowNotification: true}),
                    CountIf(ListPartyExternal, IsBlank(value)) > 0, Set(IsError, true); Set(NoticationText,"Party is required!"); UpdateContext({ShowNotification: true}),
                    IsBlank(Trim(CRSummaryTitle_Input_2.Text)), Set(IsError, true); Set(NoticationText,"Summary on Meeting Notes is required!"); UpdateContext({ShowNotification: true}),
                    CountRows(invalidValue) > 0, Set(IsError, true); Set(NoticationText,"Invalid data, please check the data again."); UpdateContext({ShowNotification: true}),
                    true,
                Set(isLoading, true);
                //External
                If(TypeNature = "External",
                    If(CountRows(splitIssuerNotFirst) = 1 && (First(splitIssuerNotFirst).Value = " < "), ClearCollect(splitIssuerNotFirst, Blank()));
                    ForAll(splitIssuerNotFirst As temp, Collect(DataItemUit, 
                    {id: GUID(), index: CountRows(DataItemUit) + 1, 
                    itemCode: First(FirstN(Split(temp.Value, "<"), 1)).Value, item: If(LookUp(listItemConfig,  item_code = First(FirstN(Split(temp.Value, "<"), 1)).Value).id <> "" && LookUp(listItemConfig,  item_code = First(FirstN(Split(temp.Value, "<"), 1)).Value).id <> Blank(), LookUp(listItemConfig,  item_code = First(FirstN(Split(temp.Value, "<"), 1)).Value).id, "_"),
                
                unit: If(LookUp(listUnitConfig,  unit = Last(FirstN(Split(temp.Value, "<"), 3)).Value).id <> "" && LookUp(listUnitConfig,  unit = Last(FirstN(Split(temp.Value, "<"), 3)).Value).id <> Blank(), LookUp(listUnitConfig,  unit = Last(FirstN(Split(temp.Value, "<"), 3)).Value).id, "_"), 
                
                type: If(LookUp(listItemConfig,  item_code = First(FirstN(Split(temp.Value, "<"), 1)).Value).data_type <> "" && LookUp(listItemConfig,  item_code = First(FirstN(Split(temp.Value, "<"), 1)).Value).data_type <> Blank(), LookUp(listItemConfig,  item_code = First(FirstN(Split(temp.Value, "<"), 1)).Value).data_type, "_") 
                }));
                
                Clear(DataQuaters);
                ClearCollect(QuatersTemp, AddColumns(RenameColumns(Filter(header, Upper(Value) <> "ITEM CODE" && Upper(Value) <> "ITEM NAME" && Upper(Value) <> "UNIT"), Value, value), Id, GUID()));
                ForAll(QuatersTemp As item, Collect(DataQuaters, {id: item.Id, value: item.value, index: CountRows(DataQuaters) + 1}));
                
                Clear(DataValues);
                ForAll(splitIssuerNotFirst As item, 
                    Collect(DataValues, {items: Split(Mid(item.Value, Find("<", item.Value, Find("<", item.Value, Find("<", item.Value, 1) + 1) + 1) + 1, Len(item.Value) - Find("<", item.Value, Find("<", item.Value, Find("<", item.Value, 1) + 1) + 1)), "<")
                    }));
                //----
                
                ClearCollect(ItemValueAndValue, DataValues, DataItemUit);
                Collect(emptyItemNew, Filter(ItemValueAndValue, unit = Blank() || unit = ""));
                Collect(emptyUnitNew, Filter(ItemValueAndValue, unit <> Blank() && unit <> ""));
                ForAll(emptyItemNew, 
                    Collect(emptyUnitAndColumNew,  Last(FirstN(AddColumns(emptyItemNew, column, CountRows(emptyUnitAndColumNew)+1), CountRows(emptyUnitAndColumNew) + 1))
                ));
                ForAll(emptyUnitNew, 
                Collect(emptyItemAndColumnNumberNew, Last(FirstN(AddColumns(emptyUnitNew, columnNumber, CountRows(emptyItemAndColumnNumberNew)+1), CountRows(emptyItemAndColumnNumberNew)+1))
                ));
                
                UpdateIf(emptyItemAndColumnNumberNew, true, {items: LookUp(emptyUnitAndColumNew, column = columnNumber).items});
                ClearCollect(countQuater, RenameColumns(Sequence(CountRows(DataQuaters), 1), Value, QuaterByIndex));
                
                ForAll(emptyItemAndColumnNumberNew As value,
                    RemoveIf(emptyId, true);
                    RemoveIf(listItems, true);
                    RemoveIf(number, true);
                    RemoveIf(ReadyforExportNumbered, true);
                    Collect(listItems, value.items);
                    Collect(number, countQuater, value.items);
                    Collect(emptyId, Filter(number, QuaterByIndex = Blank()));
                    ForAll(emptyId, 
                    Collect(ReadyforExportNumbered, 
                        Last(FirstN(AddColumns(emptyId, columnNumber, CountRows(ReadyforExportNumbered)+1),
                            CountRows(ReadyforExportNumbered)+1
                            ) 
                        )
                    ));
                    Collect(results, AddColumns(ReadyforExportNumbered, DataItemUit, value.id))
                );
                
                ForAll(DataQuaters, 
                   Collect(QuaterIndex, Last(FirstN(AddColumns(DataQuaters, Index, CountRows(QuaterIndex)+1),CountRows(QuaterIndex) + 1))));
                
                ClearCollect(valuesConverted, AddColumns(SortByColumns(results, "columnNumber", SortOrder.Ascending), Quater, ""));
                UpdateIf(valuesConverted, true, {Quater: LookUp(QuaterIndex, Index = columnNumber).id});
                Clear(InputListPartyExternal);
                ForAll(Filter(ListPartyExternal, id = Blank() || id = "" || id = "_") As item, Collect(InputListPartyExternal, {id: item.id, markId: item.markId, partyMembers: item.partyMembers, party_name: item.party_name, value: item.value, files: Filter(Filter(attachments, id = Blank() || id = "_" || id = ""), markId = item.markId)}));
                Set(inputDataExternalNew,
                    {
                        division: DivisionSelected.id,
                        meeting_nature: "EXTERNAL",
                        date_of_meeting: Text(DateOfMeeting_DatePicker_2.SelectedDate, "yyyy-mm-dd hh:mm:ss"),
                        meeting_type: meetingTypeValue,
                        meeting_title: Input_meeting_title.Text,
                        summary_on_the_meeting_notes: CRSummaryTitle_Input_2.Text,
                        hasTags: Filter(HasTags, id =  Blank() || id = ""),
                        status: If(recordItemSelected.status = "APPROVED", "APPROVED", If(TypeInformationNonList <> "Research" || (IsEmpty(DataQuaters) && (IsEmpty(valuesConverted))), "APPROVED", "SUBMITTED")),
                        status_view: If(Upper(recordItemSelected.status) = "SUBMITTED" || IsBlank(recordItemSelected.status), "Pending approval", Proper(recordItemSelected.status)),
                        listtable: DataItemUit,
                        listAttachment: Filter(colExternalFiles, Id = Blank() || Id = ""),
                        DataQuaters: DataQuaters,
                        DataValues: valuesConverted,
                        shareTo: Filter(ShareTo, id = Blank() || id = ""),
                        listparty: DropColumns(Filter(InputListPartyExternal, id = Blank() || id = "" || id = "_"), id),
                        //remove
                        listCommunicationRecordsAttachmentDelete: Concat(listCommunicationRecordsAttachmentDelete, "'" & Id & "',") & "''",
                        partyFileDelete:  Concat(PartyFileDelete, "'" & id & "',") & "''",
                        hasTagDelete: Concat(HasTagsRemove, "'" & id & "',") & "''",
                        shareToDelete: Concat(ShareToRemove, "'" & id & "',") & "''",
                        partyDelete: Concat(PartyDeleted, "'" & id & "',") & "''",
                        partyMemberDelete: partyMemberDelete,
                        //update
                        listPartyUpdate: Filter(ShowColumns(ListPartyExternal, value, id), id <> Blank() && id <> "" && id <> "_"),
                        //add
                        partyFileAdd: Filter(attachments, (id = Blank() || id = "") && (partyId <> Blank() && partyId <> "" && id <> "_" && partyId <> "_")),
                        partyMemberAdd: partyMembersAdd,
                        division_name: If(IsBlank(divison_name_popup), First(Filter(listDepartment, id = recordItemSelected.division)).company_department, divison_name_popup)
                    });
                
                If(TypeNature = "External", 
                    Set(resExternal, 'Copyof-TVS->CreateUpadateExternal'.Run(resKeyOpenAll.open, resKeyOpenAll.close, currenUserV2.id, JSON(inputDataExternalNew, JSONFormat.IndentFour),      If(IsBlank(resExternal), If(IsBlank(recordItemSelected.id), If(IsBlank(crIdDraft), "0", crIdDraft), recordItemSelected.id), resExternal.id), DivisionSelected.id, "EXTERNAL", If(ProjectFinancialInformationCheckbox.Value, 1, 0), envDEV, envTEST, envUAT1, envUAT2, If(isUpdateTable, isUpdateTable, false)));
                    If(Value(resExternal.status) = 200,
                        Set(ShowNotificationCheck, "CREATED_SUCCESS");
                        Navigate(ListCommunicationRecord, ScreenTransition.Fade);
                        Clear(HasTags);
                        Clear(PartyFileDelete);
                        Clear(listCommunicationRecordsAttachmentDelete);
                        Clear(HasTagsRemove);
                        Clear(ShareToRemove);
                        Clear(PartyDeleted),
                        Set(IsError, true);Set(NoticationText,"Create faild!");UpdateContext({ShowNotification: true});
                    );
                );
                );
                
                If(TypeNature = "Internal",
                Clear(inputPartyData);
                ForAll(Filter(ListPartyExternal, id = Blank() || id = "" || id = "_") As data, Collect(inputPartyData, {id: data.id,party_name: data.party_name, value: data.value, listmember: RenameColumns(RenameColumns(ShowColumns(data.partyMembers, id, email), email, value), id, employee_id)}));
                Set(
                    recordInternal,
                    {
                        division: DivisionSelected.id,
                        meeting_nature: "INTERNAL",
                        meeting_title: Input_meeting_title.Text,
                        date_of_meeting: Text(
                            DateOfMeeting_DatePicker_2.SelectedDate,
                            "yyyy-mm-dd hh:mm:ss"
                        ),
                        meeting_type: meetingTypeValue,
                        summary_on_the_meeting_notes: CRSummaryTitle_Input_2.Text,
                        status: If(isSubmited, "APPROVED"),
                        status_view: If(isSubmited, "APPROVED"),
                        listAttachment: Filter(colExternalFiles, Id = Blank() || Id = ""),
                        listCommunicationRecordsAttachmentDelete: Concat(listCommunicationRecordsAttachmentDelete, "'" & Id & "',") & "''",
                        listparty: DropColumns(Filter(inputPartyData, id = Blank() || id = "" || id = "_"), id),
                //        listmember: ListParty,
                        partyMemberDelete: partyMemberDelete,
                        hasTags: Filter(HasTags, id =  Blank() || id = ""),
                        listShare: Filter(ShareTo, id = Blank() || id = ""),
                		hasTagDelete: Concat(HasTagsRemove, "'" & id & "',") & "''",
                        shareToDelete: Concat(ShareToRemove, "'" & id & "',") & "''",
                		partyDelete: Concat(PartyDeleted, "'" & id & "',") & "''",
                		listPartyUpdate: Filter(ShowColumns(ListPartyExternal, value, id), id <> Blank() && id <> "" && id <> "_"),
                        partyMemberAdd: partyMembersAdd,
                        division_name: If(IsBlank(divison_name_popup), First(Filter(listDepartment, id = recordItemSelected.division)).company_department, divison_name_popup)
                    }
                );
                
                Set(resInternal, 'Copyof-TVS->InsertUpdateRecordsRI'.Run(resKeyOpenAll.open, resKeyOpenAll.close, currenUserV2.id, 
                        JSON(recordInternal, JSONFormat.IndentFour), If(IsBlank(resInternal), If(IsBlank(recordItemSelected.id), If(IsBlank(crIdDraft), "0", crIdDraft), recordItemSelected.id), resInternal.id), DivisionSelected.id, "INTERNAL", 0, envDEV, envTEST, envUAT1, envUAT2));
                
                If(Value(resInternal.status) = 200,
                    Set(ShowNotificationCheck, "CREATED_SUCCESS");
                    Navigate(ListCommunicationRecord, ScreenTransition.Fade);
                    Clear(HasTags);
                    Clear(ShareTo);
                    //Clear(ListParty);
                    Clear(listAttachmentInsert);
                    Clear(listAttachmentDelete);
                    Clear(inputPartyData);
                    Clear(colInternalFiles),
                    Set(IsError, true); Set(NoticationText,"Created failed!"); UpdateContext({ShowNotification: true});
                    );
                );
                
                Set(urlToSendNoti1, "<a href='" & linkToApp & "?screen=detail-cr&action=approve-cr&cr_id=" & If(TypeNature = "External", resExternal.id, resInternal.id) & "'>Link to item</a>");
                If(resExternal.status = "200" && !IsEmpty(DataQuaters) && !IsEmpty(valuesConverted) && recordItemSelected.status <> "APPROVED",
                    Set(sendNotiRes1, 'TVS->SendNotiEmailApp-Process1.1-V1'.Run(
                        resKeyOpenAll.open,
                        resKeyOpenAll.close,
                        "PENDING",
                        If(TypeNature = "External", resExternal.id, resInternal.id),
                        If(TypeNature = "External", resExternal.name, resInternal.name),
                        urlToSendNoti1,
                        currenUserV2.name,
                        envDEV,envTEST, envUAT1, envUAT2,
                        If(IsBlank(recordItemSelected), currenUserV2.id, recordItemSelected.write_by),
                        currenUserV2.id,
                        companny_name,
                        divison_name,
                        appProperty, emailFromConfix,""
                    ));
                    //Set(ShowNotificationCheck, If(showRejectPopup, "REJECTED_SUCCESS", "APPROVED_SUCCESS"));
                    Set(showRejectPopup, false); Set(showApprovePopup, false); 
                );
                
                Concurrent(
                    ForAll(Filter(attachments, id = "" || id = Blank() || id = "_") As item, AzureBlobStorage.CreateFile(bucketCRAttach, item.name, item.value)),
                    ForAll(colExternalFiles As item2, AzureBlobStorage.CreateFile(bucketCRAttach,item2.Name, item2.Value))
                );
                Clear(PartyFileDelete);
                Clear(listCommunicationRecordsAttachmentDelete);
                Clear(HasTagsRemove);
                Clear(ShareToRemove);
                Clear(PartyDeleted);
                Clear(listAttachmentInsert);
                Clear(listAttachmentDelete);
                Clear(partyMembersAdd);
                Clear(partyMemberDelete);
                Clear(colExternalFiles);
                Set(isLoading, false);
                Set(resInternal, Blank());
                Set(resExternal, Blank());
                );
                Set(isUpdateTable, false)
            PaddingLeft: =30
            PressedColor: =Self.Color
            PressedFill: =Self.Fill
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Size: =10.5
            Text: =If(App.Width > 800, If(recordItemSelected.status in ["APPROVED"], "Re-Submit","Submit"), "")
            Visible: |-
                =(isCreateUser && (IsBlank(recordItemSelected) || recordItemSelected.status in ["DRAFT"]) || (recordItemSelected.status in ["APPROVED"])) &&
                (   IsBlank(recordItemSelected) ||
                    isOwner ||
                    (!(TypeNature = "Internal" || (TypeNature = "External" && (TypeDivison <> "Research" || IsEmpty(splitIssuerNotFirst)))) && recordItemSelected.status in ["APPROVED"] && isCreateUser)
                ) &&
                !isDisable && isSameDivision && !isLoadingOnStart
            Width: =If(App.Width > 800, If(Upper(recordItemSelected.status) in ["APPROVED"], 110,100), 40)
            X: =If(App.Width > 800, App.Width - Self.Width - 40, App.Width - Self.Width - 10)
            Y: =SubHeaderBg_4.Y + SubHeaderBg_4.Height*0.5 - Self.Height*0.5
            ZIndex: =8

        btnSubmitIcon_3 As htmlViewer:
            Font: =Font.Arial
            HtmlText: |-
                ="<div style=""width: 40px; height: 38px; display: flex; justify-content: center; align-items: center; cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""25"" height=""24"" viewBox=""0 0 25 24"" fill=""none"">
                  <path d=""M5 2.25V21.75H20V7.2L19.775 6.975L15.275 2.475L15.05 2.25H5ZM6.5 3.75H14V8.25H18.5V20.25H6.5V3.75ZM15.5 4.8L17.45 6.75H15.5V4.8ZM12.5 9.75L9.5 12.75H11.75V16.5H13.25V12.75H15.5L12.5 9.75ZM9.5 17.25V18.75H15.5V17.25H9.5Z"" fill=""#FEFEFE""/>
                </svg></div>"
            OnSelect: =Select(btnSubmit_3);
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Visible: =btnSubmit_3.Visible
            Width: =40
            X: =btnSubmit_3.X
            Y: =btnSubmit_3.Y
            ZIndex: =9

        SubHeaderHr_4 As rectangle:
            Fill: =RGBA(191, 191, 192, 1)
            Height: =IconBack_4.Height + 10
            Visible: =App.Width > 600
            Width: =0.5
            X: =IconBack_4.X + IconBack_4.Width + 5
            Y: =IconBack_4.Y - 5
            ZIndex: =10

        btnApprove_3 As button:
            BorderColor: =Self.Fill
            BorderThickness: =0
            DisabledFill: =Self.Fill
            Fill: =RGBA(17, 79, 144, 1)
            FocusedBorderThickness: =0
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            OnSelect: |-
                =Set(showApprovePopup, true);
                Set(isSummitedPopup, false);
                Reset(DetailIRReason_Input_2);
            PaddingLeft: =30
            PressedColor: =Self.Color
            PressedFill: =Self.Fill
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Size: =10.5
            TabIndex: =1
            Text: =If(App.Width > 800, If(Language = "Vn", "Duyệt ", "Approve"), "")
            Visible: =(!IsBlank(recordItemSelected) && recordItemSelected.status in ["SUBMITTED"]) && isApproveUser && isSameDivision && !(isLoadingOnStart)
            Width: =If(App.Width > 800, 90, 40)
            X: =App.Width - Self.Width - If(App.Width > 800, 35, 15)
            Y: =Header_22.Y + Header_22.Height + 8
            ZIndex: =11

        ApproveIcon_3 As htmlViewer:
            Font: =Font.Arial
            HtmlText: |-
                ="<div style=""width: 40px; height: 38px; display: flex; justify-content: center; align-items: center; cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                  <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M21.546 5.11155C21.8272 5.39285 21.9852 5.77431 21.9852 6.17205C21.9852 6.5698 21.8272 6.95126 21.546 7.23255L10.303 18.4756C10.1544 18.6242 9.97805 18.7421 9.7839 18.8225C9.58976 18.9029 9.38167 18.9443 9.17153 18.9443C8.96138 18.9443 8.75329 18.9029 8.55915 18.8225C8.365 18.7421 8.1886 18.6242 8.04003 18.4756L2.45403 12.8906C2.31076 12.7522 2.19649 12.5867 2.11787 12.4037C2.03926 12.2207 1.99788 12.0238 1.99615 11.8247C1.99442 11.6255 2.03237 11.428 2.10779 11.2436C2.18322 11.0593 2.29459 10.8918 2.43543 10.751C2.57627 10.6101 2.74375 10.4987 2.92809 10.4233C3.11244 10.3479 3.30996 10.3099 3.50913 10.3117C3.7083 10.3134 3.90513 10.3548 4.08813 10.4334C4.27114 10.512 4.43666 10.6263 4.57503 10.7696L9.17103 15.3656L19.424 5.11155C19.5633 4.97216 19.7287 4.86159 19.9108 4.78615C20.0928 4.71071 20.288 4.67188 20.485 4.67188C20.6821 4.67188 20.8772 4.71071 21.0593 4.78615C21.2413 4.86159 21.4067 4.97216 21.546 5.11155Z"" fill=""#FEFEFE""/>
                </svg></div>"
            OnSelect: |-
                =Set(showApprovePopup, true);
                Set(isSummitedPopup, false);
                Reset(DetailIRReason_Input_2);
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Visible: =btnApprove_3.Visible
            Width: =40
            X: =btnApprove_3.X
            Y: =btnApprove_3.Y
            ZIndex: =12

        btnReject_3 As button:
            BorderColor: =Self.Fill
            BorderThickness: =0
            DisabledFill: =Self.Fill
            Fill: =RGBA(214, 27, 27, 1)
            FocusedBorderThickness: =0
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            OnSelect: |-
                =Set(showRejectPopup, true);
                Set(isSummitedPopup, false);
                Reset(DetailIRReason_Input_2);
            PaddingLeft: =30
            PressedColor: =Self.Color
            PressedFill: =Self.Fill
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Size: =10.5
            TabIndex: =1
            Text: =If(App.Width > 800,  If(Language = "Vn", "Từ chối ", "Reject"), "")
            Visible: =btnApprove_3.Visible
            Width: =If(App.Width > 800, 90, 40)
            X: =If(true, btnApprove_3.X, btnApprove_3.X) - Self.Width - If(App.Width > 800, 8, 8)
            Y: =Header_22.Y + Header_22.Height + 8
            ZIndex: =13

        RejectIcon_3 As icon.CancelBadge:
            Color: =RGBA(255, 255, 255, 1)
            Height: =20
            Icon: =Icon.CancelBadge
            OnSelect: |-
                =Set(showRejectPopup, true);
                Set(isSummitedPopup, false);
                Reset(DetailIRReason_Input_2);
            Visible: =btnApprove_3.Visible
            Width: =20
            X: =btnReject_3.X + If(App.Width > 600, 10, 10)
            Y: =btnReject_3.Y + 10
            ZIndex: =14

        btnDelete_3 As button:
            BorderColor: =RGBA(255, 0, 0, 1)
            BorderThickness: =1
            DisabledFill: =Self.Fill
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderThickness: =0
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            Height: =39
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            OnSelect: |-
                =Set(recordDelete, If(IsBlank(recordItemSelected), crIdDraft, recordItemSelected.id));
                Set(isShowPopupDelete, true);
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingTop: =0
            PressedColor: =Self.Color
            PressedFill: =Self.Fill
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            Size: =10.5
            TabIndex: =1
            Text: =""
            Visible: =If(IsBlank(recordItemSelected), !IsBlank(crIdDraft), recordItemSelected.status in ["DRAFT"] && recordItemSelected.created_by_id = currenUserV2.id) && isSameDivision && !(isLoadingOnStart)
            Width: =40
            X: =If(SaveButton_4.Visible, SaveButton_4.X - If(App.Width > 800, 12, 8) - Self.Width, btnSubmit_3.X - If(App.Width > 800, 12, 8) - Self.Width)
            Y: =btnSubmit_1.Y
            ZIndex: =15

        DeleteIcon_6 As htmlViewer:
            Font: =Font.Arial
            Height: =42
            HtmlText: |-
                ="<div style=""cursor:pointer; width:40px; height: 37px; display:flex; justify-content:center; align-items:center""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 16 16"" fill=""none"">
                  <path d=""M4.66683 2.66634C4.66683 2.31272 4.8073 1.97358 5.05735 1.72353C5.3074 1.47348 5.64654 1.33301 6.00016 1.33301H10.0002C10.3538 1.33301 10.6929 1.47348 10.943 1.72353C11.193 1.97358 11.3335 2.31272 11.3335 2.66634V3.99967H14.0002C14.177 3.99967 14.3465 4.06991 14.4716 4.19494C14.5966 4.31996 14.6668 4.48953 14.6668 4.66634C14.6668 4.84315 14.5966 5.01272 14.4716 5.13775C14.3465 5.26277 14.177 5.33301 14.0002 5.33301H13.2875L12.7095 13.4277C12.6856 13.7641 12.535 14.0789 12.2882 14.3087C12.0415 14.5386 11.7167 14.6663 11.3795 14.6663H4.62016C4.28292 14.6663 3.95821 14.5386 3.71142 14.3087C3.46463 14.0789 3.31411 13.7641 3.29016 13.4277L2.7135 5.33301H2.00016C1.82335 5.33301 1.65378 5.26277 1.52876 5.13775C1.40373 5.01272 1.3335 4.84315 1.3335 4.66634C1.3335 4.48953 1.40373 4.31996 1.52876 4.19494C1.65378 4.06991 1.82335 3.99967 2.00016 3.99967H4.66683V2.66634ZM6.00016 3.99967H10.0002V2.66634H6.00016V3.99967ZM4.0495 5.33301L4.62083 13.333H11.3802L11.9515 5.33301H4.0495ZM6.66683 6.66634C6.84364 6.66634 7.01321 6.73658 7.13823 6.8616C7.26326 6.98663 7.3335 7.1562 7.3335 7.33301V11.333C7.3335 11.5098 7.26326 11.6794 7.13823 11.8044C7.01321 11.9294 6.84364 11.9997 6.66683 11.9997C6.49002 11.9997 6.32045 11.9294 6.19542 11.8044C6.0704 11.6794 6.00016 11.5098 6.00016 11.333V7.33301C6.00016 7.1562 6.0704 6.98663 6.19542 6.8616C6.32045 6.73658 6.49002 6.66634 6.66683 6.66634ZM9.3335 6.66634C9.51031 6.66634 9.67988 6.73658 9.8049 6.8616C9.92992 6.98663 10.0002 7.1562 10.0002 7.33301V11.333C10.0002 11.5098 9.92992 11.6794 9.8049 11.8044C9.67988 11.9294 9.51031 11.9997 9.3335 11.9997C9.15668 11.9997 8.98712 11.9294 8.86209 11.8044C8.73707 11.6794 8.66683 11.5098 8.66683 11.333V7.33301C8.66683 7.1562 8.73707 6.98663 8.86209 6.8616C8.98712 6.73658 9.15668 6.66634 9.3335 6.66634Z"" fill=""#D00C0C""/>
                </svg></div>"
            OnSelect: |-
                =Set(recordDelete, If(IsBlank(recordItemSelected), crIdDraft, recordItemSelected.id));
                Set(isShowPopupDelete, true);
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Visible: =btnDelete_3.Visible
            Width: =42
            X: =btnDelete_3.X
            Y: =btnDelete_3.Y
            ZIndex: =16

    DeleteConfirm_5 As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =34

        RejectPopupBack_14 As rectangle:
            Fill: =RGBA(0.3, 0.3, 0.3, 0.3)
            Height: =Parent.Height
            Visible: =isShowPopupDelete
            Width: =Parent.Width
            ZIndex: =29

        DeleteConfirmBg_11 As htmlViewer:
            Font: =Font.Arial
            Height: =If(Parent.Width > 600, 200, 200)
            HtmlText: |-
                ="<div style='margin-left: 8px; width: calc(100% - 16px); height: "& Self.Height - 20 &"px; background-color: white; border-radius: 12px;box-shadow: 5px 4px 8px 0px rgba(0, 0, 0, 0.10);
                '></div>"
            PaddingRight: =5.00
            PaddingTop: =5.00
            Size: =11.00
            Visible: =isShowPopupDelete
            Width: =If(App.Width > 600, 550, App.Width + 5)
            X: =If(App.Width > 600, App.Width * 0.5 - DeleteConfirmBg_11.Width *0.5, -3)
            Y: =App.Height / 2 - Self.Height
            ZIndex: =30

        CancelResearchOpinionButton_8 As button:
            BorderColor: =Self.Color
            BorderThickness: =1
            Color: =RGBA(214, 27, 27, 1)
            DisabledBorderColor: =RGBA(214, 27, 27, 1)
            DisabledColor: =RGBA(214, 27, 27, 1)
            DisabledFill: =RGBA(0, 0, 0, 0)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderThickness: =1
            Font: =Font.Arial
            Height: =44
            HoverColor: =RGBA(214, 27, 27, 1)
            HoverFill: =
            OnSelect: |-
                =Set(varEncryptionDeleteSelectedId, Blank());
                Set(isShowPopupDelete, false);
            PressedBorderColor: =RGBA(214, 27, 27, 1)
            PressedColor: =RGBA(214, 27, 27, 1)
            PressedFill: =
            Size: =10.5
            Text: ="No"
            Visible: =isShowPopupDelete
            Width: =120
            X: =DeleteConfirmBg_11.X + DeleteConfirmBg_11.Width - 280
            Y: =DeleteConfirmBg_11.Y + DeleteConfirmBg_11.Height - 70
            ZIndex: =31

        DeleteResearchOpinionButton_8 As button:
            BorderThickness: =
            DisabledBorderColor: =RGBA(214, 27, 27, 1)
            DisabledColor: =RGBA(255, 255, 255, 1)
            DisabledFill: =RGBA(214, 27, 27, 1)
            Fill: =RGBA(214, 27, 27, 1)
            FocusedBorderThickness: =
            Font: =Font.Arial
            Height: =44
            HoverFill: =
            OnSelect: |-
                =Set(isLoading, true);
                    Set(deleteCRResult, "");
                    Set(deleteCRResult, 'TVS->Delete-Communication-Records-V1'.Run(resKeyOpenAll.open,
                        resKeyOpenAll.close,currenUserV2.id,recordDelete,envDEV, envTEST, envUAT1, envUAT2).result);
                    If(deleteCRResult = "true",
                        Set(ShowNotificationCheck, "DELETED_SUCCESS");
                        Navigate(ListCommunicationRecord, ScreenTransition.Fade);,
                        Set(isShowPopupDelete, false); Set(IsSuccess, false);Set(NoticationText,"This record has been processed by another user, please reload this page again.");UpdateContext({ShowNotification: true});
                    );
                Set(isLoading, false);
                Set(isShowPopupDelete, false);
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =RGBA(214, 27, 27, 1)
            Size: =10.5
            Text: ="Yes"
            Visible: =isShowPopupDelete
            Width: =120
            X: =DeleteConfirmBg_11.X + DeleteConfirmBg_11.Width - 150
            Y: =DeleteConfirmBg_11.Y + DeleteConfirmBg_11.Height - 70
            ZIndex: =32

        DeleteConfirmCloseIcon_13 As icon.Cancel:
            Color: =RGBA(26, 26, 26, 1)
            Height: =20
            Icon: =Icon.Cancel
            OnSelect: |-
                =Set(varEncryptionDeleteSelectedId, Blank());
                Set(isShowPopupDelete, false);
            Visible: =isShowPopupDelete
            Width: =20
            X: =DeleteConfirmBg_11. X + DeleteConfirmBg_11.Width -50
            Y: =DeleteConfirmBg_11.Y + 20
            ZIndex: =33

        DeleteConfirmLabel_14 As label:
            Font: =Font.Arial
            Size: =12
            Text: ="Are you sure to delete this record ?"
            Visible: =isShowPopupDelete
            Width: =DeleteConfirmBg_11.Width - DeleteConfirmCloseIcon_13.Width - 40
            X: =Label2_8.X
            Y: =Label2_8.Y + Label2_8.Height
            ZIndex: =34

        Label2_8 As label:
            Font: =Font.Arial
            FontWeight: =FontWeight.Bold
            Size: =14
            Text: ="Delete"
            Visible: =isShowPopupDelete
            X: =DeleteConfirmBg_11.X + 30
            Y: =DeleteConfirmBg_11.Y + 10
            ZIndex: =35

    DetailIRPopupGroup_2 As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =34

        DetailIRPopupBack_2 As rectangle:
            Fill: =RGBA(0.3, 0.3, 0.3, 0.3)
            Height: =App.Height
            Visible: =showRejectPopup || showApprovePopup || showRevisePopup
            Width: =App.Width
            ZIndex: =20

        DetailIRPopupBg_2 As htmlViewer:
            Font: =Font.Arial
            Height: =330
            HtmlText: |-
                ="<div style='width: calc(100% - 10px); height: "& Self.Height - 20 &"px; background-color: white; border-radius: 12px;box-shadow: 5px 4px 8px 0px rgba(0, 0, 0, 0.10);
                '></div>"
            PaddingRight: =5.00
            PaddingTop: =5.00
            Size: =11.00
            Visible: =showRejectPopup || showApprovePopup || showRevisePopup
            Width: =If(Parent.Width > 600, 600, Parent.Width)
            X: =If(Parent.Width > 600, App.Width / 2 - Self.Width / 2, 5)
            Y: =(App.Height - Self.Height) / 2
            ZIndex: =21

        DetailIR_Title_2 As label:
            Font: =Font.Arial
            FontWeight: =FontWeight.Bold
            Height: =43
            LineHeight: =2.2
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: |-
                =If(showRejectPopup,
                If(Language = "Vn", "Bạn muốn từ chối bản ghi này?", "Reject this record?"),
                showRevisePopup, If(Language = "Vn", "Bạn muốn trả lại bản ghi này?", "Revise this record?"),
                showPublishPopup, If(Language = "Vn", "Bạn muốn công bố bản ghi này?", "Publish this record?"),
                If(Language = "Vn", "Bạn muốn duyệt bản ghi này?", "Approve this record?"))
            Visible: =showRejectPopup || showApprovePopup || showRevisePopup
            Width: =299
            X: =DetailIRPopupBg_2.X + 20
            Y: =DetailIRPopupBg_2.Y + 10
            ZIndex: =22

        DetailIRName_Title_2 As label:
            Font: =Font.Arial
            Height: =43
            LineHeight: =2.2
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10.5
            Text: =If(Language = "Vn", "Nhập bình luận ", "Add your comment")
            Visible: =showRejectPopup || showApprovePopup || showRevisePopup
            Width: =159
            X: =DetailIR_Title_2.X
            Y: =DetailIR_Title_2.Y + DetailIR_Title_2.Height
            ZIndex: =23

        DetailIRReason_Input_2 As text:
            BorderColor: =RGBA(191, 191, 192, 1)
            BorderThickness: =1
            Default: =
            FocusedBorderColor: =Self.HoverBorderColor
            FocusedBorderThickness: =1
            Font: =Font.Arial
            Height: =If(App.Width > 600, 140, 120)
            HintText: =If(Language = "Vn", "Nhập bình luận.", "Input your comment.")
            HoverFill: =RGBA(186, 202, 226, 0)
            Mode: =TextMode.MultiLine
            Size: =If(App.Width > 600, 10.5, 12)
            Visible: =showRejectPopup || showApprovePopup || showRevisePopup
            Width: =DetailIRPopupBg_2.Width - 50
            X: =DetailIRName_Title_2.X
            Y: =DetailIRName_Title_2.Y + DetailIRName_Title_2.Height
            ZIndex: =24

        DetailIRSubmitButton_2 As button:
            BorderThickness: =0
            Fill: =If(showRejectPopup, RGBA(214, 27, 27, 1), showRevisePopup, RGBA(214, 117, 27, 1), RGBA(17, 79, 144, 1))
            FocusedBorderThickness: =0
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            Height: =44
            HoverFill: =ColorFade(Self.Fill , -15%)
            OnSelect: |-
                =Set(isLoading, true);
                Set(CRUpdateStatusRes, Blank());
                If(showRejectPopup,
                    // If(Len(DetailIRReason_Input_2.Text) <> 0,
                    If(true,
                        Set(CRUpdateStatusRes, 'TVS->ApproveRejectProcess1.1-V1'.Run(
                            resKeyOpenAll.open, resKeyOpenAll.close, recordItemSelected.id, recordItemSelected.status,
                            "REJECTED",
                            envDEV,envTEST, envUAT1, envUAT2, If(IsBlank(DetailIRReason_Input_2.Text), "", DetailIRReason_Input_2.Text), currenUserV2.id
                        ));
                    );,
                    showApprovePopup,
                    Set(CRUpdateStatusRes, 'TVS->ApproveRejectProcess1.1-V1'.Run(
                            resKeyOpenAll.open, resKeyOpenAll.close, recordItemSelected.id, recordItemSelected.status,
                            "APPROVED",
                            envDEV,envTEST, envUAT1, envUAT2, If(IsBlank(DetailIRReason_Input_2.Text), "", DetailIRReason_Input_2.Text), currenUserV2.id
                    ));
                );
                
                // Send noti and email (copy from proposal, haven't changed)
                // Set(linkToItem, "<a href='" & linkToApp & "?screen=detail-proposal&action=approve-proposal&proposalId=" & proposalInfoEdit.id & "'>Link to item</a>");
                // If(statusHandle = "STATUS_EXIST","",'TVS-SendNotiEmailProposal'.Run(resKeyOpenAll.open,resKeyOpenAll.close,statusHandle,
                // proposalInfoEdit.id,currenUserV2.id,currenUserV2.name,proposalInfoEdit.proposal_status,proposalInfoEdit.short_name,Text(Value(proposalInfoEdit.principal), "[$-en-GB]#,// ###"),proposalInfoEdit.type,linkToItem,env));
                
                If(CRUpdateStatusRes.status = "301",
                        Set(IsError, true);
                        Set(NoticationText,"This record has been processed by another user, please reload this page.");
                        Set(showRejectPopup, false); Set(showApprovePopup, false); Set(showRevisePopup, false); Set(showPublishPopup, false);
                        UpdateContext({ShowNotification: true});
                );
                
                // Call send mail and noti
                Set(urlToSendNoti, "<a href='" & linkToApp & "?screen=detail-cr&action=approve-cr&cr_id=" & recordItemSelected.id & "'>Link to item</a>");
                If(CRUpdateStatusRes.status = "200",
                    Set(sendNotiRes, 'TVS->SendNotiEmailApp-Process1.1-V1'.Run(
                        resKeyOpenAll.open,resKeyOpenAll.close,
                        If(showRejectPopup, "REJECTED", "APPROVED"),
                        recordItemSelected.id,
                        If(IsBlank(recordItemSelected.meeting_title), Trim(recordItemSelected.meeting_title), Trim(recordItemSelected.meeting_title)),
                        urlToSendNoti,
                        currenUserV2.name,
                        envDEV,envTEST, envUAT1, envUAT2,
                        recordItemSelected.write_by,
                        currenUserV2.id,
                        If(!IsBlank(companny_name), companny_name, First(Filter(listDepartment, id = recordItemSelected.division)).company_name),
                        If(!IsBlank(divison_name), divison_name, First(Filter(listDepartment, id = recordItemSelected.division)).name),
                        appProperty, emailFromConfix,If(IsBlank(DetailIRReason_Input_2.Text), "", DetailIRReason_Input_2.Text)
                    ));
                    Set(ShowNotificationCheck, If(showRejectPopup, "REJECTED_SUCCESS", "APPROVED_SUCCESS"));
                    Set(showRejectPopup, false); Set(showApprovePopup, false);
                    Navigate(ListCommunicationRecord, ScreenTransition.Fade);
                );
                // End
                Set(isSummitedPopup, true);
                Set(isLoading, false);
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedColor: =Self.Color 
            PressedFill: =Self.Fill
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Size: =10.5
            Text: |-
                =If(showRejectPopup,
                If(Language = "Vn", "Từ chối", "Reject"),
                showRevisePopup,
                If(Language = "Vn", "Trả lại", "Revise"),
                showPublishPopup,
                If(Language = "Vn", "Công bố", "Publish"),
                If(Language = "Vn", "Duyệt", "Approve"))
            Visible: =showRejectPopup || showApprovePopup || showRevisePopup
            Width: =120
            X: =DetailIRPopupBg_2.X + DetailIRPopupBg_2.Width - 150
            Y: =DetailIRPopupBg_2.Y + DetailIRPopupBg_2.Height - 70
            ZIndex: =25

        DetailIRCancelButton_2 As button:
            BorderColor: =Self.Color
            BorderThickness: =1
            Color: =RGBA(139, 139, 139, 1)
            DisabledFill: =Self.Fill
            Fill: =RGBA(255, 255, 255, 1)
            FocusedBorderThickness: =1
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            Height: =44
            HoverBorderColor: =Self.BorderColor
            HoverColor: =globalVariables.button.greyButtonHoverFill
            HoverFill: =ColorFade(Self.Fill , -15%)
            OnSelect: =Set(showRejectPopup, false); Set(showApprovePopup, false); Set(showRevisePopup, false); Set(showPublishPopup, false);
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedBorderColor: =Self.BorderColor
            PressedColor: =Self.Color 
            PressedFill: =Self.Fill
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Size: =10.5
            Text: =If(Language = "Vn", "Trở lại", "Cancel")
            Visible: =showRejectPopup || showApprovePopup || showRevisePopup
            Width: =120
            X: =DetailIRSubmitButton_2.X - 130
            Y: =DetailIRPopupBg_2.Y + DetailIRPopupBg_2.Height - 70
            ZIndex: =26

        DetailIRPopupCloseIcon_2 As icon.Cancel:
            Color: =RGBA(0, 0, 0, 1)
            Height: =20
            Icon: =Icon.Cancel
            OnSelect: =Set(showRejectPopup, false); Set(showApprovePopup, false); Set(showRevisePopup, false); Set(showPublishPopup, false);
            Visible: =showRejectPopup || showApprovePopup || showRevisePopup
            Width: =20
            X: =DetailIRPopupBg_2.X + DetailIRPopupBg_2.Width - 50
            Y: =DetailIR_Title_2.Y + 10
            ZIndex: =27

        DetailProposalName_Title_4 As label:
            Color: =RGBA(255, 0, 0, 1)
            Font: =Font.Arial
            Height: =20
            LineHeight: =2.2
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10.5
            Text: =LabelRequired.Text
            Visible: |-
                =// (showRejectPopup || showApprovePopup || showRevisePopup) && (isSummitedPopup && Len(DetailIRReason_Input_2.Text) = 0)
                false 
            Width: =159
            X: =DetailProposalReason_Input.X
            Y: =DetailProposalReason_Input.Y + DetailProposalReason_Input.Height
            ZIndex: =28

    Timer1_19 As timer:
        Duration: =3000
        Font: =Font.Arial
        OnTimerEnd: |-
            =Reset(Timer1_19); UpdateContext({ShowNotification: false}); Set(IsError, false);
        OnTimerStart: =
        Repeat: =true
        Start: =ShowNotification
        Visible: =false
        X: =60
        Y: =627
        ZIndex: =36

    NotificationBox_19 As button:
        Align: =Align.Left
        BorderColor: =RGBA(40, 167, 69, 1)
        BorderThickness: =0
        DisabledFill: =Self.Fill
        Fill: =If(IsError, RGBA(209, 50, 50, 1), RGBA(40, 167, 69, 1))
        FocusedBorderThickness: =0
        Font: =Font.Arial
        Height: =50
        HoverBorderColor: =Self.Fill
        HoverFill: =Self.Fill
        PaddingLeft: =15
        PaddingRight: =30
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =Self.Fill
        RadiusBottomLeft: =5
        RadiusBottomRight: =5
        RadiusTopLeft: =5
        RadiusTopRight: =5
        Size: =10.5
        Text: =NoticationText
        Visible: =Timer1_19.Value <> 0
        Width: =320
        X: =App.Width - Self.Width - 2
        Y: =60
        ZIndex: =37

    CloseNotiIcon_19 As icon.Cancel:
        Color: =RGBA(255, 255, 255, 1)
        Height: =15
        Icon: =Icon.Cancel
        OnSelect: =Reset(Timer1_19); Set(IsError, false);
        Visible: =NotificationBox_19.Visible
        Width: =15
        X: =NotificationBox_19.X + NotificationBox_19.Width - 25
        Y: =NotificationBox_19.Y + 17.5
        ZIndex: =38

    Timer1_22 As timer:
        AutoStart: =true
        Duration: =300
        Font: =Font.Arial
        OnTimerEnd: =
        OnTimerStart: |-
            =//ClearCollect(DynamicTableValidate, RemoveIf(splitIssuerNotFirst, "Data Nature" in  Value));
            ClearCollect(DynamicTableValidate, splitIssuerNotFirst);
            
            ForAll(DynamicTableValidate As item, Collect(ValidItemTemp, {item: First(Split(item.Value, "<")).Value}));
            ClearCollect(ItemValidNotExit, Filter(ValidItemTemp, Not(Trim(item) in ShowColumns(listItemConfig, item_code))));
            ClearCollect(temp1, ValidItemTemp);
            
            ForAll(DynamicTableValidate As item, Collect(ValidUnitTemp, {item: Last(FirstN(Split(item.Value, "<"), 3)).Value}));
            ClearCollect(UnitValidNotExit, Filter(ValidUnitTemp, Not( Trim(item) in ShowColumns(listUnitConfig, unit))));
            ClearCollect(temp2, ValidUnitTemp);
            
            Clear(ValidItemTemp);
            Clear(ValidUnitTemp);
            
            ForAll(allDataCompany As item, Collect(tempPartyValue, {company_department: Substitute(If(IsBlank(item.name), item.company_department, item.company_name &"-"& item.name), Char(9), " ")}));
            ClearCollect(partyValues, tempPartyValue);
            Clear(tempPartyValue);
            //Set(basd, 'TVS->GetAllCompanyFounder_Process1.2'.Run(resKeyOpenAll.open,resKeyOpenAll.close, envDEV, envTEST, envUAT1, envUAT2))
        Repeat: =true
        Start: =ShowNotification
        Visible: =false
        X: =80
        Y: =647
        ZIndex: =39

    GoFromLinkTimer As timer:
        Duration: =5000
        Font: =Font.Arial
        OnTimerEnd: |-
            =Set(isSameDivision, If(IsBlank(recordItemSelected), true, First(Filter(listDepartment, id = recordItemSelected.division)).company_department in recorDivision.division));
            Set(isDisable, !(isEnabled && isSameDivision));
            If(recordItemSelected.meeting_nature = "EXTERNAL", Set(TypeNature, "External"), Set(TypeNature, "Internal"));
            If(Upper(LookUp(listDepartment, id = recordItemSelected.division).name) = "RESEARCH", Set(TypeInformationNonList, "Research"));
            Set(DivisionSelected, LookUp(listDepartment, id = recordItemSelected.division));
            Set(goFromLink, false);
        OnTimerStart: =
        Start: =goFromLink
        Visible: =false
        X: =1240
        Y: =288
        ZIndex: =40

    Button2_4 As button:
        Font: =Font.Arial
        OnSelect: |-
            =Set(ShowNotificationCheck, "ACCESS_DENIED_IR");
            Navigate(WelcomePage, ScreenTransition.Fade)
        Text: ="Button"
        Visible: =false
        X: =40
        Y: =40
        ZIndex: =41

    NotificationScreen_14 As NotificationScreen:
        Visible: =ShowNotificationPopup
        ZIndex: =42

    LoadingQT2List_14 As LoadingComponent_4:
        Visible: =isLoading || isLoadingOnStart
        ZIndex: =43


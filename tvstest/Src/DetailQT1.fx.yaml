"DetailQT1 As screen.'phoneLayout_FluidGridWithHeaderPageLayout_ver3.0'":
    Fill: =RGBA(248, 248, 249, 1)
    OnHidden: |-
        =Set(isFromDetailMA, true);
        Set(isShowPopupDelete, false);
        Set(showCloseDealPopup, false);
        Set(showRejectPopup, false);
        Set(showApprovePopup, false);
        Set(showRevisePopup, false);
        Set(isSummitedPopup, false);
    OnVisible: |-
        =UpdateContext({ShowNotification: false});
        Set(Language, "En");
        Set(isLazyload, false);
        Set(isRequestEditLogs, false);
        // Không có quyền xem, tiễn khách
        If(!("VIEW" in LookUp(currenUserV2.permissionList, process_code = "Process2", action) && currenUserV2.status = "ACTIVE"), Select(Button2_5));
        Set(MenuSelect,"Business process");
        Set(MenuSelect2, If(App.Width > 800, "M&A Capital Raising and Restructuring Services", "M&A"));
        Set(HeaderText, If(IsBlank(dealSelected), "Create", btnApprove_MA.Visible, "Approve", SaveButton_6.Visible, "Update", "View"));
        Set(oldState, If(IsBlank(dealSelected), "", dealSelected.state));
        Select(CloseNotiIcon_23);
        
        Set(isJumpCloseDeal, false);
        Set(isSubmited, false);
        Set(showCloseDealPopup, false);
        Set(isCreateUser, "CREATE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action));
        Set(isCEO, "CEO_APPROVE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action));
        Set(isIBDrirector, (IsBlank(dealSelected) || !(dealSelected.status in ["CLOSED"])) && "IB_DIRECTOR_APPROVE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action));
        Set(isIBDirectorForCheckAllow, "IB_DIRECTOR_APPROVE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action));
        Set(isApproveStatus, dealSelected.status in ["PENDING_MANDATE_APPROVAL", "PENDING_REVIEW_DEAL_OWNER", "PENDING_REVIEW_HEAD_DIVISION", "PENDING_APPROVE_CEO", "REQUEST_EDIT"]);
        Set(isParticitatingUser, IsBlank(dealSelected) || currenUserV2.id in listDealSupport.employee_id || currenUserV2.id = dealSelected.deal_owner || currenUserV2.id = dealSelected.mentor);
        Set(isOwner, currenUserV2.id = dealSelected.deal_owner);
        Set(isOwnerOrSupport, currenUserV2.id = dealSelected.deal_owner || currenUserV2.id in Filter(listDealSupport, type = "deal_support").employee_id);
        Set(approveRejectMARes, Blank());
        
        // Không có quyền, không tham gia, mời ra ngoài
        If(dealSelected.share <> "General" && !(isCEO || isIBDirectorForCheckAllow || isParticitatingUser), Select(Button2_5));
        
        If(App.Width < 800, Set(showProgress, false));
        Set(isSubmited, false);
        Set(approveAction, Blank());
        
        // Reset Default value
        Set(CurrentStep, 1); Set(DealDetailTab, 2);
        If(!IsBlank(dealSelected),
            // Set default value if have data
            Set(dealValueNumber, dealSelected.deal_value);
            Set(dealType1SelectedValue, dealSelected.deal_type_1);
            Set(dealType2SelectedValue, dealSelected.deal_type_2);
            Set(dealType3SelectedValue, dealSelected.deal_type_3);
            Set(enagementRiskValue, dealSelected.engagement_risk);
            Set(approvalClientValue, dealSelected.approval_on_client_acceptance);
            Set(approvalEnagementValue, dealSelected.approval_on_engagement_acceptance);
            
            Select(SetPercentVariables);
            ,
            // Reset value if not have data
            Set(dealValueNumber, Blank());
            Set(dealType1SelectedValue, Blank());
            Set(dealType2SelectedValue, Blank());
            Set(dealType3SelectedValue, Blank());
            Set(enagementRiskValue, Blank());
            Set(approvalClientValue, Blank());
            Set(approvalEnagementValue, Blank());
            Set(probabilityOfSuccessMA, "");
            Set(successFeeMA, "");
            Set(importanceMA, "");
            Set(ugencyMA, "");
        );
        // Step
        Set(CurrentDealSelectedStep, Switch(dealSelected.status,
            "NEW_LEAD_CREATION", 1, "DEAL_ADVISORY", 2, "PENDING_MANDATE_APPROVAL", 3,
            "PENDING_SERVICE_CONTRACT", 4.1, "REVISED", 4.1, "PENDING_REVIEW_DEAL_OWNER", 4.2, "PENDING_REVIEW_HEAD_DIVISION", 4.3, "PENDING_APPROVE_CEO", 4.4,
            "PENDING_CONTRACT_DATE", 4, "PENDING_EXCUTION_SIGNING_CLOSING", 5, "PENDING_SIGNING", 6, "PENDING_CLOSING", 7, "DONE", 8, "CLOSED", 1, 1));
        Set(CurrentStep, If(CurrentDealSelectedStep = 8, 1, RoundDown(CurrentDealSelectedStep, 0)));
        If(CurrentStep = 4, Set(DealDetailTab, 1));
        Set(ClientNameShowDropdown, false);
        ClearCollect(listDeleteMA, []);
        Set(GalleryNoteMark, Blank()); Set(GalleryNoteMarkAtt, Blank());
        Reset(att_Step7); Reset(att_Step6); Reset(att_Step5); Reset(att_Step4_1); Reset(att_16); Reset(att_12); Reset(att_13);
        
        ClearCollect(companyList, 'TVS->FindAllCompanyPEVC-V1'.Run(resKeyOpenAll.open, resKeyOpenAll.close, envDEV, envTEST, envUAT1, envUAT2));
        Set(clientNameSelectedValue, If(IsBlank(dealSelected), Blank(), First(Filter(companyList, id_company = dealSelected.company_id))));
        Set(lastSelectedCompanyId, If(IsBlank(dealSelected), "", dealSelected.company_id));
        
        Set(MASteps, [
            {step: 1, text: "New Lead Creation"},
            {step: 2, text: "Deal Advisory Opportunity Assessment"},
            {step: 3, text: "Mandate Approval"},
            {step: 4, text: "Signing Mandate",
                subSteps: [{text: "Service contract proposal", step: 4.1}, {text: "Review by Deal Owner", step: 4.2}, {text: "Review by Head of Division", step: 4.3}, {text: "Approve by CEO", step: 4.4}]},
            {step: 5, text: "Execution"},
            {step: 6, text: "Signing of Definitive Agreements"},
            {step: 7, text: "Closing"}
        ]);
        ClearCollect(DataNoteList,
        [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step22", write_by: "", write_date: "", guid_mark: GUID()}]);
        ClearCollect(DataNoteListAtt,
        [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step23", write_by: "", write_date: "", guid_mark: GUID()}]);
        ClearCollect(DataNoteMandate,
        [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step41", write_by: "", write_date: "", guid_mark: GUID()}]);
        ClearCollect(DataNoteExecution,
        [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step5", write_by: "", write_date: "", guid_mark: GUID()}]);
        ClearCollect(DataNoteAgreements,
        [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step6", write_by: "", write_date: "", guid_mark: GUID()}]);
        ClearCollect(DataNoteClosing,
        [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step7", write_by: "", write_date: "", guid_mark: GUID()}]);
        
        
        ClearCollect(DataStatusBdc, [{title: "Active", value: "active"},{title: "Abandoned", value: "abandoned"},{title: "On hold", value: "onhold"},{title: "Close", value: "close"}]);
        
        // Fill Notes
        ClearCollect(noteStep22Data,
            Sort(AddColumns(Filter(noteOfDeal, screen = "step22" && Len(Trim(note)) > 0),
            guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
        ClearCollect(noteStep23Data,
            Sort(AddColumns(Filter(noteOfDeal, screen = "step23" && Len(Trim(note)) > 0),
            guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
        ClearCollect(noteStep41Data,
            Sort(AddColumns(Filter(noteOfDeal, screen = "step41" && Len(Trim(note)) > 0),
            guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
        ClearCollect(noteStep5Data,
            Sort(AddColumns(Filter(noteOfDeal, screen = "step5" && Len(Trim(note)) > 0),
            guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
        ClearCollect(noteStep6Data,
            Sort(AddColumns(Filter(noteOfDeal, screen = "step6" && Len(Trim(note)) > 0),
            guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
        ClearCollect(noteStep7Data,
            Sort(AddColumns(Filter(noteOfDeal, screen = "step7" && Len(Trim(note)) > 0),
            guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
        
        If(!IsEmpty(noteStep22Data), ClearCollect(DataNoteList, noteStep22Data); Clear(noteStep22Data));
        If(!IsEmpty(noteStep23Data), ClearCollect(DataNoteListAtt, noteStep23Data); Clear(noteStep23Data));
        If(!IsEmpty(noteStep41Data), ClearCollect(DataNoteMandate, noteStep41Data); Clear(noteStep41Data));
        If(!IsEmpty(noteStep5Data), ClearCollect(DataNoteExecution, noteStep5Data); Clear(noteStep5Data));
        If(!IsEmpty(noteStep6Data), ClearCollect(DataNoteAgreements, noteStep6Data); Clear(noteStep6Data));
        If(!IsEmpty(noteStep7Data), ClearCollect(DataNoteClosing, noteStep7Data); Clear(noteStep7Data));
        
        // Reset input form
        Reset(input_deal_value);Reset(input_Probability);Reset(input_Transaction);Reset(input_Retainer);Reset(input_Success_fee);Reset(input_Ugency);
        Reset(input_Importance);Reset(DatePicker_Expected_closing_time); Reset(att_16); Reset(TextInputStep3); Reset(ContractDate);

    RectQuickActionBar7 As rectangle:
        Height: =56
        Width: =Parent.Width
        ZIndex: =1

    Canvas9 As fluidGrid.fluidGridWithBlankCard:
        BorderThickness: =0
        Height: =Parent.Height - Self.Y
        Width: =Parent.Width
        Y: =RectQuickActionBar7.Y + RectQuickActionBar7.Height
        ZIndex: =2

        DataCard9 As dataCard:
            BorderColor: =RGBA(0, 0, 0, 1)
            BorderStyle: =BorderStyle.Solid
            BorderThickness: =0
            DisplayMode: =DisplayMode.Edit
            Fill: =RGBA(0, 0, 0, 0)
            Height: =Parent.Height - 100
            Width: =Parent.Width
            X: =0
            Y: =0
            ZIndex: =1

            WhiteBg_DetailMA As htmlViewer:
                Font: =Font.Arial
                Height: |-
                    =If(
                        CurrentStep = 1, App.Height - Self.Y - 66,
                        CurrentStep = 2 && DealDetailTab = 2, ButtonAddContact_8.Y + ButtonAddContact_8.Height,
                        CurrentStep = 2 && DealDetailTab = 3, ButtonAddContact_9.Y + ButtonAddContact_9.Height,
                        CurrentStep = 3, TextInputStep3.Y + TextInputStep3.Height - Self.Y + 60,
                        CurrentStep = 4 && DealDetailTab = 2, AppLogCEO_2.Y + AppLogCEO_2.Height - Self.Y + 50 ,
                        !IsBlank(dealSelected) && Input_ContractDate.Visible, Input_ContractDate.Y + Input_ContractDate.Height,
                        GalleryNote_Att.Y + GalleryNote_Att.Height + 50
                    )
                HtmlText: |-
                    ="<div style='width: calc(100% - 10px); height: "& Self.Height - 20 &"px; background-color: white; border-radius: 12px;box-shadow: 5px 4px 8px 0px rgba(0, 0, 0, 0.10);
                    '></div>"
                PaddingRight: =5.00
                PaddingTop: =5.00
                Size: =11.00
                Width: =App.Width - Self.X + If(App.Width > 800, -5, 5)
                X: =If(Parent.Width > 800 || showProgress, DetailMACot.X + DetailMACot.Width + 12, 0)
                Y: =If(App.Width > 800, 66, If(App.Width <= 600 && StatusDropDown.Visible, 140,90))
                ZIndex: =1

            DetailMACot As rectangle:
                Fill: =RGBA(191, 191, 192, 1)
                Height: =WhiteBg_DetailMA.Height - 30
                Visible: =App.Width > 800 
                Width: =0.5
                X: =DetailMASteps.X + DetailMASteps.Width + If(App.Width > 800, 12, 5)
                Y: =DetailMASteps.Y
                ZIndex: =2

            Tabs_MAStep2 As gallery.galleryHorizontal:
                '#CopilotOverlayLabel': ="Filtered"
                DelayItemLoading: =true
                Height: =47
                Items: |-
                    =[{text: "Deal information", tab: 2}, {text: "Attachment", tab: 3}]
                LoadingSpinner: =LoadingSpinner.Data
                ShowScrollbar: =false
                TemplatePadding: =0
                TemplateSize: =140
                Visible: =CurrentStep = 2
                Width: =If(Parent.Width > 600,WhiteBg_DetailMA.Width, Parent.Width - 30)
                X: =DetailMACot.X + If(App.Width > 800, 25, 0)
                Y: =WhiteBg_DetailMA.Y + 10
                ZIndex: =3

                Button8_22 As button:
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =1
                    Color: =If(DealDetailTab = ThisItem.tab, RGBA(14, 63, 115, 1), RGBA(176, 176, 176, 1))
                    DisabledColor: =
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =1
                    Font: =Font.Arial
                    Height: =35
                    HoverColor: =If(DealDetailTab = ThisItem.tab, RGBA(14, 63, 115, 1), RGBA(176, 176, 176, 1))
                    HoverFill: =RGBA(248, 248, 249, 1)
                    OnSelect: |-
                        =Select(Parent);
                        Set(DealDetailTab, ThisItem.tab);
                    PressedColor: =Self.Color
                    PressedFill: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: =ThisItem.text
                    Width: =Parent.TemplateWidth
                    Y: =5
                    ZIndex: =1

                BottomBorder1_29 As rectangle:
                    BorderColor: =If(DealDetailTab = ThisItem.tab, RGBA(14,63,115,1),RGBA(176, 176, 176, 1))
                    BorderThickness: =If(DealDetailTab = ThisItem.tab, 2, 0.5)
                    Fill: =RGBA(246, 246, 246, 1)
                    Height: =If(DealDetailTab = ThisItem.tab, 2, 0.5)
                    Width: =Parent.TemplateWidth
                    Y: =40
                    ZIndex: =2

            LabelApprove_the_deal_opportunity As label:
                Font: =Font.Arial
                FontWeight: =FontWeight.Bold
                Size: =10.5
                Text: ="Approve the deal opportunity"
                Visible: =CurrentStep = 3
                Width: |
                    =250
                X: =DetailMACot.X + If(App.Width > 800, 40, 5)
                Y: =WhiteBg_DetailMA.Y + 10
                ZIndex: =58

            LabelAddComment As label:
                Color: =RGBA(82, 82, 82, 1)
                Font: =Font.Arial
                Height: =30
                Size: =10.5
                Text: ="Add your comment"
                Visible: =CurrentStep = 3
                Width: |
                    =250
                X: =LabelApprove_the_deal_opportunity.X
                Y: =LabelApprove_the_deal_opportunity.Y + LabelApprove_the_deal_opportunity.Height
                ZIndex: =59

            Label4_4 As label:
                Color: =RGBA(82, 82, 82, 1)
                Font: =Font.Arial
                Size: =10.5
                Text: |-
                    =If(IsBlank(dealSelected.comment_mandate),"",
                    Switch(Last(Filter(Sort(reasonOfDeal, created_date), status = "PENDING_MANDATE_APPROVAL")).action, "REJECT", "Rejected by ", "REVISE", "Revised by ", "Approved by ")
                    & dealSelected.name_comment& " on "& Text(DateTimeValue(dealSelected.created_comment_date), "dd/mm/yyyy hh:mm:ss"))
                Visible: =CurrentStep = 3
                Width: =TextInputStep3.Width
                X: =TextInputStep3.X
                Y: =TextInputStep3.Y + TextInputStep3.Height
                ZIndex: =60

            TextInputStep3 As text:
                BorderColor: =RGBA(191, 191, 192, 1)
                BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                Default: =dealSelected.comment_mandate
                DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                DisplayMode: =If(SaveButton_6.Visible && isIBDrirector, DisplayMode.Edit, DisplayMode.Disabled)
                FocusedBorderColor: =Self.HoverBorderColor
                FocusedBorderThickness: =1
                Font: =Font.Arial
                Height: =253
                HoverFill: =RGBA(0, 0, 0, 0)
                Mode: =TextMode.MultiLine
                Size: =If(App.Width > 600, 10.5, 12)
                Visible: =CurrentStep = 3
                Width: =WhiteBg_DetailMA.Width - If(App.Width > 1400, 400, App.Width > 800, 70, 60)
                X: =LabelAddComment.X + 5
                Y: =LabelAddComment.Y + LabelAddComment.Height
                ZIndex: =61

            DetailMASteps As gallery.variableTemplateHeightGallery:
                '#CopilotOverlayLabel': ="Filtered"
                DelayItemLoading: =true
                Height: =Parent.Height - Self.Y
                Items: =MASteps
                Layout: =Layout.Vertical
                TemplateSize: =100
                Width: =If(App.Width > 1100, 310, App.Width > 800, 220, If(showProgress, App.Width + 10, 0))
                X: =If(App.Width > 800, If(MobileShowMenu, 275, 75), 10)
                Y: =WhiteBg_DetailMA.Y + 10
                ZIndex: =62

                "Gallery3_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                    '#CopilotOverlayLabel': ="Filtered"
                    DelayItemLoading: =true
                    Height: =If(RoundDown(CurrentDealSelectedStep, 0) >= RoundDown(ThisItem.step, 0) || dealSelected.status in ["REQUEST_EDIT", "CLOSED", "REVISED"] || dealSelected.is_request_edit, Self.AllItemsCount*45, 0)
                    Items: =ThisItem.subSteps
                    Layout: =Layout.Vertical
                    TemplatePadding: =0
                    TemplateSize: =CountRows(ThisItem.subSteps) * 11
                    Width: =270
                    X: =DetailMAStepButton.X + 30
                    Y: =MaStepText.Y + MaStepText.Height
                    ZIndex: =1

                    Title3_1 As label:
                        Color: |-
                            =If(!IsBlank(dealSelected) && dealSelected.is_request_edit, RGBA(36,201,72,1),
                                IsBlank(dealSelected),
                                If(false, RGBA(17, 79, 144, 1), If(ThisItem.step < CurrentStep, RGBA(0, 0, 0, 1), RGBA(126, 130, 153, 1))),
                                If(ThisItem.step = CurrentDealSelectedStep, RGBA(17, 79, 144, 1), false, RGBA(17,79,144,1) , If(ThisItem.step < CurrentDealSelectedStep || dealSelected.status = "PENDING_CONTRACT_DATE" ||dealSelected.status in ["REQUEST_EDIT"], RGBA(36,201,72,1), RGBA(126, 130, 153, 1)))
                            )
                        Font: =Font.Arial
                        Height: =If(MaStepSubText_1.Visible, 40, 35)
                        OnSelect: =Select(Parent)
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        Size: =If(App.Width > 1100, 10.5, App.Width > 800, 9, 10.5)
                        Text: =ThisItem.text
                        VerticalAlign: =If(!IsBlank(First(Filter(reasonOfDeal, step = ThisItem.step)).name), VerticalAlign.Top, VerticalAlign.Middle)
                        Width: =233
                        X: |
                            =HtmlText3.X + HtmlText3.Width
                        ZIndex: =1

                    HtmlText3 As htmlViewer:
                        Font: =Font.Arial
                        HtmlText: |-
                            =If(Title3_1.Color = RGBA(214, 27, 27, 1),
                            "<svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                                  <circle cx=""11"" cy=""11"" r=""10.5"" stroke=""#FF0000"" />
                                  <rect x=""6.75684"" y=""7.46484"" width=""1"" height=""11"" transform=""rotate(-45 6.75684 7.46484)"" fill=""#FF0000"" />
                                  <rect x=""7.46387"" y=""15.2422"" width=""1"" height=""11"" transform=""rotate(-135 7.46387 15.2422)"" fill=""#FF0000"" />
                            </svg>",
                                ThisItem.step < CurrentDealSelectedStep || dealSelected.status = "PENDING_CONTRACT_DATE" || dealSelected.status in ["REQUEST_EDIT"] || !IsBlank(dealSelected) && dealSelected.is_request_edit,
                                "<svg xmlns=""http://www.w3.org/2000/svg"" width=""22"" height=""22"" viewBox=""0 0 22 22"" fill=""none"">
                                <circle cx=""11"" cy=""11"" r=""10.5"" stroke=""#24C948""/>
                                <path d=""M15.3368 7.73041L14.362 7.04782L10.6072 12.4092L7.68277 10.3616L7.00028 11.3365L10.9001 14.0671L15.3368 7.73041Z"" fill=""#24C948""/>
                                </svg>",
                                "<svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                                <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M1 12C1 5.925 5.925 1 12 1C18.075 1 23 5.925 23 12C23 18.075 18.075 23 12 23C5.925 23 1 18.075 1 12ZM12 21C10.8181 21 9.64778 20.7672 8.55585 20.3149C7.46392 19.8626 6.47177 19.1997 5.63604 18.364C4.80031 17.5282 4.13738 16.5361 3.68508 15.4442C3.23279 14.3522 3 13.1819 3 12C3 10.8181 3.23279 9.64778 3.68508 8.55585C4.13738 7.46392 4.80031 6.47177 5.63604 5.63604C6.47177 4.80031 7.46392 4.13738 8.55585 3.68508C9.64778 3.23279 10.8181 3 12 3C14.3869 3 16.6761 3.94821 18.364 5.63604C20.0518 7.32387 21 9.61305 21 12C21 14.3869 20.0518 16.6761 18.364 18.364C16.6761 20.0518 14.3869 21 12 21Z"" fill=""#7E8299""/>
                                </svg>"
                            )
                        OnSelect: =Select(Parent)
                        Width: =37
                        ZIndex: =2

                    MaStepSubText_1 As label:
                        Color: =Title3_1.Color
                        Fill: =RGBA(0,0,0,0)
                        Font: =Font.Arial
                        Height: =35
                        OnSelect: =Select(Parent)
                        PaddingLeft: =0
                        PaddingTop: =30
                        Size: =8
                        Text: |-
                            =If(IsBlank(First(Filter(Sort(reasonOfDealForLogs, created_date, SortOrder.Descending), step = ThisItem.step)).name), "",
                            If(App.Width > 1100 || App.Width < 800, Switch(First(Filter(Sort(reasonOfDealForLogs, created_date, SortOrder.Descending), step = ThisItem.step)).action, "APPROVE", "Approved", "REJECT", "Rejected", "Revised") & " by ", "")& First(Filter(Sort(reasonOfDealForLogs, created_date, SortOrder.Descending), step = ThisItem.step)).name & " " & Text(DateTimeValue(First(Filter(Sort(reasonOfDealForLogs, created_date, SortOrder.Descending), step = ThisItem.step)).created_date), "dd/mm/yyyy"))
                        VerticalAlign: =VerticalAlign.Bottom
                        Visible: =!IsBlank(First(Filter(reasonOfDeal, step = ThisItem.step)).name)
                        Width: =270
                        X: =Title3_1.X
                        Y: =MaStepText.Y
                        ZIndex: =3

                    DetailMAStepButton_1 As button:
                        BorderThickness: =0
                        Fill: =RGBA(0, 0, 0, 0)
                        FocusedBorderThickness: =0
                        Font: =Font.Arial
                        Height: =HtmlText3.Height
                        HoverFill: =Self.Fill
                        OnSelect: |-
                            =Set(CurrentStep, RoundDown(ThisItem.step, 0));
                            Set(DealDetailTab, 1);
                            Set(showProgress, false);
                        PaddingBottom: =0
                        PaddingLeft: =0
                        PaddingRight: =0
                        PaddingTop: =0
                        PressedBorderColor: =
                        PressedColor: =
                        PressedFill: =
                        Text: =""
                        Width: =Gallery3_1.Width
                        X: =MaStepText.X
                        Y: =MaStepText.Y
                        ZIndex: =4

                MaStepText As label:
                    Color: |-
                        =If(IsBlank(dealSelected),
                            If(CurrentStep = ThisItem.step,
                                RGBA(17,79,144,1),
                                If(ThisItem.step < CurrentStep,RGBA(0,0,0,1),RGBA(126,130,153,1))
                            ),
                            If( !IsBlank(dealSelected) && dealSelected.is_request_edit, RGBA(36,201,72,1),
                                ThisItem.step < CurrentDealSelectedStep, RGBA(36,201,72,1),
                                CurrentStep = ThisItem.step,
                                RGBA(17,79,144,1),
                                RoundDown(CurrentDealSelectedStep,0) = ThisItem.step,
                                RGBA(17,79,144,1),
                                If(ThisItem.step < RoundDown(CurrentDealSelectedStep,0) || !IsBlank(dealSelected) && ((dealSelected.is_request_edit && CurrentDealSelectedStep < 3) || dealSelected.status in ["REQUEST_EDIT"]),
                                    RGBA(36,201,72,1),
                                    RGBA(126,130,153,1)
                                )
                            )
                        )
                    Fill: =If(RoundDown(CurrentStep, 0) = ThisItem.step, RGBA(209, 221, 255, 0.5), RGBA(209, 221, 255, 0))
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Semibold
                    OnSelect: =Select(Parent)
                    PaddingLeft: =20
                    PaddingTop: =If(MaStepSubText.Visible, 2, 5)
                    Size: =If(App.Width > 1000, 10, 9)
                    Text: =ThisItem.text
                    VerticalAlign: =If(MaStepSubText.Visible, VerticalAlign.Top, VerticalAlign.Middle)
                    Width: =Parent.Width - 10
                    ZIndex: =2

                MaStepSubText As label:
                    Color: =MaStepText.Color
                    Fill: =RGBA(0,0,0,0)
                    Font: =Font.Arial
                    Height: =MaStepText.Height 
                    OnSelect: =Select(Parent)
                    PaddingLeft: =20
                    PaddingTop: =22
                    Size: =8
                    Text: =""
                    VerticalAlign: =VerticalAlign.Bottom
                    Visible: =false
                    Width: =MaStepText.Width
                    Y: =MaStepText.Y
                    ZIndex: =3

                DetailMAStepButton As button:
                    BorderThickness: =0
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    Height: |
                        =40
                    HoverFill: =Self.Fill
                    OnSelect: |-
                        =Set(isRequestEditLogs, false);
                        Set(CurrentStep, ThisItem.step);
                        Set(DealDetailTab, If(CurrentStep = 4, 1, 2));
                        Set(showProgress, false);
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    PressedBorderColor: =
                    PressedColor: =
                    PressedFill: =
                    Size: =12
                    Text: =""
                    Visible: |-
                        =// RoundDown(CurrentDealSelectedStep, 0) >= ThisItem.step || (!IsBlank(dealSelected) && dealSelected.is_request_edit)
                        true
                    Width: =MaStepText.Width
                    X: =MaStepText.X
                    Y: =MaStepText.Y
                    ZIndex: =4

            Tabs_MAStep4 As gallery.galleryHorizontal:
                '#CopilotOverlayLabel': ="Filtered"
                DelayItemLoading: =true
                Height: =47
                Items: |-
                    =[{text: "Signing Mandate", tab: 1}, {text: "Approval Log", tab: 2}]
                ShowScrollbar: =false
                TemplatePadding: =0
                TemplateSize: =140
                Visible: =CurrentStep = 4
                Width: =If(Parent.Width > 600,WhiteBg_DetailMA.Width - 430, Parent.Width - 30)
                X: =DetailMACot.X + If(App.Width > 800, 40, 5)
                Y: =WhiteBg_DetailMA.Y + 10
                ZIndex: =63

                Button8_23 As button:
                    BorderStyle: =BorderStyle.None
                    Color: =If(DealDetailTab = ThisItem.tab, RGBA(14, 63, 115, 1), RGBA(176, 176, 176, 1))
                    Fill: =RGBA(0, 0, 0, 0)
                    Font: =Font.Arial
                    Height: =35
                    HoverColor: =If(DealDetailTab = ThisItem.tab, RGBA(14, 63, 115, 1), RGBA(176, 176, 176, 1))
                    HoverFill: =RGBA(248, 248, 249, 1)
                    OnSelect: |-
                        =Select(Parent);
                        Set(DealDetailTab, ThisItem.tab);
                    PressedColor: =Self.Color
                    PressedFill: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: =ThisItem.text
                    Width: =Parent.TemplateWidth
                    Y: =5
                    ZIndex: =1

                BottomBorder1_30 As rectangle:
                    BorderColor: =If(DealDetailTab = ThisItem.tab, RGBA(14,63,115,1),RGBA(176, 176, 176, 1))
                    Fill: =If(DealDetailTab = ThisItem.tab, RGBA(14,63,115,1),RGBA(176, 176, 176, 1))
                    Height: =If(DealDetailTab = ThisItem.tab, 4, 2)
                    Width: =Parent.TemplateWidth
                    Y: =40
                    ZIndex: =2

            ApprovalLogOwner_Label As label:
                Color: =RGBA(14, 63, 115, 1)
                Font: =Font.Arial
                FontWeight: =FontWeight.Bold
                Height: =30
                Size: =10.5
                Text: ="Approval log of Deal owner"
                Visible: =CurrentStep = 4 && DealDetailTab = 2
                Width: =266
                X: =Tabs_MAStep4.X + 2
                Y: =Tabs_MAStep4.Y + Tabs_MAStep4.Height + 55
                ZIndex: =64

            Label7_2 As label:
                Color: =RGBA(14, 63, 115, 1)
                Font: =Font.Arial
                FontWeight: =FontWeight.Bold
                Height: =30
                Size: =10.5
                Text: ="Approval log of Head of Division"
                Visible: =CurrentStep = 4 && DealDetailTab = 2
                Width: =266
                X: =ApprovalLogOwner_Label.X
                Y: =AppLogDealOwner.Y + AppLogDealOwner.Height
                ZIndex: =65

            att_Step4_1 As attachments:
                BorderColor: =
                BorderThickness: =0
                DisplayMode: =If(SaveButton_6.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                DropTargetBorderThickness: =0
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderThickness: =
                Font: =Font.Arial
                Height: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 85 + Max(If(CountRows(Self.Attachments) = 1, 0, CountRows(Self.Attachments) * 15)))
                IsInDataCard: =true
                Items: =
                MaxAttachments: =9999
                MaxAttachmentSize: =maxSizeFile
                NoAttachmentsText: =If(MAFileList.AllItemsCount > 0, "", "There is nothing attached.")
                OnAddFile: =
                OnRemoveFile: =
                PaddingBottom: =5
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                PaddingRight: =5
                PaddingTop: =5
                Size: =10.5
                Tooltip: =
                Visible: =CurrentStep = 4 && DealDetailTab = 1
                Width: =(WhiteBg_DetailMA.Width + WhiteBg_DetailMA.X - Self.X - 40) * If(App.Width > 1100, 2/3, 1) + If(App.Width > 1100, 0, 5)
                X: =Tabs_MAStep4.X
                Y: =AttachmentStep4Tab1.Y + AttachmentStep4Tab1.Height - If(Self.NoAttachmentsText = "" && CountRows(Self.Attachments) = 0 && Self.DisplayMode = DisplayMode.Edit, 40, 0)
                ZIndex: =66

            LabelNoteTotal As label:
                Color: =RGBA(14, 63, 115, 1)
                Font: =Font.Arial
                FontWeight: =FontWeight.Bold
                Height: =30
                Size: =10.5
                Text: ="Note"
                Visible: =GalleryNote_Att.Visible && !(DealDetailTab = 3 && CurrentStep = 2)
                X: =AttachmentStep4Tab1.X
                Y: =MAFileList.Y + MAFileList.Height + 10
                ZIndex: =67

            att_Step5 As attachments:
                BorderColor: =
                BorderThickness: =0
                DisplayMode: |-
                    =If( !IsBlank(dealSelected) && dealSelected.is_request_edit && (isOwnerOrSupport || isIBDrirector) && !(dealSelected.status in ["DONE", "REJECTED", "CANCELED", "CLOSE", "REJECT", "CANCEL", "REQUEST_EDIT", "CLOSED"]),
                        DisplayMode.Edit,
                        If(CurrentDealSelectedStep < 5 || btnApprove_MA.Visible || (!isParticitatingUser && !isIBDrirector), DisplayMode.Disabled, DisplayMode.Edit)
                    )
                DropTargetBorderThickness: =0
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderThickness: =
                Font: =Font.Arial
                Height: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 85 + Max(If(CountRows(Self.Attachments) = 1, 0, CountRows(Self.Attachments) * 15)))
                IsInDataCard: =true
                Items: =
                MaxAttachments: =9999
                MaxAttachmentSize: =maxSizeFile
                NoAttachmentsText: =If(MAFileList.AllItemsCount > 0, "","There is nothing attached.")
                OnAddFile: =
                OnRemoveFile: =
                PaddingBottom: =5
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                PaddingRight: =5
                PaddingTop: =5
                Size: =10.5
                Tooltip: =
                Visible: =CurrentStep = 5
                Width: =(WhiteBg_DetailMA.Width + WhiteBg_DetailMA.X - Self.X - 40) * If(App.Width > 1100, 2/3, 1) + If(App.Width > 1100, 0, 5)
                X: =AttachmentStep567.X
                Y: =AttachmentStep567.Y + AttachmentStep567.Height - If(Self.NoAttachmentsText = "" && CountRows(Self.Attachments) = 0 && Self.DisplayMode = DisplayMode.Edit, 40, 0)
                ZIndex: =68

            att_Step6 As attachments:
                BorderColor: =
                BorderThickness: =0
                DisplayMode: |-
                    =If( !IsBlank(dealSelected) && dealSelected.is_request_edit && (isOwnerOrSupport || isIBDrirector) && !(dealSelected.status in ["DONE", "REJECTED", "CANCELED", "CLOSE", "REJECT", "CANCEL", "REQUEST_EDIT", "CLOSED"]),
                        DisplayMode.Edit,
                        If(CurrentDealSelectedStep < 5 || btnApprove_MA.Visible || (!isParticitatingUser && !isIBDrirector), DisplayMode.Disabled, DisplayMode.Edit)
                    )
                DropTargetBorderThickness: =0
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderThickness: =
                Font: =Font.Arial
                Height: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 85 + Max(If(CountRows(Self.Attachments) = 1, 0, CountRows(Self.Attachments) * 15)))
                IsInDataCard: =true
                Items: =
                MaxAttachments: =9999
                MaxAttachmentSize: =maxSizeFile
                NoAttachmentsText: =If(MAFileList.AllItemsCount > 0, "","There is nothing attached.")
                OnAddFile: =
                OnRemoveFile: =
                PaddingBottom: =5
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                PaddingRight: =5
                PaddingTop: =5
                Size: =10.5
                Tooltip: =
                Visible: =CurrentStep = 6
                Width: =(WhiteBg_DetailMA.Width + WhiteBg_DetailMA.X - Self.X - 40) * If(App.Width > 1100, 2/3, 1) + If(App.Width > 1100, 0, 5)
                X: =AttachmentStep567.X
                Y: =AttachmentStep567.Y + AttachmentStep567.Height - If(Self.NoAttachmentsText = "" && CountRows(Self.Attachments) = 0 && Self.DisplayMode = DisplayMode.Edit, 40, 0)
                ZIndex: =69

            att_Step7 As attachments:
                BorderColor: =
                BorderThickness: =0
                DisplayMode: |-
                    =If( !IsBlank(dealSelected) && dealSelected.is_request_edit && (isOwnerOrSupport || isIBDrirector) && !(dealSelected.status in ["DONE", "REJECTED", "CANCELED", "CLOSE", "REJECT", "CANCEL", "REQUEST_EDIT", "CLOSED"]),
                        DisplayMode.Edit,
                        If(CurrentDealSelectedStep < 5 || btnApprove_MA.Visible || (!isParticitatingUser && !isIBDrirector), DisplayMode.Disabled, DisplayMode.Edit)
                    )
                DropTargetBorderThickness: =0
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderThickness: =
                Font: =Font.Arial
                Height: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 85 + Max(If(CountRows(Self.Attachments) = 1, 0, CountRows(Self.Attachments) * 15)))
                IsInDataCard: =true
                Items: =
                MaxAttachments: =9999
                MaxAttachmentSize: =maxSizeFile
                NoAttachmentsText: =If(MAFileList.AllItemsCount > 0, "","There is nothing attached.")
                OnAddFile: =
                OnRemoveFile: =
                PaddingBottom: =5
                PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                PaddingRight: =5
                PaddingTop: =5
                Size: =10.5
                Tooltip: =
                Visible: =CurrentStep = 7
                Width: =(WhiteBg_DetailMA.Width + WhiteBg_DetailMA.X - Self.X - 40) * If(App.Width > 1100, 2/3, 1) + If(App.Width > 1100, 0, 5)
                X: =AttachmentStep567.X
                Y: =AttachmentStep567.Y + AttachmentStep567.Height - If(Self.NoAttachmentsText = "" && CountRows(Self.Attachments) = 0 && Self.DisplayMode = DisplayMode.Edit, 40, 0)
                ZIndex: =70

            "AppLogDealOwner As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                DelayItemLoading: =true
                Height: =Max(Self.AllItemsCount * Self.TemplateHeight + 10, 40)
                Items: =Sort(Filter(reasonOfOwner, If(isRequestEditLogs, is_request, !is_request)), created_date, SortOrder.Descending)
                Layout: =Layout.Vertical
                TemplatePadding: =0
                TemplateSize: =80
                Visible: =CurrentStep = 4 && DealDetailTab = 2
                Width: =If(App.Width > 800, 556, App.Width - 50)
                X: =ApprovalLogOwner_Label.X + 5
                Y: =ApprovalLogOwner_Label.Y + ApprovalLogOwner_Label.Height
                ZIndex: =71

                Title5_1 As label:
                    Font: =Font.Arial
                    Height: =If(App.Width > 600, 26, 35)
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Size: =10.5
                    Text: |-
                        =Switch(ThisItem.action, "APPROVE", "Approved", "REJECT", "Rejected", "Revised") & " by "& ThisItem.name & " on "& Text(DateTimeValue(ThisItem.created_date), "dd/mm/yyyy hh:mm:ss") & " with comments"
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.Width
                    Y: =4
                    ZIndex: =2

                TextInput4_1 As text:
                    BorderThickness: =0
                    Default: =If(IsBlank(ThisItem.reason), "N/A", ThisItem.reason)
                    DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                    DisplayMode: =DisplayMode.Disabled
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    Height: =44
                    Mode: =TextMode.MultiLine
                    OnSelect: =Select(Parent)
                    Size: =10.5
                    Width: =Parent.Width
                    X: =Title5_1.X
                    Y: =Title5_1.Y + Title5_1.Height
                    ZIndex: =3

                TextInput4_1_MB As label:
                    Color: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =TextInput4_1.Height
                    PaddingLeft: =TextInput4_1.PaddingLeft
                    PaddingRight: =TextInput4_1.PaddingRight
                    PaddingTop: =TextInput4_1.PaddingTop
                    Size: =TextInput4_1.Size
                    Text: =TextInput4_1.Text
                    Visible: =TextInput4_2.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && TextInput4_2.Visible
                    Width: =TextInput4_1.Width
                    X: =TextInput4_1.X
                    Y: =TextInput4_1.Y
                    ZIndex: =4

            "AppLogHD As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                DelayItemLoading: =true
                Height: =Max(Self.AllItemsCount * Self.TemplateHeight + 10, 40)
                Items: =Sort(Filter(reasonOfDeal, status = "PENDING_REVIEW_HEAD_DIVISION" && If(isRequestEditLogs, is_request, !is_request)), created_date, SortOrder.Descending)
                Layout: =Layout.Vertical
                TemplatePadding: =0
                TemplateSize: =80
                Visible: =CurrentStep = 4 && DealDetailTab = 2
                Width: =If(App.Width > 800, 556, App.Width - 50)
                X: =ApprovalLogOwner_Label.X + 5
                Y: =Label7_2.Y + Label7_2.Height
                ZIndex: =72

                Title5_2 As label:
                    Font: =Font.Arial
                    Height: =If(App.Width > 600, 26, 35)
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Size: =10.5
                    Text: |-
                        =Switch(ThisItem.action, "APPROVE", "Approved", "REJECT", "Rejected", "Revised") & " by "& ThisItem.name & " on "& Text(DateTimeValue(ThisItem.created_date), If(App.Width > 600, "dd/mm/yyyy hh:mm:ss", "dd/mm/yyyy")) & " with comments"
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.Width
                    Y: =4
                    ZIndex: =2

                TextInput4_2 As text:
                    BorderThickness: =0
                    Default: =If(IsBlank(ThisItem.reason), "N/A", ThisItem.reason)
                    DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                    DisplayMode: =DisplayMode.Disabled
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    Height: =44
                    Mode: =TextMode.MultiLine
                    OnSelect: =Select(Parent)
                    Size: =10.5
                    Width: =Parent.Width
                    X: =Title5_2.X
                    Y: =Title5_2.Y + Title5_2.Height
                    ZIndex: =3

                TextInput4_1_MB_1 As label:
                    Color: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =TextInput4_2.Height
                    PaddingLeft: =TextInput4_2.PaddingLeft
                    PaddingRight: =TextInput4_2.PaddingRight
                    PaddingTop: =TextInput4_2.PaddingTop
                    Size: =TextInput4_2.Size
                    Text: =TextInput4_2.Text
                    Visible: =TextInput4_2.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && TextInput4_2.Visible
                    Width: =TextInput4_2.Width
                    X: =TextInput4_2.X
                    Y: =TextInput4_2.Y
                    ZIndex: =4

            Label7_3 As label:
                Color: =RGBA(14, 63, 115, 1)
                Font: =Font.Arial
                FontWeight: =FontWeight.Bold
                Height: =30
                Size: =10.5
                Text: ="Approval log of CEO"
                Visible: =CurrentStep = 4 && DealDetailTab = 2
                Width: =266
                X: =ApprovalLogOwner_Label.X
                Y: =AppLogHD.Y + AppLogHD.Height
                ZIndex: =73

            "AppLogCEO_2 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                DelayItemLoading: =true
                Height: =Max(Self.AllItemsCount * Self.TemplateHeight + 10, 40)
                Items: =Sort(Filter(reasonOfCEO, If(isRequestEditLogs, is_request, !is_request)), created_date, SortOrder.Descending)
                Layout: =Layout.Vertical
                TemplatePadding: =0
                TemplateSize: =80
                Visible: =CurrentStep = 4 && DealDetailTab = 2
                Width: =If(App.Width > 800, 556, App.Width - 50)
                X: =ApprovalLogOwner_Label.X + 5
                Y: =Label7_3.Y + Label7_3.Height
                ZIndex: =74

                Title5_3 As label:
                    Font: =Font.Arial
                    Height: =If(App.Width > 600, 26, 35)
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Size: =10.5
                    Text: |-
                        =Switch(ThisItem.action, "APPROVE", "Approved", "REJECT", "Rejected", "Revised") & " by "& ThisItem.name & " on "& Text(DateTimeValue(ThisItem.created_date), If(App.Width > 600, "dd/mm/yyyy hh:mm:ss", "dd/mm/yyyy")) & " with comments"
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.Width
                    Y: =4
                    ZIndex: =2

                TextInput4_3 As text:
                    BorderThickness: =0
                    Default: =If(IsBlank(ThisItem.reason), "N/A", ThisItem.reason)
                    DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                    DisplayMode: =DisplayMode.Disabled
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    Height: =44
                    Mode: =TextMode.MultiLine
                    OnSelect: =Select(Parent)
                    Size: =10.5
                    Width: =Parent.Width
                    X: =Title5_3.X
                    Y: =Title5_3.Y + Title5_3.Height
                    ZIndex: =3

                TextInput4_1_MB_2 As label:
                    Color: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =TextInput4_3.Height
                    PaddingLeft: =TextInput4_3.PaddingLeft
                    PaddingRight: =TextInput4_3.PaddingRight
                    PaddingTop: =TextInput4_3.PaddingTop
                    Size: =TextInput4_3.Size
                    Text: =TextInput4_3.Text
                    Visible: =TextInput4_3.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && TextInput4_3.Visible
                    Width: =TextInput4_3.Width
                    X: =TextInput4_3.X
                    Y: =TextInput4_3.Y
                    ZIndex: =4

            Empty_ApprovalLog1 As label:
                Color: =RGBA(50, 49, 48, 1)
                Font: =Font.Arial
                PaddingLeft: =0
                Size: =10.5
                Text: ="There are no items."
                Visible: =AppLogDealOwner.AllItemsCount = 0 && !isLoading && AppLogDealOwner.Visible
                Width: =AppLogDealOwner.Width
                X: =AppLogDealOwner.X
                Y: =AppLogDealOwner.Y
                ZIndex: =75

            Empty_ApprovalLog2 As label:
                Color: =RGBA(50, 49, 48, 1)
                Font: =Font.Arial
                PaddingLeft: =0
                Size: =10.5
                Text: ="There are no items."
                Visible: =AppLogHD.AllItemsCount = 0 && !isLoading && AppLogDealOwner.Visible
                Width: =AppLogHD.Width
                X: =AppLogHD.X
                Y: =AppLogHD.Y
                ZIndex: =76

            Empty_ApprovalLog2_1 As label:
                Color: =RGBA(50, 49, 48, 1)
                Font: =Font.Arial
                PaddingLeft: =0
                Size: =10.5
                Text: ="There are no items."
                Visible: =AppLogCEO_2.AllItemsCount = 0 && !isLoading && AppLogCEO_2.Visible
                Width: =AppLogCEO_2.Width
                X: =AppLogCEO_2.X
                Y: =AppLogCEO_2.Y
                ZIndex: =77

            CloseGalleryNoteDropdown_Total As rectangle:
                Fill: =RGBA(255, 255, 255, 0)
                Height: =Parent.Height
                OnSelect: =Set(GalleryNoteMark, Blank());
                Visible: =!IsBlank(GalleryNoteMark)
                Width: =Parent.Width
                ZIndex: =78

            "GalleryNote As gallery.'BrowseLayout_Flexible_SocialFeed_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                DelayItemLoading: =true
                Height: =Self.AllItemsCount * Self.TemplateHeight
                Items: =Sort(Filter(DataNoteList, isLastest = "true"), location)
                Layout: =Layout.Vertical
                ShowScrollbar: =false
                TemplatePadding: =4
                TemplateSize: =TextNote_6.Height + GalleryNoteDropdown.Height + 30 + 20
                Visible: =CurrentStep = 2 && DealDetailTab = 2
                Width: =(WhiteBg_DetailMA.Width + WhiteBg_DetailMA.X - Self.X - 53) + If(App.Width > 800, 37, 57)
                X: =LabelNote.X
                Y: =LabelNote.Y + LabelNote.Height
                ZIndex: =79

                TextNote_6 As text:
                    BorderColor: =RGBA(192, 192, 192, 1)
                    BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Default: |-
                        =First(If(
                            att_16.Visible, If(!IsEmpty(DataNoteList),
                                Filter(DataNoteList, isSelected && location = ThisItem.location),
                                Filter(noteStep22Data, isSelected && location = ThisItem.location)),
                            att_12.Visible, If(!IsEmpty(DataNoteListAtt),
                                Filter(DataNoteListAtt, isSelected && location = ThisItem.location),
                                Filter(noteStep23Data, isSelected && location = ThisItem.location)),
                            att_Step4_1.Visible, If(!IsEmpty(DataNoteMandate),
                                Filter(DataNoteMandate, isSelected && location = ThisItem.location),
                                Filter(noteStep41Data, isSelected && location = ThisItem.location)),
                            att_Step5.Visible, If(!IsEmpty(DataNoteExecution),
                                Filter(DataNoteExecution, isSelected && location = ThisItem.location),
                                Filter(noteStep5Data, isSelected && location = ThisItem.location)),
                            att_Step6.Visible, If(!IsEmpty(DataNoteAgreements),
                                Filter(DataNoteAgreements, isSelected && location = ThisItem.location),
                                Filter(noteStep6Data, isSelected && location = ThisItem.location)),
                            att_Step7.Visible, If(!IsEmpty(DataNoteClosing),
                                Filter(DataNoteClosing, isSelected && location = ThisItem.location),
                                Filter(noteStep7Data, isSelected && location = ThisItem.location))
                        )).note
                    DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                    DisplayMode: =GalleryNoteDropdown.DisplayMode
                    FocusedBorderColor: =Self.HoverBorderColor
                    FocusedBorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Font: =Font.Arial
                    Height: =105
                    HoverFill: =RGBA(0, 0, 0, 0)
                    MaxLength: =3500
                    Mode: =TextMode.MultiLine
                    OnChange: |-
                        =If(
                            att_16.Visible,
                            If(IsEmpty(noteStep22Data),
                                UpdateIf(DataNoteList, guid_mark = ThisItem.guid_mark && location = ThisItem.location, {note: Self.Text}),
                                UpdateIf(noteStep22Data, isSelected && location = ThisItem.location, {note: Self.Text})
                            ),
                            att_12.Visible,
                            If(IsEmpty(noteStep22Data),
                                UpdateIf(DataNoteListAtt, guid_mark = ThisItem.guid_mark && location = ThisItem.location, {note: Self.Text}),
                                UpdateIf(noteStep23Data, isSelected && location = ThisItem.location, {note: Self.Text})
                            ),
                            att_Step4_1.Visible,
                            If(IsEmpty(noteStep41Data),
                                UpdateIf(DataNoteMandate, guid_mark = ThisItem.guid_mark && location = ThisItem.location, {note: Self.Text}),
                                UpdateIf(noteStep41Data, isSelected && location = ThisItem.location, {note: Self.Text})
                            ),
                            att_Step5.Visible,
                            If(IsEmpty(noteStep5Data),
                                UpdateIf(DataNoteExecution, guid_mark = ThisItem.guid_mark && location = ThisItem.location, {note: Self.Text}),
                                UpdateIf(noteStep5Data, isSelected && location = ThisItem.location, {note: Self.Text})
                            ),
                            att_Step6.Visible,
                            If(IsEmpty(noteStep6Data),
                                UpdateIf(DataNoteAgreements, guid_mark = ThisItem.guid_mark && location = ThisItem.location, {note: Self.Text}),
                                UpdateIf(noteStep6Data, isSelected && location = ThisItem.location, {note: Self.Text})
                            ),
                            att_Step7.Visible,
                            If(IsEmpty(noteStep7Data),
                                UpdateIf(DataNoteClosing, guid_mark = ThisItem.guid_mark && location = ThisItem.location, {note: Self.Text}),
                                UpdateIf(noteStep7Data, isSelected && location = ThisItem.location, {note: Self.Text})
                            )
                        );
                    OnSelect: =false 
                    PaddingBottom: =10
                    PaddingTop: =10
                    Size: =If(App.Width > 600, 10.5, 12)
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =GalleryNote.Width - 40
                    X: =LabelNote_7.X
                    Y: =GalleryNoteDropdown.Y + GalleryNoteDropdown.Height + 10
                    ZIndex: =1

                LabelNote_7 As label:
                    Font: =Font.Arial
                    Height: =38
                    PaddingLeft: =0
                    Size: =10.5
                    Text: ="Note list"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =If(App.Width > 800, 100, 60)
                    Y: =3
                    ZIndex: =2

                Label_LabelHistory As label:
                    Font: =Font.Arial
                    Height: =If(IsBlank(Trim(Self.Text)), 10, 30)
                    Italic: =true
                    OnSelect: =Select(Parent)
                    Size: =10.5
                    Text: |-
                        =If(IsBlank(First(If(IsEmpty(noteStep22Data),
                                Filter(DataNoteList, guid_mark = ThisItem.guid_mark),
                                Filter(noteStep22Data, isSelected && location = ThisItem.location))
                            ).name), "  ",
                            "Last noted by "&
                            First(If(IsEmpty(noteStep22Data),
                                    Filter(DataNoteList, guid_mark = ThisItem.guid_mark),
                                    Filter(noteStep22Data, isSelected && location = ThisItem.location))
                            ).name &
                            " " &
                            Text(DateTimeValue(First(If(IsEmpty(noteStep22Data),
                                    Filter(DataNoteList, guid_mark = ThisItem.guid_mark),
                                    Filter(noteStep22Data, isSelected && location = ThisItem.location))
                            ).created_date), "dd/mm/yyyy hh:mm:ss")
                        )
                    VerticalAlign: =VerticalAlign.Top
                    Width: =TextNote_6.Width
                    Y: =TextNote_6.Y + TextNote_6.Height
                    ZIndex: =3

                GalleryNoteDropdown As button:
                    Align: =Align.Left
                    BorderColor: =If(statusShowDropdown, RGBA(0, 18, 107, 1), ColorFade(Self.Fill, -15%))
                    BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Color: =RGBA(82, 82, 82, 1)
                    DisplayMode: =If(SaveButton_6.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                    Fill: =RGBA(255, 255, 255, 1)
                    FocusedBorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    Height: =44
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(241, 244, 249, 1)
                    OnSelect: =Set(GalleryNoteMark, ThisItem.guid_mark)
                    PaddingLeft: =If(App.Width > 600, 15, 5)
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    PressedBorderColor: =
                    PressedColor: =
                    PressedFill: =
                    RadiusBottomLeft: =5
                    RadiusBottomRight: =5
                    RadiusTopLeft: =5
                    RadiusTopRight: =5
                    Size: =If(App.Width > 600, 10.5, 10)
                    Text: |-
                        =First(Filter(If(
                            att_16.Visible, If(!IsEmpty(noteStep22Data), noteStep22Data, DataNoteList),
                            att_12.Visible, If(!IsEmpty(noteStep23Data), noteStep23Data, DataNoteListAtt),
                            att_Step4_1.Visible, If(!IsEmpty(noteStep41Data), noteStep41Data, DataNoteMandate),
                            att_Step5.Visible, If(!IsEmpty(noteStep5Data), noteStep5Data, DataNoteExecution),
                            att_Step6.Visible, If(!IsEmpty(noteStep6Data), noteStep6Data, DataNoteAgreements),
                            att_Step7.Visible, If(!IsEmpty(noteStep7Data), noteStep7Data, DataNoteClosing)),
                        isSelected && ThisItem.location = location)).name &
                        " " & Text(DateTimeValue(First(Filter(If(
                            att_16.Visible, If(!IsEmpty(noteStep22Data), noteStep22Data, DataNoteList),
                            att_12.Visible, If(!IsEmpty(noteStep23Data), noteStep23Data, DataNoteListAtt),
                            att_Step4_1.Visible, If(!IsEmpty(noteStep41Data), noteStep41Data, DataNoteMandate),
                            att_Step5.Visible, If(!IsEmpty(noteStep5Data), noteStep5Data, DataNoteExecution),
                            att_Step6.Visible, If(!IsEmpty(noteStep6Data), noteStep6Data, DataNoteAgreements),
                            att_Step7.Visible, If(!IsEmpty(noteStep7Data), noteStep7Data, DataNoteClosing)),
                        isSelected && ThisItem.location = location)).created_date), "dd/mm/yyyy hh:mm:ss")
                    Visible: =Parent.Visible
                    Width: =If(App.Width > 800, 300, Parent.Width - Self.X - 40)
                    X: =LabelNote_7.X + LabelNote_7.Width
                    ZIndex: =4

                iconGalleryNoteDropdown As htmlViewer:
                    Font: =Font.Arial
                    Height: =44
                    HtmlText: |-
                        =If(GalleryNoteDropdown_Items.Visible,
                        "<div style=""cursor: pointer""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                        <g clip-path=""url(#clip0_1760_3688)"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill=""#"&If(GalleryNoteDropdown.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                        </g>
                        <defs>
                        <clipPath id=""clip0_1760_3688"">
                        <rect width=""24"" height=""24"" fill=""white""/>
                        </clipPath>
                        </defs>
                        </svg></div>"
                        , "<div style=""cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill=""#"&If(GalleryNoteDropdown.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                        </svg></div>")
                    OnSelect: =If(GalleryNoteDropdown.DisplayMode = DisplayMode.Disabled, false, Set(GalleryNoteMark, ThisItem.guid_mark))
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    Size: =11.60
                    Visible: =Parent.Visible
                    Width: =35
                    X: =GalleryNoteDropdown.X + GalleryNoteDropdown.Width - Self.Width
                    Y: =GalleryNoteDropdown.Y + 5
                    ZIndex: =5

                CloseGalleryNoteDropdown As rectangle:
                    Fill: =RGBA(255, 255, 255, 0)
                    Height: =Parent.TemplateHeight - 10
                    OnSelect: =Set(GalleryNoteMark, Blank());
                    Visible: =!IsBlank(GalleryNoteMark)
                    Width: =Parent.Width
                    ZIndex: =6

                "GalleryNoteDropdown_Items As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                    '#CopilotOverlayLabel': ="Filtered"
                    BorderColor: =RGBA(191, 191, 192, 1)
                    BorderThickness: =0.5
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =Min(Self.AllItemsCount, 3) * Self.TemplateHeight + 10
                    Items: =Sort(Filter(If(!IsEmpty(noteStep22Data), noteStep22Data, DataNoteList), First(Filter(If(!IsEmpty(noteStep22Data), noteStep22Data, DataNoteList), guid_mark = GalleryNoteMark)).location = location && !IsBlank(created_date)), write_date, SortOrder.Descending)
                    Layout: =Layout.Vertical
                    LoadingSpinner: =LoadingSpinner.Data
                    TemplatePadding: =0
                    TemplateSize: =40
                    Visible: =Parent.Visible && ThisItem.guid_mark = GalleryNoteMark && Self.AllItemsCount > 0
                    Width: =GalleryNoteDropdown.Width
                    X: =GalleryNoteDropdown.X
                    Y: =GalleryNoteDropdown.Y + GalleryNoteDropdown.Height + 5
                    ZIndex: =7

                    Button6_43 As button:
                        Align: =Align.Left
                        BorderThickness: =0
                        Color: =RGBA(82, 82, 82, 1)
                        Fill: |-
                            =//If(dealSelected.state = ThisItem.created_date, RGBA(241, 244, 249, 1), RGBA(0, 0, 0, 0))
                            RGBA(0, 0, 0, 0)
                        FocusedBorderThickness: =0
                        Font: =Font.Arial
                        FontWeight: =FontWeight.Normal
                        HoverColor: =RGBA(0, 0, 0, 1)
                        HoverFill: =RGBA(241, 244, 249, 1)
                        OnSelect: |-
                            =UpdateIf(
                                If(
                                att_16.Visible, If(!IsEmpty(DataNoteList), DataNoteList, noteStep22Data),
                                att_12.Visible, If(!IsEmpty(DataNoteListAtt), DataNoteListAtt, noteStep23Data),
                                att_Step4_1.Visible, If(!IsEmpty(DataNoteMandate), DataNoteMandate, noteStep41Data),
                                att_Step5.Visible, If(!IsEmpty(DataNoteExecution), DataNoteExecution, noteStep5Data),
                                att_Step6.Visible, If(!IsEmpty(DataNoteAgreements), DataNoteAgreements, noteStep6Data),
                                att_Step7.Visible, If(!IsEmpty(DataNoteClosing), DataNoteClosing, noteStep7Data)),
                                location = ThisItem.location,
                                {isSelected: If(guid_mark = ThisItem.guid_mark, true, false)}
                            );
                            
                            Set(GalleryNoteMark, Blank());
                        PaddingLeft: =If(App.Width > 600, 15, 5)
                        PaddingRight: =5.27
                        PaddingTop: =5.27
                        PressedColor: =Self.Color
                        PressedFill: =
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =If(App.Width > 600, 10.5, 10)
                        Text: |-
                            =ThisItem.name & " " & Text(DateTimeValue(ThisItem.created_date), "dd/mm/yyyy hh:mm:ss")
                        Width: =Parent.Width
                        X: =0.00
                        ZIndex: =1

                TextInput4_1_MB_3 As label:
                    Color: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =TextNote_6.Height
                    PaddingLeft: =TextNote_6.PaddingLeft
                    PaddingRight: =TextNote_6.PaddingRight
                    PaddingTop: =TextNote_6.PaddingTop
                    Size: =TextNote_6.Size
                    Text: =TextNote_6.Text
                    VerticalAlign: =VerticalAlign.Top
                    Visible: =TextNote_6.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && TextNote_6.Visible
                    Width: =TextNote_6.Width
                    X: =TextNote_6.X
                    Y: =TextNote_6.Y
                    ZIndex: =8

                DeleteIcon_Note As htmlViewer:
                    Fill: =RGBA(0,0,0,0)
                    Font: =Font.Arial
                    HtmlText: |-
                        ="<div style=""cursor:pointer; width:40px; display:flex; justify-content:center; align-items:center""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 16 16"" fill=""none"">
                          <path d=""M4.66683 2.66634C4.66683 2.31272 4.8073 1.97358 5.05735 1.72353C5.3074 1.47348 5.64654 1.33301 6.00016 1.33301H10.0002C10.3538 1.33301 10.6929 1.47348 10.943 1.72353C11.193 1.97358 11.3335 2.31272 11.3335 2.66634V3.99967H14.0002C14.177 3.99967 14.3465 4.06991 14.4716 4.19494C14.5966 4.31996 14.6668 4.48953 14.6668 4.66634C14.6668 4.84315 14.5966 5.01272 14.4716 5.13775C14.3465 5.26277 14.177 5.33301 14.0002 5.33301H13.2875L12.7095 13.4277C12.6856 13.7641 12.535 14.0789 12.2882 14.3087C12.0415 14.5386 11.7167 14.6663 11.3795 14.6663H4.62016C4.28292 14.6663 3.95821 14.5386 3.71142 14.3087C3.46463 14.0789 3.31411 13.7641 3.29016 13.4277L2.7135 5.33301H2.00016C1.82335 5.33301 1.65378 5.26277 1.52876 5.13775C1.40373 5.01272 1.3335 4.84315 1.3335 4.66634C1.3335 4.48953 1.40373 4.31996 1.52876 4.19494C1.65378 4.06991 1.82335 3.99967 2.00016 3.99967H4.66683V2.66634ZM6.00016 3.99967H10.0002V2.66634H6.00016V3.99967ZM4.0495 5.33301L4.62083 13.333H11.3802L11.9515 5.33301H4.0495ZM6.66683 6.66634C6.84364 6.66634 7.01321 6.73658 7.13823 6.8616C7.26326 6.98663 7.3335 7.1562 7.3335 7.33301V11.333C7.3335 11.5098 7.26326 11.6794 7.13823 11.8044C7.01321 11.9294 6.84364 11.9997 6.66683 11.9997C6.49002 11.9997 6.32045 11.9294 6.19542 11.8044C6.0704 11.6794 6.00016 11.5098 6.00016 11.333V7.33301C6.00016 7.1562 6.0704 6.98663 6.19542 6.8616C6.32045 6.73658 6.49002 6.66634 6.66683 6.66634ZM9.3335 6.66634C9.51031 6.66634 9.67988 6.73658 9.8049 6.8616C9.92992 6.98663 10.0002 7.1562 10.0002 7.33301V11.333C10.0002 11.5098 9.92992 11.6794 9.8049 11.8044C9.67988 11.9294 9.51031 11.9997 9.3335 11.9997C9.15668 11.9997 8.98712 11.9294 8.86209 11.8044C8.73707 11.6794 8.66683 11.5098 8.66683 11.333V7.33301C8.66683 7.1562 8.73707 6.98663 8.86209 6.8616C8.98712 6.73658 9.15668 6.66634 9.3335 6.66634Z"" fill=""#D00C0C""/>
                        </svg></div>"
                    OnSelect: =RemoveIf(DataNoteList, guid_mark = ThisItem.guid_mark);
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Visible: =IsBlank(ThisItem.created_date) && First(DataNoteList).guid_mark <> ThisItem.guid_mark
                    Width: =40
                    X: =TextNote_6.X + TextNote_6.Width - 3
                    Y: =TextNote_6.Y + TextNote_6.Height - Self.Height + 10 
                    ZIndex: =9

            "GalleryNote_Att As gallery.'BrowseLayout_Flexible_SocialFeed_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                DelayItemLoading: =true
                Height: =Self.AllItemsCount * Self.TemplateHeight
                Items: |-
                    =Sort(Filter(If(CurrentStep = 2 && DealDetailTab = 3, DataNoteListAtt,
                    CurrentStep = 4 && DealDetailTab = 1, DataNoteMandate,
                    CurrentStep = 5, DataNoteExecution,
                    CurrentStep = 6, DataNoteAgreements ,
                    CurrentStep = 7, DataNoteClosing), isLastest = "true"), location)
                Layout: =Layout.Vertical
                ShowScrollbar: =false
                TemplatePadding: =4
                TemplateSize: =TextNote_Att.Height + GalleryNoteDropdown_1.Height + 30 + 20
                Visible: =(CurrentStep = 2 && DealDetailTab = 3) || (CurrentStep = 4 && DealDetailTab = 1) || (CurrentStep = 5) || (CurrentStep = 6) || (CurrentStep = 7)
                Width: =(WhiteBg_DetailMA.Width + WhiteBg_DetailMA.X - Self.X - 53) + If(App.Width > 800, 37, 57)
                X: =LabelNoteTotal.X - 5
                Y: =If(LabelNote_1.Visible, LabelNote_1.Y + LabelNote_1.Height, LabelNoteTotal.Y + LabelNoteTotal.Height)
                ZIndex: =82

                TextNote_Att As text:
                    BorderColor: =RGBA(192, 192, 192, 1)
                    BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Default: |-
                        =First(If(
                            att_16.Visible, If(!IsEmpty(DataNoteList),
                                Filter(DataNoteList, isSelected && location = ThisItem.location),
                                Filter(noteStep22Data, isSelected && location = ThisItem.location)),
                            att_12.Visible, If(!IsEmpty(DataNoteListAtt),
                                Filter(DataNoteListAtt, isSelected && location = ThisItem.location),
                                Filter(noteStep23Data, isSelected && location = ThisItem.location)),
                            att_Step4_1.Visible, If(!IsEmpty(DataNoteMandate),
                                Filter(DataNoteMandate, isSelected && location = ThisItem.location),
                                Filter(noteStep41Data, isSelected && location = ThisItem.location)),
                            att_Step5.Visible, If(!IsEmpty(DataNoteExecution),
                                Filter(DataNoteExecution, isSelected && location = ThisItem.location),
                                Filter(noteStep5Data, isSelected && location = ThisItem.location)),
                            att_Step6.Visible, If(!IsEmpty(DataNoteAgreements),
                                Filter(DataNoteAgreements, isSelected && location = ThisItem.location),
                                Filter(noteStep6Data, isSelected && location = ThisItem.location)),
                            att_Step7.Visible, If(!IsEmpty(DataNoteClosing),
                                Filter(DataNoteClosing, isSelected && location = ThisItem.location),
                                Filter(noteStep7Data, isSelected && location = ThisItem.location))
                        )).note
                    DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                    DisplayMode: =GalleryNoteDropdown_1.DisplayMode
                    FocusedBorderColor: =Self.HoverBorderColor
                    FocusedBorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Font: =Font.Arial
                    Height: =105
                    HoverFill: =RGBA(0, 0, 0, 0)
                    MaxLength: =3500
                    Mode: =TextMode.MultiLine
                    OnChange: |-
                        =If(
                            att_16.Visible,
                            If(IsEmpty(noteStep22Data),
                                UpdateIf(DataNoteList, guid_mark = ThisItem.guid_mark && location = ThisItem.location, {note: Self.Text}),
                                UpdateIf(noteStep22Data, isSelected && location = ThisItem.location, {note: Self.Text})
                            ),
                            att_12.Visible,
                            If(IsEmpty(noteStep22Data),
                                UpdateIf(DataNoteListAtt, guid_mark = ThisItem.guid_mark && location = ThisItem.location, {note: Self.Text}),
                                UpdateIf(noteStep23Data, isSelected && location = ThisItem.location, {note: Self.Text})
                            ),
                            att_Step4_1.Visible,
                            If(IsEmpty(noteStep41Data),
                                UpdateIf(DataNoteMandate, guid_mark = ThisItem.guid_mark && location = ThisItem.location, {note: Self.Text}),
                                UpdateIf(noteStep41Data, isSelected && location = ThisItem.location, {note: Self.Text})
                            ),
                            att_Step5.Visible,
                            If(IsEmpty(noteStep5Data),
                                UpdateIf(DataNoteExecution, guid_mark = ThisItem.guid_mark && location = ThisItem.location, {note: Self.Text}),
                                UpdateIf(noteStep5Data, isSelected && location = ThisItem.location, {note: Self.Text})
                            ),
                            att_Step6.Visible,
                            If(IsEmpty(noteStep6Data),
                                UpdateIf(DataNoteAgreements, guid_mark = ThisItem.guid_mark && location = ThisItem.location, {note: Self.Text}),
                                UpdateIf(noteStep6Data, isSelected && location = ThisItem.location, {note: Self.Text})
                            ),
                            att_Step7.Visible,
                            If(IsEmpty(noteStep7Data),
                                UpdateIf(DataNoteClosing, guid_mark = ThisItem.guid_mark && location = ThisItem.location, {note: Self.Text}),
                                UpdateIf(noteStep7Data, isSelected && location = ThisItem.location, {note: Self.Text})
                            )
                        );
                    PaddingBottom: =10
                    PaddingTop: =10
                    Size: =If(App.Width > 600, 10.5, 12)
                    Visible: =Parent.Visible
                    Width: =GalleryNote_Att.Width - If(App.Width > 600, 40, 50)
                    X: =LabelNoteList.X
                    Y: =GalleryNoteDropdown_1.Y + GalleryNoteDropdown_1.Height + 10
                    ZIndex: =1

                LabelNoteList As label:
                    Font: =Font.Arial
                    Height: =38
                    Size: =10.5
                    Text: ="Note list"
                    Visible: =Parent.Visible
                    Width: =If(App.Width > 800, 100, 70)
                    X: =3
                    Y: =3
                    ZIndex: =2

                LabelHistory As label:
                    Font: =Font.Arial
                    Height: =If(IsBlank(Trim(Self.Text)), 10, 30)
                    Italic: =true
                    OnSelect: =Select(Parent)
                    Size: =10.5
                    Text: |-
                        =If(IsBlank(
                            First(If(
                            att_16.Visible, If(IsEmpty(noteStep22Data),
                                Filter(DataNoteList, guid_mark = ThisItem.guid_mark),
                                Filter(noteStep22Data, isSelected && location = ThisItem.location)),
                            att_12.Visible, If(IsEmpty(noteStep23Data),
                                Filter(DataNoteListAtt, guid_mark = ThisItem.guid_mark),
                                Filter(noteStep23Data, isSelected && location = ThisItem.location)),
                            att_Step4_1.Visible, If(IsEmpty(noteStep41Data),
                                Filter(DataNoteMandate, guid_mark = ThisItem.guid_mark),
                                Filter(noteStep41Data, isSelected && location = ThisItem.location)),
                            att_Step5.Visible, If(IsEmpty(noteStep5Data),
                                Filter(DataNoteExecution, guid_mark = ThisItem.guid_mark),
                                Filter(noteStep5Data, isSelected && location = ThisItem.location)),
                            att_Step6.Visible, If(IsEmpty(noteStep6Data),
                                Filter(DataNoteAgreements, guid_mark = ThisItem.guid_mark),
                                Filter(noteStep6Data, isSelected && location = ThisItem.location)),
                            att_Step7.Visible, If(IsEmpty(noteStep7Data),
                                Filter(DataNoteClosing, guid_mark = ThisItem.guid_mark),
                                Filter(noteStep7Data, isSelected && location = ThisItem.location))
                        )).name
                        ), " ",
                            "Last noted by "&
                            First(If(
                                att_16.Visible, If(IsEmpty(noteStep22Data),
                                    Filter(DataNoteList, guid_mark = ThisItem.guid_mark),
                                    Filter(noteStep22Data, isSelected && location = ThisItem.location)),
                                att_12.Visible, If(IsEmpty(noteStep23Data),
                                    Filter(DataNoteListAtt, guid_mark = ThisItem.guid_mark),
                                    Filter(noteStep23Data, isSelected && location = ThisItem.location)),
                                att_Step4_1.Visible, If(IsEmpty(noteStep41Data),
                                    Filter(DataNoteMandate, guid_mark = ThisItem.guid_mark),
                                    Filter(noteStep41Data, isSelected && location = ThisItem.location)),
                                att_Step5.Visible, If(IsEmpty(noteStep5Data),
                                    Filter(DataNoteExecution, guid_mark = ThisItem.guid_mark),
                                    Filter(noteStep5Data, isSelected && location = ThisItem.location)),
                                att_Step6.Visible, If(IsEmpty(noteStep6Data),
                                    Filter(DataNoteAgreements, guid_mark = ThisItem.guid_mark),
                                    Filter(noteStep6Data, isSelected && location = ThisItem.location)),
                                att_Step7.Visible, If(IsEmpty(noteStep7Data),
                                    Filter(DataNoteClosing, guid_mark = ThisItem.guid_mark),
                                    Filter(noteStep7Data, isSelected && location = ThisItem.location))
                            )).name &
                            " " & Text(DateTimeValue(First(If(
                                att_16.Visible, If(IsEmpty(noteStep22Data),
                                    Filter(DataNoteList, guid_mark = ThisItem.guid_mark),
                                    Filter(noteStep22Data, isSelected && location = ThisItem.location)),
                                att_12.Visible, If(IsEmpty(noteStep23Data),
                                    Filter(DataNoteListAtt, guid_mark = ThisItem.guid_mark),
                                    Filter(noteStep23Data, isSelected && location = ThisItem.location)),
                                att_Step4_1.Visible, If(IsEmpty(noteStep41Data),
                                    Filter(DataNoteMandate, guid_mark = ThisItem.guid_mark),
                                    Filter(noteStep41Data, isSelected && location = ThisItem.location)),
                                att_Step5.Visible, If(IsEmpty(noteStep5Data),
                                    Filter(DataNoteExecution, guid_mark = ThisItem.guid_mark),
                                    Filter(noteStep5Data, isSelected && location = ThisItem.location)),
                                att_Step6.Visible, If(IsEmpty(noteStep6Data),
                                    Filter(DataNoteAgreements, guid_mark = ThisItem.guid_mark),
                                    Filter(noteStep6Data, isSelected && location = ThisItem.location)),
                                att_Step7.Visible, If(IsEmpty(noteStep7Data),
                                    Filter(DataNoteClosing, guid_mark = ThisItem.guid_mark),
                                    Filter(noteStep7Data, isSelected && location = ThisItem.location))
                            )).created_date), "dd/mm/yyyy hh:mm:ss")
                        )
                    VerticalAlign: =VerticalAlign.Top
                    Width: =751
                    Y: =TextNote_Att.Y + TextNote_Att.Height
                    ZIndex: =3

                GalleryNoteDropdown_1 As button:
                    Align: =Align.Left
                    BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Color: =RGBA(82, 82, 82, 1)
                    DisplayMode: =If(SaveButton_6.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                    Fill: =RGBA(255, 255, 255, 1)
                    FocusedBorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    Height: =44
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(241, 244, 249, 1)
                    OnSelect: =Set(GalleryNoteMarkAtt, ThisItem.guid_mark)
                    PaddingLeft: =If(App.Width > 600, 15, 5)
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    PressedBorderColor: =
                    PressedColor: =
                    PressedFill: =
                    RadiusBottomLeft: =5
                    RadiusBottomRight: =5
                    RadiusTopLeft: =5
                    RadiusTopRight: =5
                    Size: =If(App.Width > 600, 10.5, 10)
                    Text: |-
                        =First(Filter(If(
                            att_16.Visible, If(!IsEmpty(DataNoteList), DataNoteList, noteStep22Data),
                            att_12.Visible, If(!IsEmpty(DataNoteListAtt), DataNoteListAtt, noteStep23Data),
                            att_Step4_1.Visible, If(!IsEmpty(DataNoteMandate), DataNoteMandate, noteStep41Data),
                            att_Step5.Visible, If(!IsEmpty(DataNoteExecution), DataNoteExecution, noteStep5Data),
                            att_Step6.Visible, If(!IsEmpty(DataNoteAgreements), DataNoteAgreements, noteStep6Data),
                            att_Step7.Visible, If(!IsEmpty(DataNoteClosing), DataNoteClosing, noteStep7Data)),
                        isSelected && ThisItem.location = location)).name &
                        " " & Text(DateTimeValue(First(Filter(If(
                            att_16.Visible, If(!IsEmpty(DataNoteList), DataNoteList, noteStep22Data),
                            att_12.Visible, If(!IsEmpty(DataNoteListAtt), DataNoteListAtt, noteStep23Data),
                            att_Step4_1.Visible, If(!IsEmpty(DataNoteMandate), DataNoteMandate, noteStep41Data),
                            att_Step5.Visible, If(!IsEmpty(DataNoteExecution), DataNoteExecution, noteStep5Data),
                            att_Step6.Visible, If(!IsEmpty(DataNoteAgreements), DataNoteAgreements, noteStep6Data),
                            att_Step7.Visible, If(!IsEmpty(DataNoteClosing), DataNoteClosing, noteStep7Data)),
                        isSelected && ThisItem.location = location)).created_date), "dd/mm/yyyy hh:mm:ss")
                    Visible: =Parent.Visible
                    Width: =If(App.Width > 1100, 300, App.Width > 800, 280, Parent.Width - Self.X - 48)
                    X: =LabelNoteList.X + LabelNoteList.Width
                    ZIndex: =4

                iconGalleryNoteDropdown_1 As htmlViewer:
                    Font: =Font.Arial
                    Height: =44
                    HtmlText: |-
                        =If(GalleryNoteDropdown_Items_1.Visible,
                        "<div style=""cursor: pointer""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                        <g clip-path=""url(#clip0_1760_3688)"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill=""#"&If(GalleryNoteDropdown_1.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                        </g>
                        <defs>
                        <clipPath id=""clip0_1760_3688"">
                        <rect width=""24"" height=""24"" fill=""white""/>
                        </clipPath>
                        </defs>
                        </svg></div>"
                        , "<div style=""cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill=""#"&If(GalleryNoteDropdown_1.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                        </svg></div>")
                    OnSelect: =If(GalleryNoteDropdown_1.DisplayMode = DisplayMode.Edit , Set(GalleryNoteMarkAtt, ThisItem.guid_mark))
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    Size: =11.60
                    Visible: =Parent.Visible
                    Width: =35
                    X: =GalleryNoteDropdown_1.X + GalleryNoteDropdown_1.Width - Self.Width
                    Y: =GalleryNoteDropdown_1.Y + 5
                    ZIndex: =5

                CloseGalleryNoteDropdown_1 As rectangle:
                    Fill: =RGBA(255, 255, 255, 0)
                    Height: =Parent.TemplateHeight - 10
                    OnSelect: =Set(GalleryNoteMarkAtt, Blank());
                    Visible: =!IsBlank(GalleryNoteMarkAtt)
                    Width: =935
                    ZIndex: =6

                "GalleryNoteDropdown_Items_1 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                    '#CopilotOverlayLabel': ="Filtered"
                    BorderColor: =RGBA(191, 191, 192, 1)
                    BorderThickness: =0.5
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =Min(Self.AllItemsCount, 3) * Self.TemplateHeight + 2
                    Items: |-
                        =Sort(Filter(If(
                            att_16.Visible, If(!IsEmpty(DataNoteList), DataNoteList, noteStep22Data),
                            att_12.Visible, If(!IsEmpty(DataNoteListAtt), DataNoteListAtt, noteStep23Data),
                            att_Step4_1.Visible, If(!IsEmpty(DataNoteMandate), DataNoteMandate, noteStep41Data),
                            att_Step5.Visible, If(!IsEmpty(DataNoteExecution), DataNoteExecution, noteStep5Data),
                            att_Step6.Visible, If(!IsEmpty(DataNoteAgreements), DataNoteAgreements, noteStep6Data),
                            att_Step7.Visible, If(!IsEmpty(DataNoteClosing), DataNoteClosing, noteStep7Data)
                        ), First(Filter(
                            If(
                            att_16.Visible, If(!IsEmpty(DataNoteList), DataNoteList, noteStep22Data),
                            att_12.Visible, If(!IsEmpty(DataNoteListAtt), DataNoteListAtt, noteStep23Data),
                            att_Step4_1.Visible, If(!IsEmpty(DataNoteMandate), DataNoteMandate, noteStep41Data),
                            att_Step5.Visible, If(!IsEmpty(DataNoteExecution), DataNoteExecution, noteStep5Data),
                            att_Step6.Visible, If(!IsEmpty(DataNoteAgreements), DataNoteAgreements, noteStep6Data),
                            att_Step7.Visible, If(!IsEmpty(DataNoteClosing), DataNoteClosing, noteStep7Data)
                        ), guid_mark = GalleryNoteMarkAtt)).location = location && !IsBlank(created_date)), write_date, SortOrder.Descending)
                    Layout: =Layout.Vertical
                    LoadingSpinner: =LoadingSpinner.Data
                    TemplatePadding: =0
                    TemplateSize: =40
                    Visible: =Parent.Visible && ThisItem.guid_mark = GalleryNoteMarkAtt && Self.AllItemsCount > 0
                    Width: =GalleryNoteDropdown_1.Width
                    X: =GalleryNoteDropdown_1.X
                    Y: =GalleryNoteDropdown_1.Y + GalleryNoteDropdown_1.Height + 5
                    ZIndex: =7

                    Button6_44 As button:
                        Align: =Align.Left
                        BorderThickness: =0
                        Color: =RGBA(82, 82, 82, 1)
                        Fill: =RGBA(0, 0, 0, 0)
                        FocusedBorderThickness: =0
                        Font: =Font.Arial
                        FontWeight: =FontWeight.Normal
                        HoverColor: =RGBA(0, 0, 0, 1)
                        HoverFill: =RGBA(241, 244, 249, 1)
                        OnSelect: |-
                            =UpdateIf(
                                If(
                                att_16.Visible, If(!IsEmpty(DataNoteList), DataNoteList, noteStep22Data),
                                att_12.Visible, If(!IsEmpty(DataNoteListAtt), DataNoteListAtt, noteStep23Data),
                                att_Step4_1.Visible, If(!IsEmpty(DataNoteMandate), DataNoteMandate, noteStep41Data),
                                att_Step5.Visible, If(!IsEmpty(DataNoteExecution), DataNoteExecution, noteStep5Data),
                                att_Step6.Visible, If(!IsEmpty(DataNoteAgreements), DataNoteAgreements, noteStep6Data),
                                att_Step7.Visible, If(!IsEmpty(DataNoteClosing), DataNoteClosing, noteStep7Data)),
                                location = ThisItem.location,
                                {isSelected: If(guid_mark = ThisItem.guid_mark, true, false)}
                            );
                            
                            Set(GalleryNoteMarkAtt, Blank());
                        PaddingLeft: =If(App.Width > 600, 15, 5)
                        PaddingRight: =5.27
                        PaddingTop: =5.27
                        PressedColor: =Self.Color
                        PressedFill: =
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =If(App.Width > 600, 10.5, 10)
                        Text: |-
                            =ThisItem.name & " " & Text(DateTimeValue(ThisItem.created_date), "dd/mm/yyyy hh:mm:ss")
                        Width: =Parent.Width
                        X: =0.00
                        ZIndex: =2

                TextInput4_1_MB_4 As label:
                    Color: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =TextNote_Att.Height
                    PaddingLeft: =TextNote_Att.PaddingLeft
                    PaddingRight: =TextNote_Att.PaddingRight
                    PaddingTop: =TextNote_Att.PaddingTop
                    Size: =TextNote_Att.Size
                    Text: =TextNote_Att.Text
                    VerticalAlign: =VerticalAlign.Top
                    Visible: =TextNote_Att.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && TextNote_Att.Visible
                    Width: =TextNote_Att.Width
                    X: =TextNote_Att.X
                    Y: =TextNote_Att.Y
                    ZIndex: =8

                DeleteIcon_Note_Att As htmlViewer:
                    Fill: =RGBA(0,0,0,0)
                    Font: =Font.Arial
                    HtmlText: |-
                        ="<div style=""cursor:pointer; width:40px; display:flex; justify-content:center; align-items:center""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 16 16"" fill=""none"">
                          <path d=""M4.66683 2.66634C4.66683 2.31272 4.8073 1.97358 5.05735 1.72353C5.3074 1.47348 5.64654 1.33301 6.00016 1.33301H10.0002C10.3538 1.33301 10.6929 1.47348 10.943 1.72353C11.193 1.97358 11.3335 2.31272 11.3335 2.66634V3.99967H14.0002C14.177 3.99967 14.3465 4.06991 14.4716 4.19494C14.5966 4.31996 14.6668 4.48953 14.6668 4.66634C14.6668 4.84315 14.5966 5.01272 14.4716 5.13775C14.3465 5.26277 14.177 5.33301 14.0002 5.33301H13.2875L12.7095 13.4277C12.6856 13.7641 12.535 14.0789 12.2882 14.3087C12.0415 14.5386 11.7167 14.6663 11.3795 14.6663H4.62016C4.28292 14.6663 3.95821 14.5386 3.71142 14.3087C3.46463 14.0789 3.31411 13.7641 3.29016 13.4277L2.7135 5.33301H2.00016C1.82335 5.33301 1.65378 5.26277 1.52876 5.13775C1.40373 5.01272 1.3335 4.84315 1.3335 4.66634C1.3335 4.48953 1.40373 4.31996 1.52876 4.19494C1.65378 4.06991 1.82335 3.99967 2.00016 3.99967H4.66683V2.66634ZM6.00016 3.99967H10.0002V2.66634H6.00016V3.99967ZM4.0495 5.33301L4.62083 13.333H11.3802L11.9515 5.33301H4.0495ZM6.66683 6.66634C6.84364 6.66634 7.01321 6.73658 7.13823 6.8616C7.26326 6.98663 7.3335 7.1562 7.3335 7.33301V11.333C7.3335 11.5098 7.26326 11.6794 7.13823 11.8044C7.01321 11.9294 6.84364 11.9997 6.66683 11.9997C6.49002 11.9997 6.32045 11.9294 6.19542 11.8044C6.0704 11.6794 6.00016 11.5098 6.00016 11.333V7.33301C6.00016 7.1562 6.0704 6.98663 6.19542 6.8616C6.32045 6.73658 6.49002 6.66634 6.66683 6.66634ZM9.3335 6.66634C9.51031 6.66634 9.67988 6.73658 9.8049 6.8616C9.92992 6.98663 10.0002 7.1562 10.0002 7.33301V11.333C10.0002 11.5098 9.92992 11.6794 9.8049 11.8044C9.67988 11.9294 9.51031 11.9997 9.3335 11.9997C9.15668 11.9997 8.98712 11.9294 8.86209 11.8044C8.73707 11.6794 8.66683 11.5098 8.66683 11.333V7.33301C8.66683 7.1562 8.73707 6.98663 8.86209 6.8616C8.98712 6.73658 9.15668 6.66634 9.3335 6.66634Z"" fill=""#D00C0C""/>
                        </svg></div>"
                    OnSelect: |-
                        =RemoveIf(
                            If(CurrentStep = 2 && DealDetailTab = 3, DataNoteListAtt,
                                CurrentStep = 4 && DealDetailTab = 1, DataNoteMandate,
                                CurrentStep = 5, DataNoteExecution,
                                CurrentStep = 6, DataNoteAgreements ,
                                CurrentStep = 7, DataNoteClosing)
                            , guid_mark = ThisItem.guid_mark);
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Visible: |-
                        =IsBlank(ThisItem.created_date) && First(
                            If(CurrentStep = 2 && DealDetailTab = 3, DataNoteListAtt,
                            CurrentStep = 4 && DealDetailTab = 1, DataNoteMandate,
                            CurrentStep = 5, DataNoteExecution,
                            CurrentStep = 6, DataNoteAgreements ,
                            CurrentStep = 7, DataNoteClosing)
                        ).guid_mark <> ThisItem.guid_mark
                    Width: =40
                    X: =TextNote_Att.X + TextNote_Att.Width - 3
                    Y: =TextNote_Att.Y + TextNote_Att.Height - Self.Height + 10 
                    ZIndex: =9

            Step2Att As group:
                Height: =5
                Width: =5
                X: =40
                Y: =40
                ZIndex: =82

                att_12 As attachments:
                    BorderColor: =
                    BorderThickness: =0
                    DisplayMode: =If(SaveButton_6.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                    DropTargetBorderThickness: =0
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Lighter
                    Height: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 85 + Max(If(CountRows(Self.Attachments) = 1, 0, CountRows(Self.Attachments) * 15)))
                    IsInDataCard: =true
                    Items: =
                    MaxAttachments: =9999
                    MaxAttachmentSize: =maxSizeFile
                    NoAttachmentsText: =If(MAFileList_13.AllItemsCount > 0, "","There is nothing attached.")
                    OnAddFile: =
                    OnRemoveFile: =
                    PaddingBottom: =5
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    PaddingRight: =5
                    PaddingTop: =5
                    Size: =10.5
                    Tooltip: =
                    Visible: =CurrentStep = 2 && DealDetailTab = 3
                    Width: =(WhiteBg_DetailMA.Width + WhiteBg_DetailMA.X - Self.X - 40) * If(App.Width > 1100, 2/3, 1) + If(App.Width > 1100, 0, 12)
                    X: =Title2_Step2Tab3_1.X
                    Y: =Title2_Step2Tab3_1.Y + Title2_Step2Tab3_1.Height - If(Self.NoAttachmentsText = "" && CountRows(Self.Attachments) = 0 && Self.DisplayMode = DisplayMode.Edit, 40, 0)
                    ZIndex: =4

                Title2_Step2Tab3 As label:
                    Color: =RGBA(14, 63, 115, 1)
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Bold
                    Size: =10.5
                    Text: ="Other Supporting Documents"
                    Visible: =CurrentStep = 2 && DealDetailTab = 3
                    Width: =240
                    X: =att_12.X
                    Y: =MAFileList_13.Y + MAFileList_13.Height
                    ZIndex: =5

                att_13 As attachments:
                    BorderColor: =
                    BorderThickness: =0
                    DisplayMode: =If(SaveButton_6.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                    DropTargetBorderThickness: =0
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Lighter
                    Height: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 85 + Max(If(CountRows(Self.Attachments) = 1, 0, CountRows(Self.Attachments) * 15)))
                    IsInDataCard: =true
                    Items: =
                    MaxAttachments: =9999
                    MaxAttachmentSize: =maxSizeFile
                    NoAttachmentsText: =If(MAFileList.AllItemsCount > 0, "","There is nothing attached.")
                    OnAddFile: =
                    OnRemoveFile: =
                    PaddingBottom: =5
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 5, 0)
                    PaddingRight: =5
                    PaddingTop: =5
                    Size: =10.5
                    Tooltip: =
                    Visible: =CurrentStep = 2 && DealDetailTab = 3
                    Width: =(WhiteBg_DetailMA.Width + WhiteBg_DetailMA.X - Self.X - 40) * If(App.Width > 1100, 2/3, 1) + If(App.Width > 1100, 0, 12)
                    X: =Title2_Step2Tab3.X
                    Y: =Title2_Step2Tab3.Y + Title2_Step2Tab3.Height - If(Self.NoAttachmentsText = "" && CountRows(Self.Attachments) = 0 && Self.DisplayMode = DisplayMode.Edit, 40, 0)
                    ZIndex: =6

                IconFile As htmlViewer:
                    Font: =Font.Arial
                    HtmlText: |-
                        ="<svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                          <path d=""M18.0204 5.16396C17.2691 4.41698 16.2539 3.99603 15.1945 3.99229C14.1351 3.98855 13.1169 4.40231 12.3604 5.14396L5.70036 11.688C5.51152 11.8739 5.25671 11.9774 4.99171 11.9759C4.7267 11.9744 4.47309 11.868 4.28636 11.68C4.19407 11.5869 4.12109 11.4766 4.07161 11.3552C4.02213 11.2339 3.99714 11.1039 3.99807 10.9729C3.999 10.8418 4.02583 10.7123 4.07703 10.5916C4.12822 10.471 4.20276 10.3617 4.29636 10.27L10.9544 3.72796C12.0871 2.61606 13.6124 1.99528 15.1997 2.00015C16.787 2.00502 18.3084 2.63513 19.4344 3.75396C19.9929 4.30916 20.4362 4.96933 20.7387 5.69648C21.0412 6.42363 21.1969 7.20341 21.1969 7.99096C21.1969 8.77852 21.0412 9.5583 20.7387 10.2854C20.4362 11.0126 19.9929 11.6728 19.4344 12.228L10.7704 20.856C10.0337 21.5883 9.03711 21.9993 7.99836 21.9993C6.95961 21.9993 5.96306 21.5883 5.22636 20.856C4.86251 20.4941 4.57377 20.0639 4.37674 19.5901C4.17972 19.1162 4.07829 18.6081 4.07829 18.095C4.07829 17.5818 4.17972 17.0737 4.37674 16.5999C4.57377 16.126 4.86251 15.6958 5.22636 15.334L13.3064 7.28796C13.4941 7.10159 13.7478 6.997 14.0124 6.997C14.2769 6.997 14.5307 7.10159 14.7184 7.28796C14.811 7.38031 14.8845 7.49003 14.9347 7.61083C14.9848 7.73164 15.0106 7.86116 15.0106 7.99196C15.0106 8.12277 14.9848 8.25229 14.9347 8.37309C14.8845 8.4939 14.811 8.60362 14.7184 8.69596L6.64036 16.742C6.46203 16.9193 6.32052 17.1301 6.22395 17.3623C6.12738 17.5945 6.07767 17.8435 6.07767 18.095C6.07767 18.3464 6.12738 18.5954 6.22395 18.8276C6.32052 19.0598 6.46203 19.2707 6.64036 19.448C7.0014 19.808 7.49048 20.0102 8.00036 20.0102C8.51024 20.0102 8.99932 19.808 9.36036 19.448L18.0204 10.82C18.3931 10.4493 18.6889 10.0087 18.8907 9.52338C19.0926 9.03804 19.1965 8.5176 19.1965 7.99196C19.1965 7.46633 19.0926 6.94588 18.8907 6.46055C18.6889 5.97522 18.3931 5.53458 18.0204 5.16396Z"" fill=""#606060""/>
                        </svg>"
                    Visible: =false
                    Width: =41
                    X: =Title2_Step2Tab3_1.X + Title2_Step2Tab3_1.Width - Self.Width
                    Y: =Title2_Step2Tab3_1.Y
                    ZIndex: =50

                Title2_Step2Tab3_1 As label:
                    Color: =RGBA(14, 63, 115, 1)
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Bold
                    Size: =10.5
                    Text: ="Deal Advisory Opportunity Assessment"
                    Visible: =CurrentStep = 2 && DealDetailTab = 3
                    Width: =320
                    X: =Tabs_MAStep2.X + 10 
                    Y: =Tabs_MAStep2.Y + Tabs_MAStep2.Height + 10
                    ZIndex: =51

                IconFile_1 As htmlViewer:
                    Font: =Font.Arial
                    HtmlText: |-
                        ="<svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                          <path d=""M18.0204 5.16396C17.2691 4.41698 16.2539 3.99603 15.1945 3.99229C14.1351 3.98855 13.1169 4.40231 12.3604 5.14396L5.70036 11.688C5.51152 11.8739 5.25671 11.9774 4.99171 11.9759C4.7267 11.9744 4.47309 11.868 4.28636 11.68C4.19407 11.5869 4.12109 11.4766 4.07161 11.3552C4.02213 11.2339 3.99714 11.1039 3.99807 10.9729C3.999 10.8418 4.02583 10.7123 4.07703 10.5916C4.12822 10.471 4.20276 10.3617 4.29636 10.27L10.9544 3.72796C12.0871 2.61606 13.6124 1.99528 15.1997 2.00015C16.787 2.00502 18.3084 2.63513 19.4344 3.75396C19.9929 4.30916 20.4362 4.96933 20.7387 5.69648C21.0412 6.42363 21.1969 7.20341 21.1969 7.99096C21.1969 8.77852 21.0412 9.5583 20.7387 10.2854C20.4362 11.0126 19.9929 11.6728 19.4344 12.228L10.7704 20.856C10.0337 21.5883 9.03711 21.9993 7.99836 21.9993C6.95961 21.9993 5.96306 21.5883 5.22636 20.856C4.86251 20.4941 4.57377 20.0639 4.37674 19.5901C4.17972 19.1162 4.07829 18.6081 4.07829 18.095C4.07829 17.5818 4.17972 17.0737 4.37674 16.5999C4.57377 16.126 4.86251 15.6958 5.22636 15.334L13.3064 7.28796C13.4941 7.10159 13.7478 6.997 14.0124 6.997C14.2769 6.997 14.5307 7.10159 14.7184 7.28796C14.811 7.38031 14.8845 7.49003 14.9347 7.61083C14.9848 7.73164 15.0106 7.86116 15.0106 7.99196C15.0106 8.12277 14.9848 8.25229 14.9347 8.37309C14.8845 8.4939 14.811 8.60362 14.7184 8.69596L6.64036 16.742C6.46203 16.9193 6.32052 17.1301 6.22395 17.3623C6.12738 17.5945 6.07767 17.8435 6.07767 18.095C6.07767 18.3464 6.12738 18.5954 6.22395 18.8276C6.32052 19.0598 6.46203 19.2707 6.64036 19.448C7.0014 19.808 7.49048 20.0102 8.00036 20.0102C8.51024 20.0102 8.99932 19.808 9.36036 19.448L18.0204 10.82C18.3931 10.4493 18.6889 10.0087 18.8907 9.52338C19.0926 9.03804 19.1965 8.5176 19.1965 7.99196C19.1965 7.46633 19.0926 6.94588 18.8907 6.46055C18.6889 5.97522 18.3931 5.53458 18.0204 5.16396Z"" fill=""#606060""/>
                        </svg>"
                    Visible: =false
                    Width: =41
                    X: =Title2_Step2Tab3.X + Title2_Step2Tab3.Width - Self.Width
                    Y: =Title2_Step2Tab3.Y
                    ZIndex: =52

                LabelNote_1 As label:
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    Size: =10.5
                    Text: ="Note"
                    Visible: =CurrentStep = 2 && DealDetailTab = 3
                    X: =att_13.X
                    Y: =MAFileList.Y + MAFileList.Height + If(DealDetailTab = 3, 5, 20)
                    ZIndex: =53

            ContractDate_Label As label:
                Font: =Font.Arial
                Height: =44
                Size: =10.5
                Text: ="Contract date"
                Visible: =!IsBlank(dealSelected) && att_Step4_1.Visible && ((CurrentStep <= CurrentDealSelectedStep || dealSelected.status in ["REQUEST_EDIT", "CLOSED"]) || dealSelected.is_request_edit)
                Width: =100
                X: =GalleryNote_Att.X + 7
                Y: =ButtonAddContact_9.Y + ButtonAddContact_9.Height + 10
                ZIndex: =102

            Input_ContractDate As text:
                BorderColor: =RGBA(191, 191, 192, 1)
                BorderThickness: =If(ContractDate.DisplayMode = DisplayMode.Disabled, 0, 1)
                Default: ="Đầu vào văn bản"
                DisplayMode: |-
                    =If( dealSelected.status in ["REQUEST_EDIT", "CLOSED"], DisplayMode.Disabled,
                        dealSelected.status in ["PENDING_REVIEW_DEAL_OWNER"] && !isOwner, DisplayMode.Disabled,
                        dealSelected.status in ["PENDING_REVIEW_HEAD_DIVISION"] && !isIBDrirector, DisplayMode.Disabled,
                        dealSelected.status in ["PENDING_APPROVE_CEO"] && !isCEO, DisplayMode.Disabled,
                        dealSelected.is_request_edit && (isOwnerOrSupport || isIBDrirector), DisplayMode.Edit,
                    If((dealSelected.status in ["PENDING_EXCUTION_SIGNING_CLOSING", "PENDING_SIGNING", "PENDING_CLOSING"] && (isOwnerOrSupport || isIBDrirector)) ||
                        (dealSelected.status in ["DONE"] && isIBDrirector),
                        DisplayMode.Edit, DisplayMode.Disabled))
                FocusedBorderThickness: =If(ContractDate.DisplayMode = DisplayMode.Disabled, 0, 1)
                Font: =Font.Arial
                Height: =44
                HoverBorderColor: =RGBA(191, 191, 192, 1)
                HoverFill: =RGBA(0, 0, 0, 0)
                PaddingRight: =5.00
                PaddingTop: =5.00
                Size: =13.00
                Visible: =!IsBlank(dealSelected) && att_Step4_1.Visible && ((CurrentStep <= CurrentDealSelectedStep || dealSelected.status in ["REQUEST_EDIT", "CLOSED"]) || dealSelected.is_request_edit)
                Width: =GalleryNote_Att.X + GalleryNoteDropdown_1.X + GalleryNoteDropdown_1.Width - Self.X + 5
                X: =ContractDate_Label.X + ContractDate_Label.Width
                Y: =ContractDate_Label.Y
                ZIndex: =103

            ContractDate As datepicker:
                BorderThickness: =0
                DefaultDate: =DateTimeValue(dealSelected.contract_date)
                DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                DisplayMode: |-
                    =If( dealSelected.status in ["REQUEST_EDIT", "CLOSED"], DisplayMode.Disabled,
                        dealSelected.status in ["PENDING_REVIEW_DEAL_OWNER"] && !isOwner, DisplayMode.Disabled,
                        dealSelected.status in ["PENDING_REVIEW_HEAD_DIVISION"] && !isIBDrirector, DisplayMode.Disabled,
                        dealSelected.status in ["PENDING_APPROVE_CEO"] && !isCEO, DisplayMode.Disabled,
                        dealSelected.is_request_edit && (isOwnerOrSupport || isIBDrirector), DisplayMode.Edit,
                    If((dealSelected.status in ["PENDING_EXCUTION_SIGNING_CLOSING", "PENDING_SIGNING", "PENDING_CLOSING"] && (isOwnerOrSupport || isIBDrirector)) ||
                        (dealSelected.status in ["DONE"] && isIBDrirector),
                        DisplayMode.Edit, DisplayMode.Disabled))
                FocusedBorderThickness: =0
                Font: =Font.Arial
                Format: ="dd/mm/yyyy"
                Height: =34
                IconBackground: =RGBA(255, 255, 255, 1)
                IconFill: =RGBA(0, 0, 0, 1)
                InputTextPlaceholder: =If(IsBlank(Self.SelectedDate), Text("", Self.Format, Self.Language))
                PaddingBottom: =10
                PaddingLeft: =10
                PaddingRight: =50
                PaddingTop: =10
                Size: =10.5
                Visible: =!IsBlank(dealSelected) && att_Step4_1.Visible && ((CurrentStep <= CurrentDealSelectedStep || dealSelected.status in ["REQUEST_EDIT", "CLOSED"]) || dealSelected.is_request_edit)
                Width: =Input_ContractDate.Width - 6
                X: =Input_ContractDate.X + 3
                Y: =Input_ContractDate.Y + 5
                ZIndex: =104

            "MAFileList As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                DelayItemLoading: =true
                Height: =Self.AllItemsCount * Self.TemplateHeight
                Items: |-
                    =Filter(listFile, !({id: ThisRecord.id} in listDeleteMA) && title = If(att_13.Visible, "step232", att_16.Visible, "step22", att_Step4_1.Visible, "step4", att_Step5.Visible, "step5", att_Step6.Visible, "step6", att_Step7.Visible, "step7"))
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplatePadding: =0
                TemplateSize: =40
                Width: |-
                    =If( CurrentStep = 2 && DealDetailTab = 2,
                        att_16.Width,
                        CurrentStep = 2 && DealDetailTab = 3,
                        att_13.Width,
                        CurrentStep = 4,
                        att_Step4_1.Width,
                        CurrentStep = 5,
                        att_Step5.Width,
                        CurrentStep = 6,
                        att_Step6.Width,
                        CurrentStep = 7,
                        att_Step7.Width
                    )
                X: |-
                    =If( CurrentStep = 2 && DealDetailTab = 2,
                        att_16.X,
                        CurrentStep = 2 && DealDetailTab = 3,
                        att_13.X,
                        CurrentStep = 4,
                        att_Step4_1.X,
                        CurrentStep = 5,
                        att_Step5.X,
                        CurrentStep = 6,
                        att_Step6.X,
                        CurrentStep = 7,
                        att_Step7.X
                    )
                Y: |-
                    =If( CurrentStep = 2 && DealDetailTab = 2,
                        att_16.Y + att_16.Height,
                        CurrentStep = 2 && DealDetailTab = 3,
                        att_13.Y + att_13.Height, // 232 att_13
                        CurrentStep = 4,
                        att_Step4_1.Y + att_Step4_1.Height,
                        CurrentStep = 5,
                        att_Step5.Y + att_Step5.Height,
                        CurrentStep = 6,
                        att_Step6.Y + att_Step6.Height,
                        CurrentStep = 7,
                        att_Step7.Y + att_Step7.Height
                    )
                ZIndex: =107

                HtmlText7_5 As htmlViewer:
                    Font: =Font.Arial
                    HtmlText: |-
                        ="<svg xmlns=""http://www.w3.org/2000/svg"" width=""16"" height=""20"" viewBox=""0 0 16 20"" fill=""none"">
                          <path d=""M10.7503 2.66732H2.50033V17.334H13.5003V5.41732H10.7503V2.66732ZM2.50033 0.833984H11.667L15.3337 4.50065V17.334C15.3337 17.8202 15.1405 18.2865 14.7967 18.6303C14.4529 18.9742 13.9866 19.1673 13.5003 19.1673H2.50033C2.0141 19.1673 1.54778 18.9742 1.20396 18.6303C0.860146 18.2865 0.666992 17.8202 0.666992 17.334V2.66732C0.666992 2.18109 0.860146 1.71477 1.20396 1.37096C1.54778 1.02714 2.0141 0.833984 2.50033 0.833984ZM4.33366 9.08398H11.667V10.9173H4.33366V9.08398ZM4.33366 12.7507H11.667V14.584H4.33366V12.7507Z"" fill=""#114F90""/>
                        </svg>"
                    OnSelect: |-
                        =// Patch(listReportAttachFile, ThisItem, {IsDeleted: true});
                        // If(!IsBlank(ThisItem.Id),Collect(listReportAttachDelete,ThisItem))
                    PaddingBottom: =0
                    PaddingRight: =0
                    PaddingTop: =10
                    Width: =30
                    ZIndex: =1

                Button1_14 As button:
                    Align: =Align.Left
                    BorderThickness: =0
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(202, 202, 202, 1)
                    DisabledFill: =RGBA(244, 244, 244, 0)
                    DisplayMode: =If("DOWNLOADFILE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action), DisplayMode.Edit, DisplayMode.Disabled)
                    Fill: =RGBA(0, 0, 0, 0)
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    HoverColor: =RGBA(56, 96, 178, 1)
                    HoverFill: =
                    OnSelect: |-
                        =Set(urlMA,'TVS->DownloadFileExpTime-V1'.Run(bucketMAAttach,Self.Text).url);
                        Launch(urlMA);
                    PaddingLeft: =2
                    PressedColor: =Self.Color
                    PressedFill: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: =If(Len(ThisItem.file_name) < If(App.Width > 1700, 150, App.Width > 1400, 100, 60), ThisItem.file_name, Left(ThisItem.file_name, If(App.Width > 1700, 150, App.Width > 1400, 100, 60)) & "...")
                    Width: =Parent.Width - If(App.Width > 1300, 200, 75)
                    X: =30
                    ZIndex: =2

                CreatedByPEVC_Text As label:
                    Align: =Align.Right
                    Font: =Font.Arial
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingRight: =10
                    PaddingTop: =0
                    Size: =10.5
                    Text: =ThisItem.name
                    Visible: =App.Width > 1300 
                    Width: =Parent.Width - 80 - Button1_14.Width
                    X: =Button1_14.X + Button1_14.Width
                    ZIndex: =3

                RemoveIConReportEN_1 As icon.Cancel:
                    Color: =RGBA(0, 0, 0, 1)
                    FocusedBorderThickness: =3
                    Height: =18
                    Icon: =Icon.Cancel
                    OnSelect: |-
                        =Collect(listDeleteMA, {id: ThisItem.id})
                    Visible: |-
                        =// If(!IsBlank(dealSelected) && !IsBlank(dealSelected.is_request_edit) && dealSelected.is_request_edit,
                        //     (SaveButton_6.Visible || btnSubmit_4.Visible),
                        //     (SaveButton_6.Visible || btnSubmit_4.Visible) && If(CurrentStep in [5,6,7], true, !(CurrentDealSelectedStep in [5,6,7]))
                        // )
                        // Parent.Visible && SaveButton_6.Visible
                        !isLazyload && (CurrentDealSelectedStep >= 2 && SaveButton_6.Visible && !(CurrentDealSelectedStep in [5,6,7])) || !!(dealSelected.is_request_edit && SaveButton_6.Visible)
                    Width: =18
                    X: =CreatedByPEVC_Text.X + CreatedByPEVC_Text.Width + 15
                    Y: =If(App.Width > 600, 11, 11)
                    ZIndex: =4

            Step1Form As group:
                Height: =5
                Width: =5
                X: =80
                Y: =80
                ZIndex: =107

                ClientName_Label_MAStep1 As label:
                    Color: =RGBA(82, 82, 82, 1)
                    Font: =Font.Arial
                    Height: =If(App.Width > 800, 44, 25)
                    PaddingRight: =10
                    PaddingTop: =5.27
                    Size: =10.5
                    Text: ="Client Name"
                    Visible: =CurrentStep = 1
                    Width: =100
                    X: =DetailMACot.X + If(App.Width > 800, 35, 5)
                    Y: =DetailMACot.Y + 15
                    ZIndex: =85

                ClientName_Input_MAStep1 As text:
                    BorderColor: =RGBA(191, 191, 192, 1)
                    BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Default: =If(IsBlank(clientNameSelectedValue), "", clientNameSelectedValue.company_name)
                    DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                    DisplayMode: |-
                        =If(SaveButton_6.Visible, DisplayMode.Edit,
                            If(btnApprove_MA.Visible ||
                            (isApproveStatus && !(dealSelected.status in ["PENDING_MANDATE_APPROVAL", "PENDING_REVIEW_DEAL_OWNER"])) ||
                            (!isParticitatingUser && !isIBDrirector) ||
                            (dealSelected.status in ["DONE", "CLOSED"] && !isIBDrirector) ||
                            If(IsBlank(dealSelected), !btnSubmit_4.Visible, !SaveButton_6.Visible),
                            DisplayMode.Disabled, DisplayMode.Edit)
                        )
                    FocusedBorderColor: =RGBA(0, 18, 107, 1)
                    FocusedBorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Font: =Font.Arial
                    Height: =44
                    HintText: ="Search client name"
                    HoverFill: =
                    OnChange: |-
                        =// Set(companyInfo,ClientInformation_Find_By_ID.Run(resKeyOpenAll.open,resKeyOpenAll.close,ClientName_Input_MAStep1.Text,"nameandcode"));
                        // If(IsBlank(clientNameSelectedValue), Reset(Self));
                    OnSelect: |-
                        =Set(lastSelectedCompanyId, If(IsBlank(clientNameSelectedValue), "", clientNameSelectedValue.id_company));
                        Set(ClientNameShowDropdown, !ClientNameShowDropdown);
                        Set(clientNameSelectedValue, Blank());
                    PaddingBottom: =0
                    PaddingRight: =40
                    PaddingTop: =0
                    PressedBorderColor: =RGBA(0, 18, 107, 1)
                    Size: =If(App.Width > 600, 10.5, 12)
                    Visible: =CurrentStep = 1
                    Width: =If(Parent.Width > 800, 500 , Parent.Width - Self.X - 30)
                    X: =ClientName_Label_MAStep1.X + If(App.Width > 600, ClientName_Label_MAStep1.Width, 0)
                    Y: =ClientName_Label_MAStep1.Y + If(Parent.Width > 600, 0, 30)
                    ZIndex: =86

                DealType1_Label_MAStep1 As label:
                    Color: =RGBA(82, 82, 82, 1)
                    Font: =Font.Arial
                    Height: =If(App.Width > 800, 44, 25)
                    PaddingRight: =10
                    PaddingTop: =5.27
                    Size: =10.5
                    Text: ="Deal Type 1"
                    Visible: =CurrentStep = 1
                    Width: =100
                    X: =ClientName_Label_MAStep1.X
                    Y: =ClientName_Input_MAStep1.Y + ClientName_Input_MAStep1.Height + If(App.Width > 800, 20, 10)
                    ZIndex: =87

                DealType2_Label_MAStep1 As label:
                    Color: =RGBA(82, 82, 82, 1)
                    Font: =Font.Arial
                    Height: =If(App.Width > 800, 44, 25)
                    PaddingRight: =10
                    PaddingTop: =5.27
                    Size: =10.5
                    Text: ="Deal Type 2"
                    Visible: =CurrentStep = 1
                    Width: =100
                    X: =DealType1_Label_MAStep1.X
                    Y: =DealType1DropDown.Y + DealType1DropDown.Height + If(App.Width > 800, 20, 10)
                    ZIndex: =88

                DealType3_Label_MAStep1 As label:
                    Color: =RGBA(82, 82, 82, 1)
                    Font: =Font.Arial
                    Height: =If(App.Width > 800, 44, 25)
                    PaddingRight: =10
                    PaddingTop: =5.27
                    Size: =10.5
                    Text: ="Deal Type 3"
                    Visible: =CurrentStep = 1
                    Width: =100
                    X: =DealType1_Label_MAStep1.X
                    Y: =DealType2DropDown.Y + DealType2DropDown.Height + If(App.Width > 800, 20, 10)
                    ZIndex: =89

                DealType1DropDown As button:
                    Align: =Align.Left
                    BorderColor: =If(statusShowDropdown, RGBA(0, 18, 107, 1), ColorFade(Self.Fill, -15%))
                    BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Color: =RGBA(82, 82, 82, 1)
                    DisplayMode: =ClientName_Input_MAStep1.DisplayMode
                    Fill: =RGBA(255, 255, 255, 1)
                    FocusedBorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    Height: =44
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(241, 244, 249, 1)
                    OnSelect: =Set(dealType1ShowDropdown, !dealType1ShowDropdown)
                    PaddingLeft: =15
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    PressedBorderColor: =
                    PressedColor: =
                    PressedFill: =
                    RadiusBottomLeft: =5
                    RadiusBottomRight: =5
                    RadiusTopLeft: =5
                    RadiusTopRight: =5
                    Size: =10.5
                    Text: =dealType1SelectedValue
                    Visible: =CurrentStep = 1
                    Width: =If(App.Width > 600, 250, App.Width - Self.X - 30)
                    X: =DealType1_Label_MAStep1.X + If(App.Width > 600, DealType1_Label_MAStep1.Width, 0)
                    Y: =DealType1_Label_MAStep1.Y + If(Parent.Width > 600, 0, 30)
                    ZIndex: =90

                iconDealType1DropDown As htmlViewer:
                    Font: =Font.Arial
                    Height: =44
                    HtmlText: |-
                        =If(dealType1ShowDropdown,
                        "<div style=""cursor: pointer""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                        <g clip-path=""url(#clip0_1760_3688)"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill=""#"&If(ClientName_Input_MAStep1.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                        </g>
                        <defs>
                        <clipPath id=""clip0_1760_3688"">
                        <rect width=""24"" height=""24"" fill=""white""/>
                        </clipPath>
                        </defs>
                        </svg></div>"
                        , "<div style=""cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill=""#"&If(ClientName_Input_MAStep1.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                        </svg></div>")
                    OnSelect: =If(ClientName_Input_MAStep1.DisplayMode = DisplayMode.Disabled, false, Set(dealType1ShowDropdown, !dealType1ShowDropdown));
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    Size: =11.60
                    Visible: =CurrentStep = 1
                    Width: =35
                    X: =DealType1DropDown.X + DealType1DropDown.Width - Self.Width
                    Y: =DealType1DropDown.Y + 5
                    ZIndex: =91

                DealType2DropDown As button:
                    Align: =Align.Left
                    BorderColor: =If(statusShowDropdown, RGBA(0, 18, 107, 1), ColorFade(Self.Fill, -15%))
                    BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Color: =RGBA(82, 82, 82, 1)
                    DisplayMode: =ClientName_Input_MAStep1.DisplayMode
                    Fill: =RGBA(255, 255, 255, 1)
                    FocusedBorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    Height: =44
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(241, 244, 249, 1)
                    OnSelect: =Set(dealType2ShowDropdown, !dealType2ShowDropdown)
                    PaddingLeft: =15
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    PressedBorderColor: =
                    PressedColor: =
                    PressedFill: =
                    RadiusBottomLeft: =5
                    RadiusBottomRight: =5
                    RadiusTopLeft: =5
                    RadiusTopRight: =5
                    Size: =10.5
                    Text: =dealType2SelectedValue
                    Visible: =CurrentStep = 1
                    Width: =DealType1DropDown.Width
                    X: =DealType2_Label_MAStep1.X + If(App.Width > 600, DealType2_Label_MAStep1.Width, 0)
                    Y: =DealType2_Label_MAStep1.Y + If(Parent.Width > 600, 0, 30)
                    ZIndex: =92

                iconDealType2DropDown As htmlViewer:
                    Font: =Font.Arial
                    Height: =44
                    HtmlText: |-
                        =If(dealType2ShowDropdown,
                        "<div style=""cursor: pointer""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                        <g clip-path=""url(#clip0_1760_3688)"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill=""#"&If(ClientName_Input_MAStep1.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                        </g>
                        <defs>
                        <clipPath id=""clip0_1760_3688"">
                        <rect width=""24"" height=""24"" fill=""white""/>
                        </clipPath>
                        </defs>
                        </svg></div>"
                        , "<div style=""cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill=""#"&If(ClientName_Input_MAStep1.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                        </svg></div>")
                    OnSelect: =If(ClientName_Input_MAStep1.DisplayMode = DisplayMode.Disabled, false, Set(dealType2ShowDropdown, !dealType2ShowDropdown))
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    Size: =11.60
                    Visible: =CurrentStep = 1
                    Width: =35
                    X: =DealType2DropDown.X + DealType2DropDown.Width - Self.Width
                    Y: =DealType2DropDown.Y + 5
                    ZIndex: =93

                DealType3DropDown As button:
                    Align: =Align.Left
                    BorderColor: =If(statusShowDropdown, RGBA(0, 18, 107, 1), ColorFade(Self.Fill, -15%))
                    BorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Color: =RGBA(82, 82, 82, 1)
                    DisplayMode: =ClientName_Input_MAStep1.DisplayMode
                    Fill: =RGBA(255, 255, 255, 1)
                    FocusedBorderThickness: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 1)
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    Height: =44
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(241, 244, 249, 1)
                    OnSelect: =Set(dealType3ShowDropdown, !dealType3ShowDropdown)
                    PaddingLeft: =15
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    PressedBorderColor: =
                    PressedColor: =
                    PressedFill: =
                    RadiusBottomLeft: =5
                    RadiusBottomRight: =5
                    RadiusTopLeft: =5
                    RadiusTopRight: =5
                    Size: =10.5
                    Text: =dealType3SelectedValue
                    Visible: =CurrentStep = 1
                    Width: =DealType1DropDown.Width
                    X: =DealType3_Label_MAStep1.X + If(App.Width > 600, DealType3_Label_MAStep1.Width, 0)
                    Y: =DealType3_Label_MAStep1.Y + If(Parent.Width > 600, 0, 30)
                    ZIndex: =94

                iconDealType3DropDown As htmlViewer:
                    Font: =Font.Arial
                    Height: =44
                    HtmlText: |-
                        =If(dealType2ShowDropdown,
                        "<div style=""cursor: pointer""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                        <g clip-path=""url(#clip0_1760_3688)"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill=""#"&If(ClientName_Input_MAStep1.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                        </g>
                        <defs>
                        <clipPath id=""clip0_1760_3688"">
                        <rect width=""24"" height=""24"" fill=""white""/>
                        </clipPath>
                        </defs>
                        </svg></div>"
                        , "<div style=""cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill=""#"&If(ClientName_Input_MAStep1.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                        </svg></div>")
                    OnSelect: =If(ClientName_Input_MAStep1.DisplayMode = DisplayMode.Disabled, false, Set(dealType3ShowDropdown, !dealType3ShowDropdown))
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    Size: =11.60
                    Visible: =CurrentStep = 1
                    Width: =35
                    X: =DealType3DropDown.X + DealType3DropDown.Width - Self.Width
                    Y: =DealType3DropDown.Y + 5
                    ZIndex: =95

                CloseDropdownMA_Step1 As rectangle:
                    Fill: =RGBA(255, 255, 255, 0)
                    Height: =App.Height - 70
                    OnSelect: |
                        =Set(dealType1ShowDropdown, false);
                        Set(dealType2ShowDropdown, false);
                        Set(dealType3ShowDropdown, false);
                        
                        // If(IsBlank(clientNameSelectedValue) && !IsBlank(clientNameSelectedValueBefore), Set(clientNameSelectedValue, clientNameSelectedValueBefore));
                        If(ClientNameShowDropdown, Set(clientNameSelectedValue, If(IsBlank(lastSelectedCompanyId), Blank(), First(Filter(companyList, id_company = lastSelectedCompanyId)))));
                        Set(ClientNameShowDropdown, false);
                    Visible: =(dealType1ShowDropdown || dealType2ShowDropdown || dealType3ShowDropdown || ClientNameShowDropdown) && CurrentStep = 1
                    Width: =Parent.Width
                    ZIndex: =96

                "Gl_DealType1DropDown As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                    '#CopilotOverlayLabel': ="Filtered"
                    BorderColor: =RGBA(191, 191, 192, 1)
                    BorderThickness: =0.5
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =Min(Self.AllItemsCount, 4) * Self.TemplateHeight + 10
                    Items: |-
                        =[{value:"M&A"},{value:"Capital Market"},{value:"Restructuring"}]
                    Layout: =Layout.Vertical
                    LoadingSpinner: =LoadingSpinner.Data
                    TemplatePadding: =0
                    TemplateSize: =40
                    Visible: =dealType1ShowDropdown && CurrentStep = 1
                    Width: =DealType1DropDown.Width
                    X: =DealType1DropDown.X
                    Y: =DealType1DropDown.Y + 50
                    ZIndex: =97

                    Button6_47 As button:
                        Align: =Align.Left
                        BorderThickness: =0
                        Color: =RGBA(82, 82, 82, 1)
                        Fill: =If(dealType1SelectedValue = ThisItem.value, RGBA(241, 244, 249, 1), RGBA(0, 0, 0, 0))
                        FocusedBorderThickness: =0
                        Font: =Font.Arial
                        FontWeight: =FontWeight.Normal
                        HoverColor: =RGBA(0, 0, 0, 1)
                        HoverFill: =RGBA(241, 244, 249, 1)
                        OnSelect: |-
                            =Set(dealType1SelectedValue, ThisItem.value);
                            Set(dealType1ShowDropdown, false);
                        PaddingLeft: =15
                        PaddingRight: =5.27
                        PaddingTop: =5.27
                        PressedColor: =Self.Color
                        PressedFill: =
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10.5
                        Text: =ThisItem.value
                        Width: =Parent.Width
                        X: =0.00
                        ZIndex: =1

                "Gl_DealType2DropDown As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                    '#CopilotOverlayLabel': ="Filtered"
                    BorderColor: =RGBA(191, 191, 192, 1)
                    BorderThickness: =0.5
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =Min(Self.AllItemsCount, 4) * Self.TemplateHeight + 10
                    Items: |-
                        =[{value:"Sell-side"},{value:"Buy-side"}]
                    Layout: =Layout.Vertical
                    LoadingSpinner: =LoadingSpinner.Data
                    TemplatePadding: =0
                    TemplateSize: =40
                    Visible: =dealType2ShowDropdown && CurrentStep = 1
                    Width: =DealType2DropDown.Width
                    X: =DealType2DropDown.X
                    Y: =DealType2DropDown.Y + 50
                    ZIndex: =98

                    Button6_46 As button:
                        Align: =Align.Left
                        BorderThickness: =0
                        Color: =RGBA(82, 82, 82, 1)
                        Fill: =If(dealType2SelectedValue = ThisItem.value, RGBA(241, 244, 249, 1), RGBA(0, 0, 0, 0))
                        FocusedBorderThickness: =0
                        Font: =Font.Arial
                        FontWeight: =FontWeight.Normal
                        HoverColor: =RGBA(0, 0, 0, 1)
                        HoverFill: =RGBA(241, 244, 249, 1)
                        OnSelect: |-
                            =Set(dealType2SelectedValue, ThisItem.value);
                            Set(dealType2ShowDropdown, false);
                        PaddingLeft: =15
                        PaddingRight: =5.27
                        PaddingTop: =5.27
                        PressedColor: =Self.Color
                        PressedFill: =
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10.5
                        Text: =ThisItem.value
                        Width: =Parent.Width
                        X: =0.00
                        ZIndex: =1

                "Gl_DealType3DropDown As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                    '#CopilotOverlayLabel': ="Filtered"
                    BorderColor: =RGBA(191, 191, 192, 1)
                    BorderThickness: =0.5
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =Min(Self.AllItemsCount, 4) * Self.TemplateHeight + 10
                    Items: |-
                        =[{value:"ECM"},{value:"DCM"}]
                    Layout: =Layout.Vertical
                    LoadingSpinner: =LoadingSpinner.Data
                    TemplatePadding: =0
                    TemplateSize: =40
                    Visible: =dealType3ShowDropdown && CurrentStep = 1
                    Width: =DealType3DropDown.Width
                    X: =DealType3DropDown.X
                    Y: =DealType3DropDown.Y + 50
                    ZIndex: =99

                    Button6_45 As button:
                        Align: =Align.Left
                        BorderThickness: =0
                        Color: =RGBA(82, 82, 82, 1)
                        Fill: =If(dealType3SelectedValue = ThisItem.value, RGBA(241, 244, 249, 1), RGBA(0, 0, 0, 0))
                        FocusedBorderThickness: =0
                        Font: =Font.Arial
                        FontWeight: =FontWeight.Normal
                        HoverColor: =RGBA(0, 0, 0, 1)
                        HoverFill: =RGBA(241, 244, 249, 1)
                        OnSelect: |-
                            =Set(dealType3SelectedValue, ThisItem.value);
                            Set(dealType3ShowDropdown, false);
                        PaddingLeft: =15
                        PaddingRight: =5.27
                        PaddingTop: =5.27
                        PressedColor: =Self.Color
                        PressedFill: =
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10.5
                        Text: =ThisItem.value
                        Width: =Parent.Width
                        X: =0.00
                        ZIndex: =1

                "ClientName_DropDown As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                    '#CopilotOverlayLabel': ="Filtered"
                    BorderColor: =RGBA(191, 191, 192, 1)
                    BorderThickness: =0.5
                    Fill: =RGBA(255, 255, 255, 1)
                    Height: =Min(Self.AllItemsCount, 4) * Self.TemplateHeight + 10
                    Items: |-
                        =If(!IsEmpty(Filter(companyList, If(IsBlank(ClientName_Input_MAStep1.Text), "", ClientName_Input_MAStep1.Text) in ThisRecord.company_name)),
                        Filter(companyList, If(IsBlank(ClientName_Input_MAStep1.Text), "", ClientName_Input_MAStep1.Text) in ThisRecord.company_name),
                        [{company_name: "Empty data.", entity_legal_form: "Empty data.", geography: "Empty data.", id: "Empty data.", id_company: "Empty data.", industry: "Empty data.", product_or_service_offered: "Empty data."}]
                        )
                    Layout: =Layout.Vertical
                    LoadingSpinner: =LoadingSpinner.Data
                    TemplatePadding: =0
                    TemplateSize: =40
                    Visible: =ClientNameShowDropdown && CurrentStep = 1
                    Width: =ClientName_Input_MAStep1.Width
                    X: =ClientName_Input_MAStep1.X
                    Y: =ClientName_Input_MAStep1.Y + 50
                    ZIndex: =100

                    Button6_57 As button:
                        Align: =Align.Left
                        BorderThickness: =0
                        Color: =RGBA(82, 82, 82, 1)
                        Fill: =If(clientNameSelectedValue.id = ThisItem.id, RGBA(241, 244, 249, 1), RGBA(0, 0, 0, 0))
                        FocusedBorderThickness: =0
                        Font: =Font.Arial
                        FontWeight: =FontWeight.Normal
                        HoverColor: =RGBA(0, 0, 0, 1)
                        HoverFill: =RGBA(241, 244, 249, 1)
                        OnSelect: |-
                            =If(Self.Text <> "Empty data.",
                                Set(clientNameSelectedValue, ThisItem);
                                Set(companyEdit, ThisItem);
                                Set(ClientNameShowDropdown, false);,
                                Select(CloseDropdownMA_Step1);
                            );
                        PaddingLeft: =15
                        PaddingRight: =5.27
                        PaddingTop: =5.27
                        PressedColor: =Self.Color
                        PressedFill: =
                        RadiusBottomLeft: =0
                        RadiusBottomRight: =0
                        RadiusTopLeft: =0
                        RadiusTopRight: =0
                        Size: =10.5
                        Text: =ThisItem.company_name
                        Width: =Parent.Width
                        X: =0.00
                        ZIndex: =1

                iconDealType1DropDown_1 As htmlViewer:
                    Font: =Font.Arial
                    Height: =44
                    HtmlText: |-
                        =If(ClientNameShowDropdown,
                        "<div style=""cursor: pointer""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                        <g clip-path=""url(#clip0_1760_3688)"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill=""#"&If(ClientName_Input_MAStep1.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                        </g>
                        <defs>
                        <clipPath id=""clip0_1760_3688"">
                        <rect width=""24"" height=""24"" fill=""white""/>
                        </clipPath>
                        </defs>
                        </svg></div>"
                        , "<div style=""cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                        <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill=""#"&If(ClientName_Input_MAStep1.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                        </svg></div>")
                    OnSelect: |-
                        =If(ClientName_Input_MAStep1.DisplayMode = DisplayMode.Disabled, false,
                            Set(lastSelectedCompanyId, If(IsBlank(clientNameSelectedValue), "", clientNameSelectedValue.id_company));
                            Set(ClientNameShowDropdown, !ClientNameShowDropdown);
                            Set(clientNameSelectedValue, Blank());
                        );
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    Size: =11.60
                    Visible: =CurrentStep = 1
                    Width: =35
                    X: =ClientName_Input_MAStep1.X + ClientName_Input_MAStep1.Width - Self.Width
                    Y: =ClientName_Input_MAStep1.Y + 5
                    ZIndex: =101

            "MAFileList_13 As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                DelayItemLoading: =true
                Height: =Self.AllItemsCount * Self.TemplateHeight
                Items: |-
                    =Filter(listFile, !({id: ThisRecord.id} in listDeleteMA) && title = "step231")
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplatePadding: =0
                TemplateSize: =40
                Visible: =att_13.Visible
                Width: =att_12.Width
                X: =att_12.X
                Y: =att_12.Y + att_12.Height
                ZIndex: =108

                Button1_15 As button:
                    Align: =Align.Left
                    BorderThickness: =0
                    Color: =RGBA(0, 0, 0, 1)
                    DisabledColor: =RGBA(202, 202, 202, 1)
                    DisabledFill: =RGBA(244, 244, 244, 0)
                    DisplayMode: =If("DOWNLOADFILE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action), DisplayMode.Edit, DisplayMode.Disabled)
                    Fill: =RGBA(0, 0, 0, 0)
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    HoverColor: =RGBA(56, 96, 178, 1)
                    HoverFill: =
                    OnSelect: |-
                        =Set(urlMA,'TVS->DownloadFileExpTime-V1'.Run(bucketMAAttach,Self.Text).url);
                        Launch(urlMA);
                    PaddingLeft: =2
                    PressedColor: =Self.Color
                    PressedFill: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: =If(Len(ThisItem.file_name) < If(App.Width > 1700, 150, App.Width > 1400, 100, 60), ThisItem.file_name, Left(ThisItem.file_name, If(App.Width > 1700, 150, App.Width > 1400, 100, 60)) & "...")
                    Width: =Parent.Width - If(App.Width > 1300, 200, 75)
                    X: =30
                    ZIndex: =1

                HtmlText7_10 As htmlViewer:
                    Font: =Font.Arial
                    HtmlText: |-
                        ="<svg xmlns=""http://www.w3.org/2000/svg"" width=""16"" height=""20"" viewBox=""0 0 16 20"" fill=""none"">
                          <path d=""M10.7503 2.66732H2.50033V17.334H13.5003V5.41732H10.7503V2.66732ZM2.50033 0.833984H11.667L15.3337 4.50065V17.334C15.3337 17.8202 15.1405 18.2865 14.7967 18.6303C14.4529 18.9742 13.9866 19.1673 13.5003 19.1673H2.50033C2.0141 19.1673 1.54778 18.9742 1.20396 18.6303C0.860146 18.2865 0.666992 17.8202 0.666992 17.334V2.66732C0.666992 2.18109 0.860146 1.71477 1.20396 1.37096C1.54778 1.02714 2.0141 0.833984 2.50033 0.833984ZM4.33366 9.08398H11.667V10.9173H4.33366V9.08398ZM4.33366 12.7507H11.667V14.584H4.33366V12.7507Z"" fill=""#114F90""/>
                        </svg>"
                    OnSelect: |-
                        =// Patch(listReportAttachFile, ThisItem, {IsDeleted: true});
                        // If(!IsBlank(ThisItem.Id),Collect(listReportAttachDelete,ThisItem))
                    PaddingBottom: =0
                    PaddingRight: =0
                    PaddingTop: =10
                    Width: =30
                    ZIndex: =2

                CreatedByPEVC_Text_1 As label:
                    Align: =Align.Right
                    Font: =Font.Arial
                    OnSelect: =Select(Parent)
                    PaddingBottom: =0
                    PaddingRight: =10
                    PaddingTop: =0
                    Size: =10.5
                    Text: =ThisItem.name
                    Visible: =App.Width > 1300 
                    Width: =Parent.Width - 80 - Button1_14.Width
                    X: =Button1_14.X + Button1_14.Width
                    ZIndex: =3

                RemoveIConReportEN_2 As icon.Cancel:
                    Color: =RGBA(0, 0, 0, 1)
                    FocusedBorderThickness: =3
                    Height: =18
                    Icon: =Icon.Cancel
                    OnSelect: |-
                        =Collect(listDeleteMA, {id: ThisItem.id})
                    Visible: =!isLazyload && (CurrentDealSelectedStep >= 2 && SaveButton_6.Visible && !(CurrentDealSelectedStep in [5,6,7])) || !!(dealSelected.is_request_edit && SaveButton_6.Visible)
                    Width: =18
                    X: =Parent.Width - 30
                    Y: =If(App.Width > 600, 11, 11)
                    ZIndex: =4

            MA_EngagementRiskDropdown As button:
                Align: =Align.Left
                BorderColor: =If(IsBlank(Self.Text) && isSubmited, RGBA(214, 27, 27, 1), If(reportTypeShowDropdown, RGBA(0, 18, 107, 1), ColorFade(Self.Fill, -15%)))
                BorderThickness: =0
                Color: =RGBA(82, 82, 82, 1)
                DisplayMode: =If(SaveButton_6.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                Fill: =RGBA(255, 255, 255, 1)
                FocusedBorderColor: =RGBA(0, 18, 107, 1)
                FocusedBorderThickness: =1
                Font: =Font.Arial
                FontWeight: =FontWeight.Normal
                Height: =layout_ip_EngagementRisk.Height - 2
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(241, 244, 249, 1)
                OnSelect: =Set(reportTypeShowDropdown, !reportTypeShowDropdown);
                PaddingLeft: =10
                PaddingRight: =35
                PaddingTop: =5.27
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10.5
                Text: =enagementRiskValue
                Visible: =label_EngagementRisk.Visible
                Width: =layout_ip_EngagementRisk.Width - 2
                X: =layout_ip_EngagementRisk.X + 1
                Y: =layout_ip_EngagementRisk.Y + 1
                ZIndex: =109

            Step2Deal As group:
                Height: =5
                Width: =5
                X: =40
                Y: =40
                ZIndex: =109

                layout_deal_value As rectangle:
                    BorderColor: =RGBA(192, 192, 192, 1)
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =44
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =(WhiteBg_DetailMA.Width - If(App.Width > 800, 200, 0)) * If(App.Width > 1620, 0.25, App.Width > 1200, 0.35, App.Width > 1000, 0.6, App.Width > 800, 0.35, 0.45)
                    X: =LabelGeneralInformation.X
                    Y: =LabelGeneralInformation.Y + LabelGeneralInformation.Height
                    ZIndex: =7

                layout_ip_deal_value As rectangle:
                    BorderColor: =If(isSubmited && IsBlank(input_deal_value.Text), Color.Red, RGBA(191, 191, 192, 1))
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =layout_deal_value.Height
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =WhiteBg_DetailMA.X + WhiteBg_DetailMA.Width - Self.X - If(App.Width > 800, 28, 30)
                    X: =layout_deal_value.X + layout_deal_value.Width
                    Y: =layout_deal_value.Y
                    ZIndex: =8

                label_deal_value As label:
                    Font: =Font.Arial
                    Height: =layout_deal_value.Height
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    Size: =10.5
                    Text: ="Deal value"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_deal_value.Width
                    X: =layout_deal_value.X
                    Y: =layout_deal_value.Y
                    ZIndex: =9

                input_deal_value As text:
                    Align: =Align.Right
                    BorderColor: =RGBA(0,0,0,0)
                    BorderThickness: =If(IsBlank(input_deal_value.Text) && isSubmited, 1, 0)
                    Default: |-
                        =Text(Value(Substitute(dealValueNumber, ",","")), "[$-en-GB]#,###")
                    DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                    DisplayMode: =If(SaveButton_6.Visible || SaveButton_OwnerChangeDealValue.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                    FocusedBorderColor: =RGBA(0, 18, 107, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.Arial
                    Format: =TextFormat.Number
                    Height: =layout_ip_deal_value.Height - 2
                    HoverFill: =
                    OnChange: |-
                        =If(
                            IsNumeric(Substitute(Self.Text, ",","")),
                            Set(dealValueNumber, Text(Value(Substitute(Self.Text, ",","")), "[$-en-GB]#,###")),
                            Reset(Self));
                    PaddingRight: =12
                    PaddingTop: =5.27
                    PressedBorderColor: =RGBA(0, 18, 107, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =If(App.Width > 600, 10.5, 12)
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_deal_value.Width - 2
                    X: =layout_ip_deal_value.X + 1
                    Y: =layout_ip_deal_value.Y + 1
                    ZIndex: =10

                layout_Probability As rectangle:
                    BorderColor: =RGBA(192, 192, 192, 1)
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =44
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_deal_value.Width
                    X: =layout_deal_value.X
                    Y: =layout_deal_value.Y + layout_deal_value.Height
                    ZIndex: =11

                layout_ip_Probability As rectangle:
                    BorderColor: =If(isSubmited && IsBlank(input_Probability.Text), Color.Red, RGBA(191, 191, 192, 1))
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =layout_Probability.Height
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_deal_value.Width
                    X: =layout_Probability.X + layout_Probability.Width
                    Y: =layout_Probability.Y
                    ZIndex: =12

                label_Probability As label:
                    Font: =Font.Arial
                    Height: =layout_Probability.Height
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    Size: =10.5
                    Text: ="Probability of Success (%)"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_Probability.Width
                    X: =layout_Probability.X
                    Y: =layout_Probability.Y
                    ZIndex: =13

                input_Probability As text:
                    Align: =Align.Right
                    BorderColor: =RGBA(0,0,0,0)
                    BorderThickness: =If(IsBlank(input_Probability.Text) && isSubmited, 1, 0)
                    Default: =probabilityOfSuccessMA
                    DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                    DisplayMode: =If(SaveButton_6.Visible || SaveButton_OwnerChangeDealValue.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                    FocusedBorderColor: =RGBA(0, 18, 107, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.Arial
                    Height: =layout_ip_Probability.Height - 2
                    HoverFill: =
                    OnChange: |-
                        =Set(OriginalText, Substitute(Self.Text, ",", ""));
                        Set(FirstDotIndex, Find(".", OriginalText));
                        Set(TextBeforeFirstDot, Left(OriginalText, FirstDotIndex));
                        Set(TextAfterFirstDot, Mid(OriginalText, FirstDotIndex + 1, Len(OriginalText) - FirstDotIndex));
                        
                        Set(ModifiedText, TextBeforeFirstDot & Substitute(TextAfterFirstDot, ".", ""));
                        If(!IsNumeric(ModifiedText), Substitute(Self.Text, Self.Text, ""); Reset(Self);Set(probabilityOfSuccessMA, Blank()), Set(probabilityOfSuccessMA, ModifiedText));
                        Reset(Self);
                    PaddingRight: =20
                    PaddingTop: =5.27
                    PressedBorderColor: =RGBA(0, 18, 107, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =If(App.Width > 600, 10.5, 12)
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_Probability.Width - 2
                    X: =layout_ip_Probability.X + 1
                    Y: =layout_ip_Probability.Y + 1
                    ZIndex: =14

                layout_Transaction As rectangle:
                    BorderColor: =RGBA(192, 192, 192, 1)
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =44
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_deal_value.Width
                    X: =layout_Probability.X
                    Y: =layout_Probability.Y + layout_Probability.Height
                    ZIndex: =15

                layout_ip_Transaction As rectangle:
                    BorderColor: =If(isSubmited && IsBlank(input_Transaction.Text), Color.Red, RGBA(191, 191, 192, 1))
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =layout_Transaction.Height
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_deal_value.Width
                    X: =layout_Transaction.X + layout_Transaction.Width
                    Y: =layout_Transaction.Y
                    ZIndex: =16

                label_Transaction As label:
                    Font: =Font.Arial
                    Height: =layout_Transaction.Height
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    Size: =10.5
                    Text: ="Transaction fee"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_Transaction.Width
                    X: =layout_Transaction.X
                    Y: =layout_Transaction.Y
                    ZIndex: =17

                input_Transaction As text:
                    Align: =Align.Right
                    BorderColor: =RGBA(0,0,0,0)
                    BorderThickness: =If(IsBlank(input_Transaction.Text) && isSubmited, 1, 0)
                    Default: |-
                        =Text(Value(Substitute(dealSelected.transaction_fee, ",","")), "[$-en-GB]#,###")
                    DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                    DisplayMode: =If(SaveButton_6.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                    FocusedBorderColor: =RGBA(0, 18, 107, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.Arial
                    Format: =TextFormat.Number
                    Height: =layout_ip_Transaction.Height - 2
                    HoverFill: =
                    OnChange: |-
                        =If(
                            IsNumeric(Substitute(Self.Text, ",","")),
                            Set(principalValue, Text(Value(Substitute(Self.Text, ",","")), "[$-en-GB]#,###")),
                            Reset(Self));
                    PaddingRight: =12
                    PaddingTop: =5.27
                    PressedBorderColor: =RGBA(0, 18, 107, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =If(App.Width > 600, 10.5, 12)
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_Transaction.Width - 2
                    X: =layout_ip_Transaction.X + 1
                    Y: =layout_ip_Transaction.Y + 1
                    ZIndex: =18

                layout_Retainer As rectangle:
                    BorderColor: =RGBA(192, 192, 192, 1)
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =44
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_deal_value.Width
                    X: =layout_Transaction.X
                    Y: =layout_Transaction.Y + layout_Transaction.Height
                    ZIndex: =19

                layout_ip_Retainer As rectangle:
                    BorderColor: =If(isSubmited && IsBlank(input_Retainer.Text), Color.Red, RGBA(191, 191, 192, 1))
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =layout_Retainer.Height
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_deal_value.Width
                    X: =layout_Retainer.X + layout_Retainer.Width
                    Y: =layout_Retainer.Y
                    ZIndex: =20

                label_Retainer As label:
                    Font: =Font.Arial
                    Height: =layout_Retainer.Height
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    Size: =10.5
                    Text: ="Retainer fee"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_Retainer.Width
                    X: =layout_Retainer.X
                    Y: =layout_Retainer.Y
                    ZIndex: =21

                input_Retainer As text:
                    Align: =Align.Right
                    BorderColor: =RGBA(0,0,0,0)
                    BorderThickness: =If(IsBlank(input_Retainer.Text) && isSubmited, 1, 0)
                    Default: |-
                        =Text(Value(Substitute(dealSelected.retainer_fee, ",","")), "[$-en-GB]#,###")
                    DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                    DisplayMode: =If(SaveButton_6.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                    FocusedBorderColor: =RGBA(0, 18, 107, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.Arial
                    Format: =TextFormat.Number
                    Height: =layout_ip_Retainer.Height - 2
                    HoverFill: =
                    OnChange: |-
                        =If(
                            IsNumeric(Substitute(Self.Text, ",","")),
                            Set(principalValue, Text(Value(Substitute(Self.Text, ",","")), "[$-en-GB]#,###")),
                            Reset(Self));
                    PaddingRight: =12
                    PaddingTop: =5.27
                    PressedBorderColor: =RGBA(0, 18, 107, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =If(App.Width > 600, 10.5, 12)
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_Retainer.Width - 2
                    X: =layout_ip_Retainer.X + 1
                    Y: =layout_ip_Retainer.Y + 1
                    ZIndex: =22

                layout_Success_fee As rectangle:
                    BorderColor: =RGBA(192, 192, 192, 1)
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =44
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_deal_value.Width
                    X: =layout_Retainer.X
                    Y: =layout_Retainer.Y + layout_Retainer.Height
                    ZIndex: =23

                layout_ip_Success_fee As rectangle:
                    BorderColor: =If(isSubmited && IsBlank(input_Success_fee.Text), Color.Red, RGBA(191, 191, 192, 1))
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =layout_Success_fee.Height
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_deal_value.Width
                    X: =layout_Success_fee.X + layout_Success_fee.Width
                    Y: =layout_Success_fee.Y
                    ZIndex: =24

                label_Success_fee As label:
                    Font: =Font.Arial
                    Height: =layout_Success_fee.Height
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    Size: =10.5
                    Text: ="% Success fee"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_Success_fee.Width
                    X: =layout_Success_fee.X
                    Y: =layout_Success_fee.Y
                    ZIndex: =25

                input_Success_fee As text:
                    Align: =Align.Right
                    BorderColor: =RGBA(0,0,0,0)
                    BorderThickness: =If(IsBlank(input_Success_fee.Text) && isSubmited, 1, 0)
                    Default: =successFeeMA
                    DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                    DisplayMode: =If(SaveButton_6.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                    FocusedBorderColor: =RGBA(0, 18, 107, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.Arial
                    Height: =layout_ip_Success_fee.Height - 2
                    HoverFill: =
                    OnChange: |-
                        =Set(OriginalText, Substitute(Self.Text, ",", ""));
                        Set(FirstDotIndex, Find(".", OriginalText));
                        Set(TextBeforeFirstDot, Left(OriginalText, FirstDotIndex));
                        Set(TextAfterFirstDot, Mid(OriginalText, FirstDotIndex + 1, Len(OriginalText) - FirstDotIndex));
                        
                        Set(ModifiedText, TextBeforeFirstDot & Substitute(TextAfterFirstDot, ".", ""));
                        If(!IsNumeric(ModifiedText), Substitute(Self.Text, Self.Text, ""); Reset(Self);Set(successFeeMA, Blank()), Set(successFeeMA, ModifiedText));
                        Reset(Self);
                    PaddingRight: =20
                    PaddingTop: =5.27
                    PressedBorderColor: =RGBA(0, 18, 107, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =If(App.Width > 600, 10.5, 12)
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_Success_fee.Width - 2
                    X: =layout_ip_Success_fee.X + 1
                    Y: =layout_ip_Success_fee.Y + 1
                    ZIndex: =26

                layout_Ugency As rectangle:
                    BorderColor: =RGBA(192, 192, 192, 1)
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =44
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_deal_value.Width
                    X: =layout_Success_fee.X
                    Y: =layout_Success_fee.Y + layout_Success_fee.Height
                    ZIndex: =27

                layout_ip_Ugency As rectangle:
                    BorderColor: =If(isSubmited && IsBlank(input_Ugency.Text), Color.Red, RGBA(191, 191, 192, 1))
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =layout_Ugency.Height
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_deal_value.Width
                    X: =layout_Ugency.X + layout_Ugency.Width
                    Y: =layout_Ugency.Y
                    ZIndex: =28

                label_Ugency As label:
                    Font: =Font.Arial
                    Height: =layout_Ugency.Height
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    Size: =10.5
                    Text: ="Urgency"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_Ugency.Width
                    X: =layout_Ugency.X
                    Y: =layout_Ugency.Y
                    ZIndex: =29

                input_Ugency As text:
                    Align: =Align.Right
                    BorderColor: =RGBA(0,0,0,0)
                    BorderThickness: =If(IsBlank(input_Ugency.Text) && isSubmited, 1, 0)
                    Default: =ugencyMA
                    DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                    DisplayMode: =If(SaveButton_6.Visible || SaveButton_OwnerChangeDealValue.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                    FocusedBorderColor: =RGBA(0, 18, 107, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.Arial
                    Height: =layout_ip_Ugency.Height - 2
                    HoverFill: =
                    OnChange: |-
                        =Set(OriginalText, Substitute(Self.Text, ",", ""));
                        Set(FirstDotIndex, Find(".", OriginalText));
                        Set(TextBeforeFirstDot, Left(OriginalText, FirstDotIndex));
                        Set(TextAfterFirstDot, Mid(OriginalText, FirstDotIndex + 1, Len(OriginalText) - FirstDotIndex));
                        
                        Set(ModifiedText, TextBeforeFirstDot & Substitute(TextAfterFirstDot, ".", ""));
                        If(!IsNumeric(ModifiedText), Substitute(Self.Text, Self.Text, ""); Reset(Self);Set(ugencyMA, Blank()), Set(ugencyMA, ModifiedText));
                        Reset(Self);
                    PaddingRight: =12
                    PaddingTop: =5.27
                    PressedBorderColor: =RGBA(0, 18, 107, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =If(App.Width > 600, 10.5, 12)
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_Ugency.Width - 2
                    X: =layout_ip_Ugency.X + 1
                    Y: =layout_ip_Ugency.Y + 1
                    ZIndex: =30

                layout_Importance As rectangle:
                    BorderColor: =RGBA(192, 192, 192, 1)
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =44
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_deal_value.Width
                    X: =layout_Ugency.X
                    Y: =layout_Ugency.Y + layout_Ugency.Height
                    ZIndex: =31

                layout_ip_Importance As rectangle:
                    BorderColor: =If(isSubmited && IsBlank(input_Importance.Text), Color.Red, RGBA(191, 191, 192, 1))
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =layout_Importance.Height
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_deal_value.Width
                    X: =layout_Importance.X + layout_Importance.Width
                    Y: =layout_Importance.Y
                    ZIndex: =32

                label_Importance As label:
                    Font: =Font.Arial
                    Height: =layout_Importance.Height
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    Size: =10.5
                    Text: ="Importance"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_Importance.Width
                    X: =layout_Importance.X
                    Y: =layout_Importance.Y
                    ZIndex: =33

                input_Importance As text:
                    Align: =Align.Right
                    BorderColor: =RGBA(0,0,0,0)
                    BorderThickness: =If(IsBlank(input_Importance.Text) && isSubmited, 1, 0)
                    Default: =importanceMA
                    DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                    DisplayMode: =If(SaveButton_6.Visible || SaveButton_OwnerChangeDealValue.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                    FocusedBorderColor: =RGBA(0, 18, 107, 1)
                    FocusedBorderThickness: =1
                    Font: =Font.Arial
                    Height: =layout_ip_Importance.Height - 2
                    HoverFill: =
                    OnChange: |-
                        =Set(OriginalText, Substitute(Self.Text, ",", ""));
                        Set(FirstDotIndex, Find(".", OriginalText));
                        Set(TextBeforeFirstDot, Left(OriginalText, FirstDotIndex));
                        Set(TextAfterFirstDot, Mid(OriginalText, FirstDotIndex + 1, Len(OriginalText) - FirstDotIndex));
                        
                        Set(ModifiedText, TextBeforeFirstDot & Substitute(TextAfterFirstDot, ".", ""));
                        If(!IsNumeric(ModifiedText), Substitute(Self.Text, Self.Text, ""); Reset(Self);Set(importanceMA, Blank()), Set(importanceMA, ModifiedText));
                        Reset(Self);
                    PaddingRight: =12
                    PaddingTop: =5.27
                    PressedBorderColor: =RGBA(0, 18, 107, 1)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =If(App.Width > 600, 10.5, 12)
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_Importance.Width - 2
                    X: =layout_ip_Importance.X + 1
                    Y: =layout_ip_Importance.Y + 1
                    ZIndex: =34

                LabelGeneralInformation As label:
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    Size: =10.5
                    Text: ="General information"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    X: =Tabs_MAStep2.X + 10
                    Y: =Tabs_MAStep2.Y + Tabs_MAStep2.Height + 15
                    ZIndex: =35

                "'layout_Expected_closing _time' As rectangle":
                    BorderColor: =RGBA(192, 192, 192, 1)
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =44
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_deal_value.Width
                    X: =layout_Importance.X
                    Y: =layout_Importance.Y + layout_Importance.Height
                    ZIndex: =36

                layout_ip_Expected_closing_time As rectangle:
                    BorderColor: =If(isSubmited && IsBlank(DatePicker_Expected_closing_time.SelectedDate), Color.Red, RGBA(191, 191, 192, 1))
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: ='layout_Expected_closing _time'.Height
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_deal_value.Width
                    X: ='layout_Expected_closing _time'.X + 'layout_Expected_closing _time'.Width
                    Y: ='layout_Expected_closing _time'.Y
                    ZIndex: =37

                label_Expected_closing_time As label:
                    Font: =Font.Arial
                    Height: ='layout_Expected_closing _time'.Height
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    Size: =10.5
                    Text: ="Expected closing time"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: ='layout_Expected_closing _time'.Width
                    X: ='layout_Expected_closing _time'.X
                    Y: ='layout_Expected_closing _time'.Y
                    ZIndex: =38

                DatePicker_Expected_closing_time As datepicker:
                    BorderThickness: =0
                    DefaultDate: =If(IsBlank(dealSelected), Blank(), dealSelected.expected_closing_time)
                    DisabledColor: =RGBA(166, 166, 166, If(App.Width <= 600, 0, 1))
                    DisplayMode: =If(SaveButton_6.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    Format: ="dd/mm/yyyy"
                    Height: =layout_ip_Expected_closing_time.Height - 2
                    IconBackground: =RGBA(255, 255, 255, 1)
                    IconFill: =RGBA(0, 0, 0, 1)
                    InputTextPlaceholder: =If(IsBlank(Self.SelectedDate), Text("dd/mm/yyyy", Self.Format, Self.Language))
                    PaddingBottom: =10
                    PaddingLeft: =Self.Width - If(App.Width > 600, 120, 130)
                    PaddingRight: =10
                    PaddingTop: =10
                    Size: =If(App.Width > 600, 10.5, 12)
                    StartYear: =If(IsBlank(DateFrom_Datepicker.SelectedDate), 1970, Year(DateFrom_Datepicker.SelectedDate))
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_Expected_closing_time.Width - 2
                    X: =layout_ip_Expected_closing_time.X + 1
                    Y: =layout_ip_Expected_closing_time.Y + 1
                    ZIndex: =39

                LabelEngagementRisk As label:
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    Size: =10.5
                    Text: ="Engagement risk"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    X: =Tabs_MAStep2.X + 10
                    Y: =layout_ip_Expected_closing_time.Y + layout_ip_Expected_closing_time.Height + 20
                    ZIndex: =40

                layout_EngagementRisk As rectangle:
                    BorderColor: =RGBA(192, 192, 192, 1)
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =44
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_deal_value.Width
                    X: =LabelEngagementRisk.X
                    Y: =LabelEngagementRisk.Y + LabelEngagementRisk.Height
                    ZIndex: =41

                layout_ip_EngagementRisk As rectangle:
                    BorderColor: =If(isSubmited && IsBlank(MA_EngagementRiskDropdown.Text), Color.Red, RGBA(191, 191, 192, 1))
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =layout_EngagementRisk.Height
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_deal_value.Width
                    X: =layout_EngagementRisk.X + layout_EngagementRisk.Width
                    Y: =layout_EngagementRisk.Y
                    ZIndex: =42

                label_EngagementRisk As label:
                    Font: =Font.Arial
                    Height: =layout_EngagementRisk.Height
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    Size: =10.5
                    Text: ="Engagement risk"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_EngagementRisk.Width
                    X: =layout_EngagementRisk.X
                    Y: =layout_EngagementRisk.Y
                    ZIndex: =43

                layout_ApprovalonClientAcceptance As rectangle:
                    BorderColor: =RGBA(192, 192, 192, 1)
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =44
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_deal_value.Width
                    X: =LabelEngagementRisk.X
                    Y: =layout_EngagementRisk.Y + layout_EngagementRisk.Height
                    ZIndex: =44

                layout_ip_ApprovalonClientAcceptance As rectangle:
                    BorderColor: =If(isSubmited && IsBlank(MA_ApprovalOnClientDropdown.Text), Color.Red, RGBA(191, 191, 192, 1))
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =layout_ApprovalonClientAcceptance.Height
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_deal_value.Width
                    X: =layout_ApprovalonClientAcceptance.X + layout_ApprovalonClientAcceptance.Width
                    Y: =layout_ApprovalonClientAcceptance.Y
                    ZIndex: =45

                label_ApprovalonClientAcceptance As label:
                    Font: =Font.Arial
                    Height: =layout_ApprovalonClientAcceptance.Height
                    PaddingBottom: =10
                    PaddingLeft: =10
                    PaddingRight: =10
                    PaddingTop: =10
                    Size: =10.5
                    Text: ="Approval on Client Acceptance"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ApprovalonClientAcceptance.Width
                    X: =layout_ApprovalonClientAcceptance.X
                    Y: =layout_ApprovalonClientAcceptance.Y
                    ZIndex: =46

                layout_ApprovalonEngagementAcceptance As rectangle:
                    BorderColor: =RGBA(192, 192, 192, 1)
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =44
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_deal_value.Width
                    X: =LabelEngagementRisk.X
                    Y: =layout_ApprovalonClientAcceptance.Y + layout_ApprovalonClientAcceptance.Height
                    ZIndex: =47

                layout_ip_ApprovalonEngagementAcceptance As rectangle:
                    BorderColor: =If(isSubmited && IsBlank(MA_ApprovalOnEnagementDropdown.Text), Color.Red, RGBA(191, 191, 192, 1))
                    BorderThickness: =1
                    Fill: =RGBA(0, 0, 0, 0)
                    Height: =layout_ApprovalonEngagementAcceptance.Height
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ip_deal_value.Width
                    X: =layout_ApprovalonEngagementAcceptance.X + layout_ApprovalonEngagementAcceptance.Width
                    Y: =layout_ApprovalonEngagementAcceptance.Y
                    ZIndex: =48

                label_ApprovalonEngagementAcceptance As label:
                    Font: =Font.Arial
                    Height: =layout_ApprovalonEngagementAcceptance.Height
                    PaddingBottom: =0
                    PaddingLeft: =10
                    PaddingRight: =0
                    PaddingTop: =10
                    Size: =10.5
                    Text: ="Approval on Engagement Acceptance"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =layout_ApprovalonEngagementAcceptance.Width
                    X: =layout_ApprovalonEngagementAcceptance.X
                    Y: =layout_ApprovalonEngagementAcceptance.Y
                    ZIndex: =49

                att_16 As attachments:
                    AddAttachmentText: ="Attach file"
                    BorderColor: =
                    BorderThickness: =0
                    DisplayMode: =If(SaveButton_6.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                    DropTargetBorderThickness: =0
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderThickness: =
                    Font: =Font.Arial
                    Height: =If(Self.DisplayMode = DisplayMode.Disabled, 0, 85 + Max(If(CountRows(Self.Attachments) = 1, 0, CountRows(Self.Attachments) * 15)))
                    IsInDataCard: =true
                    Items: =
                    MaxAttachments: =9999
                    MaxAttachmentSize: =maxSizeFile
                    NoAttachmentsText: =If(MAFileList.AllItemsCount > 0, "","There is nothing attached.")
                    OnAddFile: =
                    OnRemoveFile: =
                    PaddingBottom: =5
                    PaddingLeft: =If(Self.DisplayMode = DisplayMode.Edit, 0, 0)
                    PaddingRight: =5
                    PaddingTop: =5
                    Size: =10.5
                    Tooltip: ="Click here to attach Client Acceptance and Engagement Acceptance Form"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =(layout_ip_ApprovalonEngagementAcceptance.Width + layout_ApprovalonEngagementAcceptance.Width) * If(App.Width > 1100, 2/3, 1)
                    X: =LabelEngagementRisk.X
                    Y: =layout_ApprovalonEngagementAcceptance.Y + layout_ApprovalonEngagementAcceptance.Height + 15 - If(Self.NoAttachmentsText = "" && CountRows(Self.Attachments) = 0 && Self.DisplayMode = DisplayMode.Edit, 40, 0)
                    ZIndex: =54

                LabelNote As label:
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Semibold
                    Height: =30
                    Size: =12
                    Text: ="Note"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    X: =att_16.X
                    Y: =MAFileList.Y + MAFileList.Height + 15
                    ZIndex: =55

                PecentIcon_7 As label:
                    Align: =Align.Center
                    Color: =If(input_Probability.DisplayMode = DisplayMode.Disabled, RGBA(166, 166, 166, 1), RGBA(0,0,0,1))
                    Font: =Font.Arial
                    Height: =input_interest.Height
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Size: =10.5
                    Text: ="%"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =20
                    X: =input_Probability.X + input_Probability.Width - Self.Width
                    Y: =input_Probability.Y
                    ZIndex: =56

                PecentIcon_6 As label:
                    Align: =Align.Center
                    Color: =If(input_Probability.DisplayMode = DisplayMode.Disabled, RGBA(166, 166, 166, 1), RGBA(0,0,0,1))
                    Font: =Font.Arial
                    Height: =input_interest.Height
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Size: =10.5
                    Text: ="%"
                    Visible: =CurrentStep = 2 && DealDetailTab = 2
                    Width: =20
                    X: =input_Success_fee.X + input_Success_fee.Width - Self.Width
                    Y: =input_Success_fee.Y
                    ZIndex: =57

            MA_ApprovalOnClientDropdown As button:
                Align: =Align.Left
                BorderColor: =If(IsBlank(Self.Text) && isSubmited, RGBA(214, 27, 27, 1), If(reportTypeShowDropdown, RGBA(0, 18, 107, 1), ColorFade(Self.Fill, -15%)))
                BorderThickness: =0
                Color: =RGBA(82, 82, 82, 1)
                DisplayMode: =If(SaveButton_6.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                Fill: =RGBA(255, 255, 255, 1)
                FocusedBorderColor: =RGBA(0, 18, 107, 1)
                FocusedBorderThickness: =1
                Font: =Font.Arial
                FontWeight: =FontWeight.Normal
                Height: =layout_ip_ApprovalonClientAcceptance.Height - 2
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(241, 244, 249, 1)
                OnSelect: =Set(approvalClientValueShowDropdown, !approvalClientValueShowDropdown);
                PaddingLeft: =10
                PaddingRight: =30
                PaddingTop: =5.27
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10.5
                Text: =approvalClientValue
                Visible: =label_EngagementRisk.Visible
                Width: =layout_ip_ApprovalonClientAcceptance.Width - 2
                X: =layout_ip_ApprovalonClientAcceptance.X + 1
                Y: =layout_ip_ApprovalonClientAcceptance.Y + 1
                ZIndex: =110

            MA_ApprovalOnEnagementDropdown As button:
                Align: =Align.Left
                BorderColor: =If(IsBlank(Self.Text) && isSubmited, RGBA(214, 27, 27, 1), If(reportTypeShowDropdown, RGBA(0, 18, 107, 1), ColorFade(Self.Fill, -15%)))
                BorderThickness: =0
                Color: =RGBA(82, 82, 82, 1)
                DisplayMode: =If(SaveButton_6.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                Fill: =RGBA(255, 255, 255, 1)
                FocusedBorderColor: =RGBA(0, 18, 107, 1)
                FocusedBorderThickness: =1
                Font: =Font.Arial
                FontWeight: =FontWeight.Normal
                Height: =layout_ip_ApprovalonEngagementAcceptance.Height - 2
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(241, 244, 249, 1)
                OnSelect: =Set(approvalEnagementShowDropdown, !approvalEnagementShowDropdown);
                PaddingLeft: =10
                PaddingRight: =30
                PaddingTop: =5.27
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10.5
                Text: =approvalEnagementValue
                Visible: =label_EngagementRisk.Visible
                Width: =layout_ip_ApprovalonEngagementAcceptance.Width - 2
                X: =layout_ip_ApprovalonEngagementAcceptance.X + 1
                Y: =layout_ip_ApprovalonEngagementAcceptance.Y + 1
                ZIndex: =111

            BtnAddNote As group:
                Height: =5
                Width: =5
                X: =40
                Y: =40
                ZIndex: =111

                ButtonAddContact_8 As button:
                    BorderStyle: =BorderStyle.None
                    Fill: =RGBA(17, 79, 144, 1)
                    Font: =Font.Arial
                    Height: =44
                    OnSelect: |-
                        =Collect(DataNoteList, Table(
                            {
                                created_by: "",
                                created_date: "",
                                id_deal_note: "",
                                isLastest: "true",
                                location: Text(Max(DataNoteList, location) + 1),
                                note: "",
                                note_old: "",
                                isSelected: true,
                                screen: "step22",
                                write_by: "",
                                write_date: "",
                                guid_mark: GUID()
                            }
                        ))
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Text: =""
                    Visible: =GalleryNoteDropdown.Visible && CurrentStep = 2 && DealDetailTab = 2 && GalleryNoteDropdown.DisplayMode = DisplayMode.Edit && (App.Width > 800 || !showProgress)
                    Width: =44
                    X: =GalleryNote.X + GalleryNote.Width - Self.Width - If(App.Width > 800, 35, 35)
                    Y: |-
                        =GalleryNote.Y + GalleryNote.Height
                        - CountRows(Filter(DataNoteList, isLastest = "true" && IsBlank(created_date))) * 25
                    ZIndex: =80

                HtmlText2_5 As htmlViewer:
                    Font: =Font.Arial
                    Height: =46
                    HtmlText: |-
                        ="<div style=""display:flex ;align-items:center; justify-content: center;width: 44px;height: 44px;cursor:pointer;""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                          <path d=""M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z"" fill=""#FEFEFE""/>
                        </svg></div>"
                    OnSelect: |-
                        =Collect(DataNoteList, Table(
                            {
                                created_by: "",
                                created_date: "",
                                id_deal_note: "",
                                isLastest: "true",
                                location: Text(Last(DataNoteList).location + 1),
                                note: "",
                                note_old: "",
                                isSelected: true,
                                screen: "step22",
                                write_by: "",
                                write_date: "",
                                guid_mark: GUID()
                            }
                        ))
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Visible: =ButtonAddContact_8.Visible
                    Width: =44
                    X: =ButtonAddContact_8.X
                    Y: =ButtonAddContact_8.Y
                    ZIndex: =81

            MA_EngagementRiskChevron As htmlViewer:
                Font: =Font.Arial
                Height: =44
                HtmlText: |-
                    =If(reportTypeShowDropdown,
                    "<div style=""cursor: pointer""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                    <g clip-path=""url(#clip0_1760_3688)"">
                    <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill=""#"&If(input_Probability.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                    </g>
                    <defs>
                    <clipPath id=""clip0_1760_3688"">
                    <rect width=""24"" height=""24"" fill=""white""/>
                    </clipPath>
                    </defs>
                    </svg></div>"
                    , "<div style=""cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                    <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill=""#"&If(input_Probability.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                    </svg></div>")
                OnSelect: =If(MA_EngagementRiskDropdown.DisplayMode = DisplayMode.Disabled, false, Set(reportTypeShowDropdown, !reportTypeShowDropdown));
                PaddingRight: =5.27
                PaddingTop: =5.27
                Size: =11.60
                Visible: =MA_EngagementRiskDropdown.Visible
                Width: =35
                X: =MA_EngagementRiskDropdown.X + MA_EngagementRiskDropdown.Width - If(App.Width > 800, 40, 30)
                Y: =MA_EngagementRiskDropdown.Y + 2
                ZIndex: =112

            BtnAddNote_Att As group:
                Height: =5
                Width: =5
                X: =40
                Y: =40
                ZIndex: =112

                ButtonAddContact_9 As button:
                    BorderStyle: =BorderStyle.None
                    Fill: =RGBA(17, 79, 144, 1)
                    Font: =Font.Arial
                    Height: =44
                    OnSelect: |-
                        =Collect(
                            If( CurrentStep = 2 && DealDetailTab = 3, DataNoteListAtt,
                                CurrentStep = 4 && DealDetailTab = 1, DataNoteMandate,
                                CurrentStep = 5, DataNoteExecution,
                                CurrentStep = 6, DataNoteAgreements,
                                CurrentStep = 7, DataNoteClosing),
                            {
                                created_by: "",
                                created_date: "",
                                id_deal_note: "",
                                isLastest: "true",
                                location:
                                    Text(Value(If(CurrentStep = 2 && DealDetailTab = 3, Max(DataNoteListAtt, location),
                                        CurrentStep = 4 && DealDetailTab = 1, Max(DataNoteMandate, location),
                                        CurrentStep = 5, Max(DataNoteExecution, location),
                                        CurrentStep = 6, Max(DataNoteAgreements, location),
                                        CurrentStep = 7, Max(DataNoteClosing, location)))
                                    + 1),
                                note: "",
                                note_old: "",
                                isSelected: true,
                                screen:
                                    If( CurrentStep = 2 && DealDetailTab = 3, "step23",
                                        CurrentStep = 4 && DealDetailTab = 1, "step41",
                                        CurrentStep = 5, "step5",
                                        CurrentStep = 6, "step6",
                                        CurrentStep = 7, "step7"),
                                write_by: "",
                                write_date: "",
                                guid_mark: GUID()
                            }
                        );
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    RadiusBottomLeft: =8
                    RadiusBottomRight: =8
                    RadiusTopLeft: =8
                    RadiusTopRight: =8
                    Text: =""
                    Visible: =GalleryNote_Att.Visible && GalleryNoteDropdown_1.Visible && GalleryNoteDropdown_1.DisplayMode = DisplayMode.Edit && (App.Width > 800 || !showProgress)
                    Width: =44
                    X: =GalleryNote_Att.X + GalleryNote_Att.Width - Self.Width - If(App.Width > 600, 33, 45)
                    Y: |-
                        =GalleryNote_Att.Y + GalleryNote_Att.Height
                        - CountRows(Filter(
                            If(CurrentStep = 2 && DealDetailTab = 3, DataNoteListAtt,
                                CurrentStep = 4 && DealDetailTab = 1, DataNoteMandate,
                                CurrentStep = 5, DataNoteExecution,
                                CurrentStep = 6, DataNoteAgreements,
                                CurrentStep = 7, DataNoteClosing)
                        , isLastest = "true" && IsBlank(created_date)))
                        * 25
                    ZIndex: =83

                HtmlText2_6 As htmlViewer:
                    Font: =Font.Arial
                    Height: =46
                    HtmlText: |-
                        ="<div style=""display:flex ;align-items:center; justify-content: center;width: 44px;height: 44px;cursor:pointer;""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                          <path d=""M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z"" fill=""#FEFEFE""/>
                        </svg></div>"
                    OnSelect: |-
                        =Collect(
                            If( CurrentStep = 2 && DealDetailTab = 3, DataNoteListAtt,
                                CurrentStep = 4 && DealDetailTab = 1, DataNoteMandate,
                                CurrentStep = 5, DataNoteExecution,
                                CurrentStep = 6, DataNoteAgreements,
                                CurrentStep = 7, DataNoteClosing),
                            {
                                created_by: "",
                                created_date: "",
                                id_deal_note: "",
                                isLastest: "true",
                                location:
                                    Text(Value(If(CurrentStep = 2 && DealDetailTab = 3, Last(DataNoteListAtt).location,
                                        CurrentStep = 4 && DealDetailTab = 1, Last(DataNoteMandate).location,
                                        CurrentStep = 5, Last(DataNoteExecution).location,
                                        CurrentStep = 6, Last(DataNoteAgreements).location,
                                        CurrentStep = 7, Last(DataNoteClosing).location))
                                    + 1),
                                note: "",
                                note_old: "",
                                isSelected: true,
                                screen:
                                    If( CurrentStep = 2 && DealDetailTab = 3, "step23",
                                        CurrentStep = 4 && DealDetailTab = 1, "step41",
                                        CurrentStep = 5, "step5",
                                        CurrentStep = 6, "step6",
                                        CurrentStep = 7, "step7"),
                                write_by: "",
                                write_date: "",
                                guid_mark: GUID()
                            }
                        );
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Visible: =GalleryNoteDropdown_1.DisplayMode = DisplayMode.Edit && (App.Width > 800 || !showProgress)
                    Width: =44
                    X: =ButtonAddContact_9.X
                    Y: =ButtonAddContact_9.Y
                    ZIndex: =84

            MA_ApprovalOnAcceptanceChevron As htmlViewer:
                Font: =Font.Arial
                Height: =44
                HtmlText: |-
                    =If(approvalClientValueShowDropdown,
                    "<div style=""cursor: pointer""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                    <g clip-path=""url(#clip0_1760_3688)"">
                    <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill=""#"&If(input_Probability.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                    </g>
                    <defs>
                    <clipPath id=""clip0_1760_3688"">
                    <rect width=""24"" height=""24"" fill=""white""/>
                    </clipPath>
                    </defs>
                    </svg></div>"
                    , "<div style=""cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                    <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill=""#"&If(input_Probability.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                    </svg></div>")
                OnSelect: =If(MA_ApprovalOnClientDropdown.DisplayMode = DisplayMode.Disabled, false, Set(approvalClientValueShowDropdown, !approvalClientValueShowDropdown));
                PaddingRight: =5.27
                PaddingTop: =5.27
                Size: =11.60
                Visible: =MA_ApprovalOnClientDropdown.Visible
                Width: =35
                X: =MA_ApprovalOnClientDropdown.X + MA_ApprovalOnClientDropdown.Width - If(App.Width > 800, 40, 30)
                Y: =MA_ApprovalOnClientDropdown.Y + 2
                ZIndex: =113

            MA_ApprovalOnEnagementDropdownChevron As htmlViewer:
                Font: =Font.Arial
                Height: =44
                HtmlText: |-
                    =If(approvalClientValueShowDropdown,
                    "<div style=""cursor: pointer""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                    <g clip-path=""url(#clip0_1760_3688)"">
                    <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill=""#"&If(input_Probability.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                    </g>
                    <defs>
                    <clipPath id=""clip0_1760_3688"">
                    <rect width=""24"" height=""24"" fill=""white""/>
                    </clipPath>
                    </defs>
                    </svg></div>"
                    , "<div style=""cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                    <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill=""#"&If(input_Probability.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                    </svg></div>")
                OnSelect: =If(MA_ApprovalOnEnagementDropdown.DisplayMode = DisplayMode.Disabled, false, Set(approvalEnagementShowDropdown, !approvalEnagementShowDropdown));
                PaddingRight: =5.27
                PaddingTop: =5.27
                Size: =11.60
                Visible: =MA_ApprovalOnEnagementDropdown.Visible
                Width: =35
                X: =MA_ApprovalOnEnagementDropdown.X + MA_ApprovalOnEnagementDropdown.Width - If(App.Width > 800, 40, 30)
                Y: =MA_ApprovalOnEnagementDropdown.Y + 2
                ZIndex: =114

            AttachmentStep4Tab1 As label:
                Color: =RGBA(14, 63, 115, 1)
                Font: =Font.Arial
                FontWeight: =FontWeight.Semibold
                Size: =10.5
                Text: ="Attachment"
                Visible: =CurrentStep = 4 && DealDetailTab = 1
                Width: =320
                X: =Tabs_MAStep2.X + 3 + If(CurrentStep = 2, 0, 10)
                Y: =Tabs_MAStep2.Y + Tabs_MAStep2.Height
                ZIndex: =115

            AttachmentStep567 As label:
                Color: =RGBA(14, 63, 115, 1)
                Font: =Font.Arial
                FontWeight: =FontWeight.Bold
                Size: =10.5
                Text: ="Attachment"
                Visible: =CurrentStep in [5,6,7]
                Width: =320
                X: =Tabs_MAStep2.X + If(CurrentStep = 2, 0, 10)
                Y: =Tabs_MAStep2.Y
                ZIndex: =116

            MA_CloseDropdown As rectangle:
                Fill: =RGBA(255, 255, 255, 0)
                Height: =Parent.Height - Self.Y
                OnSelect: |-
                    =Set(reportTypeShowDropdown, false);
                    Set(approvalClientValueShowDropdown, false);
                    Set(approvalEnagementShowDropdown, false);
                    If(IsBlank(clientNameSelectedValue) && !IsBlank(lastSelectedCompanyId),
                        Set(clientNameSelectedValue, First(Filter(companyList, id_company = lastSelectedCompanyId)))
                    )
                Visible: =MA_EngagementRisk_Items.Visible || MA_ApprovalOnEnagement_Items.Visible || MA_ApprovalOnClient_Items.Visible
                Width: =Parent.Width
                ZIndex: =117

            "MA_EngagementRisk_Items As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                BorderColor: =RGBA(191, 191, 192, 1)
                BorderThickness: =0.5
                Fill: =RGBA(255, 255, 255, 1)
                Height: =Min(Self.AllItemsCount, 4) * Self.TemplateHeight + 10
                Items: |-
                    =[{value: "Low"}, {value: "Medium"}, {value: "High"}, {value: "Excessive/decline"}]
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplatePadding: =0
                TemplateSize: =40
                Visible: =reportTypeShowDropdown && MA_EngagementRiskDropdown.Visible
                Width: =MA_EngagementRiskDropdown.Width
                X: =MA_EngagementRiskDropdown.X
                Y: =MA_EngagementRiskDropdown.Y + 45
                ZIndex: =118

                Button6_48 As button:
                    Align: =Align.Left
                    BorderThickness: =0
                    Color: =RGBA(82, 82, 82, 1)
                    Fill: =If(ThisItem.value = enagementRiskValue, RGBA(241, 244, 249, 1), RGBA(0, 0, 0, 0))
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(241, 244, 249, 1)
                    OnSelect: |-
                        =Set(enagementRiskValue, ThisItem.value);
                        Set(reportTypeShowDropdown, false);
                    PaddingLeft: =15
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    PressedFill: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: =ThisItem.value
                    Width: =Parent.Width
                    X: =0.00
                    ZIndex: =1

            "MA_ApprovalOnClient_Items As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                BorderColor: =RGBA(191, 191, 192, 1)
                BorderThickness: =0.5
                Fill: =RGBA(255, 255, 255, 1)
                Height: =Self.AllItemsCount * Self.TemplateHeight + 10
                Items: |-
                    =[{value: "Yes"}, {value: "No"}]
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplatePadding: =0
                TemplateSize: =40
                Visible: =approvalClientValueShowDropdown && MA_ApprovalOnClientDropdown.Visible
                Width: =MA_ApprovalOnClientDropdown.Width
                X: =MA_ApprovalOnClientDropdown.X
                Y: =MA_ApprovalOnClientDropdown.Y + 45
                ZIndex: =119

                Button6_49 As button:
                    Align: =Align.Left
                    BorderThickness: =0
                    Color: =RGBA(82, 82, 82, 1)
                    Fill: =If(ThisItem.value = approvalClientValue, RGBA(241, 244, 249, 1), RGBA(0, 0, 0, 0))
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(241, 244, 249, 1)
                    OnSelect: |-
                        =Set(approvalClientValue, ThisItem.value);
                        Set(approvalClientValueShowDropdown, false);
                    PaddingLeft: =15
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    PressedFill: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: =ThisItem.value
                    Width: =Parent.Width
                    X: =0.00
                    ZIndex: =1

            "MA_ApprovalOnEnagement_Items As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
                '#CopilotOverlayLabel': ="Filtered"
                BorderColor: =RGBA(191, 191, 192, 1)
                BorderThickness: =0.5
                Fill: =RGBA(255, 255, 255, 1)
                Height: =Self.AllItemsCount * Self.TemplateHeight + 10
                Items: |-
                    =[{value: "Yes"}, {value: "No"}]
                Layout: =Layout.Vertical
                LoadingSpinner: =LoadingSpinner.Data
                TemplatePadding: =0
                TemplateSize: =40
                Visible: =approvalEnagementShowDropdown && MA_ApprovalOnEnagementDropdown.Visible
                Width: =MA_ApprovalOnEnagementDropdown.Width
                X: =MA_ApprovalOnEnagementDropdown.X
                Y: =MA_ApprovalOnEnagementDropdown.Y + 45
                ZIndex: =120

                Button6_50 As button:
                    Align: =Align.Left
                    BorderThickness: =0
                    Color: =RGBA(82, 82, 82, 1)
                    Fill: =If(ThisItem.value = approvalEnagementValue, RGBA(241, 244, 249, 1), RGBA(0, 0, 0, 0))
                    FocusedBorderThickness: =0
                    Font: =Font.Arial
                    FontWeight: =FontWeight.Normal
                    HoverColor: =RGBA(0, 0, 0, 1)
                    HoverFill: =RGBA(241, 244, 249, 1)
                    OnSelect: |-
                        =Set(approvalEnagementValue, ThisItem.value);
                        Set(approvalEnagementShowDropdown, false);
                    PaddingLeft: =15
                    PaddingRight: =5.27
                    PaddingTop: =5.27
                    PressedFill: =
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: =ThisItem.value
                    Width: =Parent.Width
                    X: =0.00
                    ZIndex: =1

            DisableMobile_Step3Comment As label:
                Color: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =TextInputStep3.Height
                PaddingLeft: =TextInputStep3.PaddingLeft
                PaddingRight: =TextInputStep3.PaddingRight
                PaddingTop: =TextInputStep3.PaddingTop
                Size: =TextInputStep3.Size
                Text: =TextInputStep3.Text
                VerticalAlign: =VerticalAlign.Top
                Visible: =TextInputStep3.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && TextInputStep3.Visible
                Width: =TextInputStep3.Width
                X: =TextInputStep3.X
                Y: =TextInputStep3.Y
                ZIndex: =130

            MA_MobileDisableGroup As group:
                Height: =5
                Width: =5
                X: =40
                Y: =40
                ZIndex: =130

                DisableMobile_ClientName As label:
                    Color: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =ClientName_Input_MAStep1.Height
                    PaddingLeft: =ClientName_Input_MAStep1.PaddingLeft
                    PaddingRight: =ClientName_Input_MAStep1.PaddingRight
                    PaddingTop: =ClientName_Input_MAStep1.PaddingTop
                    Size: =ClientName_Input_MAStep1.Size
                    Text: =ClientName_Input_MAStep1.Text
                    Visible: =ClientName_Input_MAStep1.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && ClientName_Input_MAStep1.Visible
                    Width: =ClientName_Input_MAStep1.Width
                    X: =ClientName_Input_MAStep1.X
                    Y: =ClientName_Input_MAStep1.Y
                    ZIndex: =121

                DisableMobile_InputDeal As label:
                    Align: =Align.Right
                    Color: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =input_deal_value.Height
                    PaddingLeft: =input_deal_value.PaddingLeft
                    PaddingRight: =input_deal_value.PaddingRight
                    PaddingTop: =input_deal_value.PaddingTop
                    Size: =input_deal_value.Size
                    Text: =input_deal_value.Text
                    Visible: =input_deal_value.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && input_deal_value.Visible
                    Width: =input_deal_value.Width
                    X: =input_deal_value.X
                    Y: =input_deal_value.Y
                    ZIndex: =122

                DisableMobile_InputProbability As label:
                    Align: =Align.Right
                    Color: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =input_Probability.Height
                    PaddingLeft: =input_Probability.PaddingLeft
                    PaddingRight: =input_Probability.PaddingRight
                    PaddingTop: =input_Probability.PaddingTop
                    Size: =input_Probability.Size
                    Text: =input_Probability.Text
                    Visible: =input_deal_value.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && input_deal_value.Visible
                    Width: =input_Probability.Width
                    X: =input_Probability.X
                    Y: =input_Probability.Y
                    ZIndex: =123

                DisableMobile_InputTransaction As label:
                    Align: =Align.Right
                    Color: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =input_Transaction.Height
                    PaddingLeft: =input_Transaction.PaddingLeft
                    PaddingRight: =input_Transaction.PaddingRight
                    PaddingTop: =input_Transaction.PaddingTop
                    Size: =input_Transaction.Size
                    Text: =input_Transaction.Text
                    Visible: =input_deal_value.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && input_deal_value.Visible
                    Width: =input_Transaction.Width
                    X: =input_Transaction.X
                    Y: =input_Transaction.Y
                    ZIndex: =124

                DisableMobile_InputRetainer As label:
                    Align: =Align.Right
                    Color: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =input_Retainer.Height
                    PaddingLeft: =input_Retainer.PaddingLeft
                    PaddingRight: =input_Retainer.PaddingRight
                    PaddingTop: =input_Retainer.PaddingTop
                    Size: =input_Retainer.Size
                    Text: =input_Retainer.Text
                    Visible: =input_deal_value.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && input_deal_value.Visible
                    Width: =input_Retainer.Width
                    X: =input_Retainer.X
                    Y: =input_Retainer.Y
                    ZIndex: =125

                DisableMobile_SuccessFee As label:
                    Align: =Align.Right
                    Color: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =input_Success_fee.Height
                    PaddingLeft: =input_Success_fee.PaddingLeft
                    PaddingRight: =input_Success_fee.PaddingRight
                    PaddingTop: =input_Success_fee.PaddingTop
                    Size: =input_Success_fee.Size
                    Text: =input_Success_fee.Text
                    Visible: =input_deal_value.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && input_deal_value.Visible
                    Width: =input_Success_fee.Width
                    X: =input_Success_fee.X
                    Y: =input_Success_fee.Y
                    ZIndex: =126

                DisableMobile_Ugency As label:
                    Align: =Align.Right
                    Color: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =input_Ugency.Height
                    PaddingLeft: =input_Ugency.PaddingLeft
                    PaddingRight: =input_Ugency.PaddingRight
                    PaddingTop: =input_Ugency.PaddingTop
                    Size: =input_Ugency.Size
                    Text: =input_Ugency.Text
                    Visible: =input_deal_value.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && input_deal_value.Visible
                    Width: =input_Ugency.Width
                    X: =input_Ugency.X
                    Y: =input_Ugency.Y
                    ZIndex: =127

                DisableMobile_Importance As label:
                    Align: =Align.Right
                    Color: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =input_Importance.Height
                    PaddingLeft: =input_Importance.PaddingLeft
                    PaddingRight: =input_Importance.PaddingRight
                    PaddingTop: =input_Importance.PaddingTop
                    Size: =input_Importance.Size
                    Text: =input_Importance.Text
                    Visible: =input_deal_value.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && input_deal_value.Visible
                    Width: =input_Importance.Width
                    X: =input_Importance.X
                    Y: =input_Importance.Y
                    ZIndex: =128

                DisableMobile_ClosingTime As label:
                    Color: =RGBA(166, 166, 166, 1)
                    Font: =Font.Arial
                    Height: =DatePicker_Expected_closing_time.Height
                    PaddingLeft: =DatePicker_Expected_closing_time.PaddingLeft
                    PaddingRight: =DatePicker_Expected_closing_time.PaddingRight
                    PaddingTop: =DatePicker_Expected_closing_time.PaddingTop
                    Size: =DatePicker_Expected_closing_time.Size
                    Text: =Text(DatePicker_Expected_closing_time.SelectedDate, DatePicker_Expected_closing_time.Format)
                    Visible: =input_deal_value.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && input_deal_value.Visible
                    Width: =DatePicker_Expected_closing_time.Width
                    X: =DatePicker_Expected_closing_time.X
                    Y: =DatePicker_Expected_closing_time.Y
                    ZIndex: =129

            DisableMobile_ContractDate As label:
                Align: =Align.Right
                Color: =RGBA(166, 166, 166, 1)
                Font: =Font.Arial
                Height: =ContractDate.Height
                PaddingLeft: =ContractDate.PaddingLeft
                PaddingRight: =ContractDate.PaddingRight
                PaddingTop: =ContractDate.PaddingTop
                Size: =ContractDate.Size
                Text: =Text(ContractDate.SelectedDate, ContractDate.Format)
                Visible: =ContractDate.DisplayMode = DisplayMode.Disabled && App.Width <= 600 && ContractDate.Visible
                Width: =ContractDate.Width
                X: =ContractDate.X
                Y: =ContractDate.Y
                ZIndex: =131

            CurrencyVND_MA_Label As label:
                Align: =Align.Right
                Color: =RGBA(82, 82, 82, 1)
                Font: =Font.Arial
                Height: =25
                PaddingRight: =0
                Size: =9
                Text: |-
                    ="Currency: VND"
                Visible: =layout_ip_deal_value.Visible || layout_ip_deal_value.Visible
                Width: =layout_ip_deal_value.Width
                X: =layout_ip_deal_value.X + layout_ip_deal_value.Width - Self.Width
                Y: =layout_ip_deal_value.Y - Self.Height
                ZIndex: =132

            IsNotRequestEditLogs As button:
                BorderColor: =Self.Color
                BorderThickness: =1
                Color: =If(!isRequestEditLogs, RGBA(14, 63, 115, 1), RGBA(176, 176, 176, 1))
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderThickness: =1
                Font: =Font.Arial
                HoverColor: =Self.Color
                HoverFill: =Self.Fill
                OnSelect: =Set(isRequestEditLogs, false);
                PressedColor: =Self.Color
                PressedFill: =Self.Fill
                RadiusBottomLeft: =8
                RadiusBottomRight: =0
                RadiusTopLeft: =8
                RadiusTopRight: =0
                Size: =10.5
                Text: ="Approval log"
                Visible: =Tabs_MAStep4.Visible && DealDetailTab = 2
                Width: =120
                X: =Tabs_MAStep4.X
                Y: =Tabs_MAStep4.Y + Tabs_MAStep4.Height + 10
                ZIndex: =133

            IsRequestEditLogs As button:
                BorderColor: =Self.Color
                BorderThickness: =1
                Color: =If(isRequestEditLogs, RGBA(14, 63, 115, 1), RGBA(176, 176, 176, 1))
                Fill: =RGBA(0, 0, 0, 0)
                FocusedBorderThickness: =1
                Font: =Font.Arial
                HoverColor: =Self.Color
                HoverFill: =Self.Fill
                OnSelect: =Set(isRequestEditLogs, true);
                PressedColor: =Self.Color
                PressedFill: =Self.Fill
                RadiusBottomLeft: =0
                RadiusBottomRight: =8
                RadiusTopLeft: =0
                RadiusTopRight: =8
                Size: =10.5
                Text: ="Approval log for editing"
                Visible: =Tabs_MAStep4.Visible && DealDetailTab = 2
                Width: =170
                X: =IsNotRequestEditLogs.X + IsNotRequestEditLogs.Width + 1
                Y: =IsNotRequestEditLogs.Y
                ZIndex: =134

    HeaderQT2List_9 As Header:
        ZIndex: =28

    MenuItemsSideBar_IR_2 As MenuItemsSideBar:
        Height: =Parent.Height - Self.Y
        MenuItems: |-
            =Table(
                {
                    MenuLabel: "Dashboard",
                    MenuIcon: MenuItemsSideBar_IR_2.IconDasboard,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 1,
                    MenuIconDropDown: MenuItemsSideBar_IR_2.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_IR_2.IconDropUp,
                    Submenu: []
                },
                {
                    MenuLabel: "Portal",
                    MenuIcon: MenuItemsSideBar_IR_2.IconSettings,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 2,
                    MenuIconDropDown: MenuItemsSideBar_IR_2.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_IR_2.IconDropUp,
                    Submenu: Table(
                        {
                            MenuLabel: "'Information of non-listed compan",
                            MenuIcon: MenuItemsSideBar_IR_2.IconDasboard,
                            MenuScreenNavigate: Portal,
                            MenuID: 2.1
                        },
                        {
                            MenuLabel: "Comunication Records (Minutes of meeting)",
                            MenuIcon: MenuItemsSideBar_IR_2.IconDasboard,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 2.2
                        },
                        {
                            MenuLabel: "Investment Research",
                            MenuIcon: MenuItemsSideBar_IR_2.IconDasboard,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 2.3
                        }
                    )
                },
                {
                    MenuLabel: "Business process",
                    MenuIcon: MenuItemsSideBar_IR_2.IconFile,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 3,
                    MenuIconDropDown: MenuItemsSideBar_IR_2.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_IR_2.IconDropUp,
                    Submenu: Table(
                        {
                            MenuLabel: "M&A",
                            MenuIcon: MenuItemsSideBar_IR_2.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 3.1
                        },
                        {
                            MenuLabel: "Fixed Income Investment ProcessA",
                            MenuIcon: MenuItemsSideBar_IR_2.IconFile,
                            MenuScreenNavigate: TableProposalQT2,
                            MenuID: 3.2
                        },
                        {
                            MenuLabel: "Margin limit approvalprocess (ad-hoc)",
                            MenuIcon: MenuItemsSideBar_IR_2.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 3.3
                        },
                        {
                            MenuLabel: "PEVC",
                            MenuIcon: MenuItemsSideBar_IR_2.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 3.4
                        }
                    )
                },
                {
                    MenuLabel: "Admin",
                    MenuIcon: MenuItemsSideBar_IR_2.IconSettings,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 4,
                    MenuIconDropDown: MenuItemsSideBar_IR_2.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_IR_2.IconDropUp,
                    Submenu: Table(
                        {
                            MenuLabel: "Manager Authoration&A",
                            MenuIcon: MenuItemsSideBar_IR_2.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 4.1
                        },
                        {
                            MenuLabel: "Decentralization",
                            MenuIcon: MenuItemsSideBar_IR_2.IconFile,
                            MenuScreenNavigate: TableProposalQT2,
                            MenuID: 4.2
                        }
                    )
                }
            )
        Visible: =MobileShowMenu
        Width: =If(App.Width > 800, 240, App.Width)
        Y: =56
        ZIndex: =29

    MenuItemsSideBar_Small_IR_2 As MenuItemsSideBar_Small:
        Height: =Parent.Height - Self.Y
        MenuItems: |-
            =Table(
                {
                    MenuLabel: "Dashboard",
                    MenuIcon: MenuItemsSideBar_Small_IR_2.IconDasboard,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 1,
                    MenuIconDropDown: MenuItemsSideBar_Small_IR_2.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_Small_IR_2.IconDropUp,
                    Submenu: []
                },
                {
                    MenuLabel: "Portal",
                    MenuIcon: MenuItemsSideBar_Small_IR_2.IconSettings,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 2,
                    MenuIconDropDown: MenuItemsSideBar_Small_IR_2.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_Small_IR_2.IconDropUp,
                    Submenu: Table(
                        {
                            MenuLabel: "'Information of non-listed compan",
                            MenuIcon: MenuItemsSideBar_Small_IR_2.IconDasboard,
                            MenuScreenNavigate: Portal,
                            MenuID: 2.1
                        },
                        {
                            MenuLabel: "Comunication Records (Minutes of meeting)",
                            MenuIcon: MenuItemsSideBar_Small_IR_2.IconDasboard,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 2.2
                        },
                        {
                            MenuLabel: "Investment Research",
                            MenuIcon: MenuItemsSideBar_Small_IR_2.IconDasboard,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 2.3
                        }
                    )
                },
                {
                    MenuLabel: "Business process",
                    MenuIcon: MenuItemsSideBar_Small_IR_2.IconFile,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 3,
                    MenuIconDropDown: MenuItemsSideBar_Small_IR_2.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_Small_IR_2.IconDropUp,
                    Submenu: Table(
                        {
                            MenuLabel: "M&A",
                            MenuIcon: MenuItemsSideBar_Small_IR_2.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 3.1
                        },
                        {
                            MenuLabel: "Fixed Income Investment ProcessA",
                            MenuIcon: MenuItemsSideBar_Small_IR_2.IconFile,
                            MenuScreenNavigate: TableProposalQT2,
                            MenuID: 3.2
                        },
                        {
                            MenuLabel: "Margin limit approvalprocess (ad-hoc)",
                            MenuIcon: MenuItemsSideBar_Small_IR_2.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 3.3
                        },
                        {
                            MenuLabel: "PEVC",
                            MenuIcon: MenuItemsSideBar_Small_IR_2.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 3.4
                        }
                    )
                },
                {
                    MenuLabel: "Admin",
                    MenuIcon: MenuItemsSideBar_Small_IR_2.IconSettings,
                    MenuScreenNavigate: Dashboard,
                    MenuID: 4,
                    MenuIconDropDown: MenuItemsSideBar_Small_IR_2.IconDropDown,
                    MenuIconDropUp: MenuItemsSideBar_Small_IR_2.IconDropUp,
                    Submenu: Table(
                        {
                            MenuLabel: "Manager Authoiation&A",
                            MenuIcon: MenuItemsSideBar_Small_IR_2.IconFile,
                            MenuScreenNavigate: Dashboard,
                            MenuID: 4.1
                        },
                        {
                            MenuLabel: "Decentralization",
                            MenuIcon: MenuItemsSideBar_Small_IR_2.IconFile,
                            MenuScreenNavigate: TableProposalQT2,
                            MenuID: 4.2
                        }
                    )
                }
            )
        Visible: =App.Width > 800 && !MobileShowMenu
        Y: =56
        ZIndex: =30

    Timer1_24 As timer:
        Duration: =3000
        Font: =Font.Arial
        OnTimerEnd: |-
            =Reset(Timer1_24); UpdateContext({ShowNotification: false}); Set(IsError, false);
        Start: =ShowNotification
        Visible: =false
        X: =60
        Y: =627
        ZIndex: =55

    NotificationBox_23 As button:
        Align: =Align.Left
        BorderColor: =RGBA(40, 167, 69, 1)
        BorderThickness: =0
        DisabledFill: =Self.Fill
        Fill: =If(IsError, RGBA(209, 50, 50, 1), RGBA(40, 167, 69, 1))
        FocusedBorderThickness: =0
        Font: =Font.Arial
        Height: =50
        HoverBorderColor: =Self.Fill
        HoverFill: =Self.Fill
        PaddingLeft: =15
        PaddingRight: =30
        PressedColor: =RGBA(255, 255, 255, 1)
        PressedFill: =Self.Fill
        RadiusBottomLeft: =5
        RadiusBottomRight: =5
        RadiusTopLeft: =5
        RadiusTopRight: =5
        Size: =10.5
        Text: =NoticationText
        Visible: =Timer1_24.Value <> 0
        Width: =320
        X: =App.Width - Self.Width - 2
        Y: =60
        ZIndex: =56

    DeleteConfirm_4 As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =56

        RejectPopupBack_16 As rectangle:
            Fill: =RGBA(0.3, 0.3, 0.3, 0.3)
            Height: =Parent.Height
            Visible: =isShowPopupDelete
            Width: =Parent.Width
            ZIndex: =41

        DeleteConfirmBg_13 As htmlViewer:
            Font: =Font.Arial
            Height: =If(Parent.Width > 600, 170, 170)
            HtmlText: |-
                ="<div style='margin-left: 8px; width: calc(100% - 16px); height: "& Self.Height - 20 &"px; background-color: white; border-radius: 12px;box-shadow: 5px 4px 8px 0px rgba(0, 0, 0, 0.10);
                '></div>"
            PaddingRight: =5.00
            PaddingTop: =5.00
            Size: =11.00
            Visible: =isShowPopupDelete
            Width: =If(App.Width > 600, 550, App.Width + 5)
            X: =If(App.Width > 600, App.Width * 0.5 - DeleteConfirmBg_13.Width *0.5, -3)
            Y: =App.Height / 2 - Self.Height
            ZIndex: =42

        CancelResearchOpinionButton_10 As button:
            BorderColor: =Self.Color
            BorderThickness: =1
            Color: =RGBA(214, 27, 27, 1)
            DisabledBorderColor: =RGBA(214, 27, 27, 1)
            DisabledColor: =RGBA(214, 27, 27, 1)
            DisabledFill: =RGBA(0, 0, 0, 0)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderThickness: =1
            Font: =Font.Arial
            Height: =44
            HoverColor: =RGBA(214, 27, 27, 1)
            HoverFill: =ColorFade(Self.Fill , -15%)
            OnSelect: |-
                =Set(varEncryptionDeleteSelectedId, Blank());
                Set(isShowPopupDelete, false);
            PressedBorderColor: =RGBA(214, 27, 27, 1)
            PressedColor: =RGBA(214, 27, 27, 1)
            PressedFill: =
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Size: =10.5
            Text: ="No"
            Visible: =isShowPopupDelete
            Width: =120
            X: =DeleteConfirmBg_13.X + DeleteConfirmBg_13.Width - 280
            Y: =DeleteConfirmBg_13.Y + DeleteConfirmBg_13.Height - 70
            ZIndex: =43

        DeleteResearchOpinionButton_10 As button:
            BorderThickness: =
            DisabledBorderColor: =RGBA(214, 27, 27, 1)
            DisabledColor: =RGBA(255, 255, 255, 1)
            DisabledFill: =RGBA(214, 27, 27, 1)
            Fill: =RGBA(214, 27, 27, 1)
            FocusedBorderThickness: =
            Font: =Font.Arial
            Height: =44
            HoverFill: =ColorFade(Self.Fill , -15%)
            OnSelect: |-
                =// Set deal status and main procedures
                If( dealSelected.status = "DEAL_ADVISORY" || dealSelected.status = "REVISED",
                    Set(mainProceduresToSend, "Deal advisory opportunity");,
                    dealSelected.status = "PENDING_MANDATE_APPROVAL",
                    Set(mainProceduresToSend, "Deal advisory opportunity");,
                    dealSelected.status = "PENDING_REVIEW_HEAD_DIVISION",
                    Set(mainProceduresToSend, "Signing Mandate");,
                    dealSelected.status = "PENDING_EXCUTION_SIGNING_CLOSING",
                    Set(mainProceduresToSend, Switch(CurrentStep, 5, "Deal execution", 6, "Singing of definitive agreements", dealSelected.deal_main_procedure));,
                    // Default
                    Set(mainProceduresToSend, dealSelected.deal_main_procedure);
                );
                Set(dealStatusToSend, "Canceled"); 
                If(!IsBlank(dealSelected) && dealSelected.is_request_edit, Set(dealStage, "Closing"); Set(mainProceduresToSend, "Closing"));
                If(mainProceduresToSend = "Closing", Set(dealStage, "Closing"));
                
                UpdateContext({ShowNotification: false});
                Set(dataResposneDealDraft, Blank());
                // files
                ClearCollect(listAttToSend, []);
                ClearCollect(listAtt, AddColumns(att_12.Attachments, title, "step231"), AddColumns(att_13.Attachments, title, "step232"), AddColumns(att_16.Attachments, title, "step22"), AddColumns(att_Step4_1.Attachments, title, "step4"), AddColumns(att_Step5.Attachments, title, "step5"), AddColumns(att_Step6.Attachments, title, "step6"), AddColumns(att_Step7.Attachments, title, "step7"));
                ForAll(listAtt, Collect(listAttToSend,{file_name: Text(Now(), "ddmmyyyy_hhmmss_") & ThisRecord.Name,title: ThisRecord.'data-ADB4D7A662F548B49FAC2B986E348A1Btitle',date: Text(Now(), "yyyy-mm-dd hh:mm:ss"),by: currenUserV2.id,size: ""}));
                
                 // Save files to blob
                Clear(listAttachFileToSave);
                Clear(listAttachFileNonPrefix);
                Clear(colAttachments);
                ForAll(listAtt As att,
                Collect(colAttachments,{Id:"",Date: nowV1,By: User().FullName,Name: att.Name, file_name: att.Name,NameGroup: att.Name,Value: att.Value,File: {file: {contentBytes: att.Value,name: att.Name, file_name: Text(Now(), "ddmmyyyy_hhmmss_") & att.Name}},IsDeleted:false,Size: ""}));
                ClearCollect(GroupedItems,GroupBy(colAttachments,NameGroup,Group));
                ForAll(GroupedItems,Collect(listAttachFileNonPrefix,First(ThisRecord.Group)); );
                UpdateIf(listAttachFileNonPrefix, true, {Name: Text(Now(), "ddmmyyyy_hhmmss_") & Name, file_name: Text(Now(), "ddmmyyyy_hhmmss_") & Name});
                Collect(listAttachFileToSave,listAttachFileNonPrefix);
                
                ForAll(listAttachFileToSave,If(IsBlank(ThisRecord.Id) && !ThisRecord.IsDeleted,AzureBlobStorage.CreateFile(bucketMAAttach,ThisRecord.file_name,ThisRecord.Value)));
                
                Reset(att_Step7); Reset(att_Step6); Reset(att_Step5); Reset(att_Step4_1); Reset(att_16); Reset(att_12); Reset(att_13);
                
                // notes
                ClearCollect(NoteDataToSend, []);
                ClearCollect(NoteData,
                    If(!IsEmpty(DataNoteList),
                        Filter(DataNoteList, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep22Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteListAtt),
                        Filter(DataNoteListAtt, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep23Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteMandate),
                        Filter(DataNoteMandate, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep41Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteExecution),
                        Filter(DataNoteExecution, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep5Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteAgreements),
                        Filter(DataNoteAgreements, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep6Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteClosing),
                        Filter(DataNoteClosing, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep7Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    )
                );
                ForAll(NoteData, Collect(NoteDataToSend,{idNote: "",LabelNotedBy: ThisRecord.created_by,location: ThisRecord.location, screen: ThisRecord.screen,note: ThisRecord.note}));
                
                // JSON data to send
                Set(dealInfo,{
                    company_id: If(IsBlank(clientNameSelectedValue.id_company),"",clientNameSelectedValue.id_company),
                    deal_name: "-"&ClientName_Input_MAStep1.Text,
                    deal_type_1: If(IsBlank(dealType1SelectedValue), "", dealType1SelectedValue),
                    deal_type_2: If(IsBlank(dealType2SelectedValue), "", dealType2SelectedValue),
                    deal_type_3: If(IsBlank(dealType3SelectedValue), "", dealType3SelectedValue),
                    engagement_risk: If(IsBlank(MA_EngagementRiskDropdown.Text), "",MA_EngagementRiskDropdown.Text),
                    ugency: If(IsBlank(input_Ugency.Text), "", input_Ugency.Text), importance: If(IsBlank(input_Importance.Text), "", input_Importance.Text),           
                    probability_of_success: If(IsBlank(input_Probability.Text), "", input_Probability.Text),
                    deal_value:Substitute(Substitute(input_deal_value.Text, ",", ""), ".", ""),
                    conclusions_on_client_acceptance: "" ,
                    approval_on_client_acceptance: If(IsBlank(MA_ApprovalOnClientDropdown.Text), "", MA_ApprovalOnClientDropdown.Text) ,
                    conclusions_on_engagement_acceptance:"" ,
                    approval_on_engagement_acceptance: If(IsBlank(MA_ApprovalOnEnagementDropdown.Text), "", MA_ApprovalOnEnagementDropdown.Text) ,
                    transaction_fee: Substitute(Substitute(input_Transaction.Text, ",", ""), ".", ""),
                    percent_success_fee: If(IsBlank(input_Success_fee.Text), "", input_Success_fee.Text),
                    retainer_fee: Substitute(Substitute(input_Retainer.Text, ",", ""), ".", ""),
                    percentage_of_stock_for_sale:"" ,
                    deal_stage: If(IsBlank(dealSelected) || IsBlank(dealSelected.deal_stage), "Evaluating", dealSelected.deal_stage),
                    deal_status: dealStatusToSend,
                    deal_main_procedure: mainProceduresToSend,
                    deal_owner: If(IsBlank(dealSelected) || IsBlank(dealSelected.deal_owner), currenUserV2.id, dealSelected.deal_owner),
                    mentor: If(IsBlank(dealSelected) || IsBlank(dealSelected.mentor), "", dealSelected.mentor),
                    observer: If(IsBlank(dealSelected) || IsBlank(dealSelected.observer), "", dealSelected.observer),
                    actual_closing_time: If(IsBlank(dealSelected) || IsBlank(dealSelected.actual_closing_time), "", dealSelected.actual_closing_time),
                    contract_date: Text(ContractDate.SelectedDate, "yyyy-mm-dd hh:mm:ss"),
                    expected_closing_time: Text(DatePicker_Expected_closing_time.SelectedDate, "yyyy-mm-dd hh:mm:ss"),
                    divestment_motive: If(IsBlank(dealSelected) || IsBlank(dealSelected.divestment_motive), "", dealSelected.divestment_motive),
                    state: If(IsBlank(dealSelected) || IsBlank(dealSelected.state), "ACTIVE", dealSelected.state),
                    stage: If(IsBlank(dealSelected) || IsBlank(dealSelected.stage), "Assessment", dealSelected.stage),
                    status: If(IsBlank(dealSelected) || IsBlank(dealSelected.status), "DEAL_ADVISORY", dealSelected.status),
                    share: If(IsBlank(dealSelected) || IsBlank(dealSelected.share), "General", dealSelected.share),
                    created_by: currenUserV2.id,
                    is_request_edit: If(IsBlank(dealSelected) || IsBlank(dealSelected.is_request_edit), "false", dealSelected.is_request_edit),
                    comment_mandate: If(IsBlank(TextInputStep3.Text), "", TextInputStep3.Text),
                    created_comment_date: If(IsBlank(dealSelected) || IsBlank(dealSelected.created_comment_date), Text(Now(), "yyyy-mm-dd hh:mm:ss"), dealSelected.created_comment_date)
                });
                
                Set(jsonToSend, {deal_info: dealInfo,attach_insert: listAttToSend,attach_delete: listDeleteMA,noteList: NoteDataToSend});
                
                // Call API
                Set(isLoading, true);
                Set(dataResposneDealDraft,'TVS->Deal_Information_Closed' .Run(JSON(jsonToSend, JSONFormat.IndentFour),If(IsBlank(dealSelected),"0",dealSelected.id),resKeyOpenAll.open,resKeyOpenAll.close,currenUserV2.id,"","CLOSED",true,false,true,false,false,"1,2,3,4"));
                
                If(dataResposneDealDraft.status = "200",
                    Select(DeleteConfirmCloseIcon_15);
                    Set(IsError, false); Set(NoticationText,"Canceled successfully!"); UpdateContext({ShowNotification: true});
                    // Send email and noti
                    Set(sendMAEmailRes, 'TVS->SendNotiEmail-Process2'.Run(
                        resKeyOpenAll.open,resKeyOpenAll.close,currenUserV2.id, dealSelected.status, "CLOSED", dealSelected.id,
                        "<a href='" & linkToApp & "?restartApp=true&screen=detail-ma&action=approve-ma&maId=" & dealSelected.id & "'>Link to item</a>",
                        currenUserV2.name, currenUserV2.email, currenUserV2.internal_email,
                        oldState <> dealSelected.state, // is diff state
                        If(IsBlank(dealSelected) || IsBlank(dealSelected.is_request_edit), false, dealSelected.is_request_edit),appProperty, emailFromConfix, "")
                    );
                    Navigate(MA);,
                    Set(IsError, true); Set(NoticationText,"This deal has been processed by another user, please reload this page.");
                    UpdateContext({ShowNotification: true});
                );
                Set(isLoading, false);
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =RGBA(214, 27, 27, 1)
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Size: =10.5
            Text: ="Yes"
            Visible: =isShowPopupDelete
            Width: =120
            X: =DeleteConfirmBg_13.X + DeleteConfirmBg_13.Width - 150
            Y: =DeleteConfirmBg_13.Y + DeleteConfirmBg_13.Height - 70
            ZIndex: =44

        DeleteConfirmCloseIcon_15 As icon.Cancel:
            Color: =RGBA(26, 26, 26, 1)
            Height: =20
            Icon: =Icon.Cancel
            OnSelect: |-
                =Set(varEncryptionDeleteSelectedId, Blank());
                Set(isShowPopupDelete, false);
            Visible: =isShowPopupDelete
            Width: =20
            X: =DeleteConfirmBg_13. X + DeleteConfirmBg_13.Width -50
            Y: =DeleteConfirmBg_13.Y + 20
            ZIndex: =45

        DeleteConfirmLabel_16 As label:
            Font: =Font.Arial
            Size: =10.5
            Text: ="Are you sure to cancel this deal ?"
            Visible: =isShowPopupDelete
            Width: =DeleteConfirmBg_13.Width - 100 - DeleteConfirmCloseIcon_15.Width
            X: =Label2_10.X
            Y: =Label2_10.Y + Label2_10.Height
            ZIndex: =46

        Label2_10 As label:
            Font: =Font.Arial
            FontWeight: =FontWeight.Bold
            Size: =12
            Text: ="Cancel deal"
            Visible: =isShowPopupDelete
            X: =DeleteConfirmBg_13.X + 30
            Y: =DeleteConfirmBg_13.Y + 10
            ZIndex: =47

    CloseNotiIcon_23 As icon.Cancel:
        Color: =RGBA(255, 255, 255, 1)
        Height: =15
        Icon: =Icon.Cancel
        OnSelect: =Reset(Timer1_24); Set(IsError, false);
        Visible: =NotificationBox_23.Visible
        Width: =15
        X: =NotificationBox_23.X + NotificationBox_23.Width - 25
        Y: =NotificationBox_23.Y + 17.5
        ZIndex: =57

    NotificationScreen_IR_2 As NotificationScreen:
        Visible: =ShowNotificationPopup
        ZIndex: =58

    LoadingQT2List_17 As LoadingComponent_4:
        Visible: =isLoading
        ZIndex: =59

    DetailIRPopupGroup_4 As group:
        Height: =5
        Width: =5
        X: =80
        Y: =80
        ZIndex: =59

        DetailIRPopupBack_4 As rectangle:
            Fill: =RGBA(0.3, 0.3, 0.3, 0.3)
            Height: =App.Height
            Visible: =showRejectPopup || showApprovePopup || showRevisePopup
            Width: =App.Width
            ZIndex: =31

        DetailIRPopupBg_4 As htmlViewer:
            Font: =Font.Arial
            Height: =If(DetailIRReason_Input_4.Visible, 330, 150)
            HtmlText: |-
                ="<div style='width: calc(100% - 10px); height: "& Self.Height - 20 &"px; background-color: white; border-radius: 12px;box-shadow: 5px 4px 8px 0px rgba(0, 0, 0, 0.10);
                '></div>"
            PaddingRight: =5.00
            PaddingTop: =5.00
            Size: =11.00
            Visible: =showRejectPopup || showApprovePopup || showRevisePopup
            Width: =If(Parent.Width > 600, If(DetailIRReason_Input_4.Visible, 600, 500), Parent.Width)
            X: =If(Parent.Width > 600, App.Width / 2 - Self.Width / 2, 5)
            Y: =(App.Height - Self.Height) / 2
            ZIndex: =32

        DetailIR_Title_4 As label:
            Font: =Font.Arial
            FontWeight: =FontWeight.Bold
            Height: =43
            LineHeight: =2.2
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =12
            Text: |-
                =If(dealSelected.is_request_edit,
                    If(showRejectPopup, "Reject changed content?",
                    showRevisePopup, "Revise changed content?",
                    "Approve changed content?")
                ,
                    If(showRejectPopup, "Reject this ",
                    showRevisePopup, "Revise this ",
                    "Approve this ") & If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", "edit request?", "deal?")
                )
            Visible: =showRejectPopup || showApprovePopup || showRevisePopup
            Width: =299
            X: =DetailIRPopupBg_4.X + 20
            Y: =DetailIRPopupBg_4.Y + 10
            ZIndex: =33

        DetailIRName_Title_4 As label:
            Font: =Font.Arial
            Height: =30
            LineHeight: =2.2
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10.5
            Text: |-
                =If(dealSelected.is_request_edit,
                    If(showRejectPopup, "Refuse the content changes",
                    showRevisePopup, "Are you sure to revise this content?",
                    "Agree with the changed contents of this deal?")
                ,
                CurrentDealSelectedStep = 3,
                    If(showRejectPopup, "Are you sure to reject this deal?",
                    showRevisePopup, "Are you sure to revise this deal?",
                    "Are you sure to approve this deal?"),
                    "Add your comment"
                )
            Visible: =(showRejectPopup || showApprovePopup || showRevisePopup)
            Width: =DetailIRReason_Input_4.Width
            X: =DetailIR_Title_4.X
            Y: =DetailIR_Title_4.Y + DetailIR_Title_4.Height - If(CurrentDealSelectedStep = 3, 10, 0)
            ZIndex: =34

        DetailIRReason_Input_4 As text:
            BorderColor: |-
                =// If(isSummitedPopup && Len(Self.Text) = 0 && DetailIRSubmitButton_4.Text <> "Approve", RGBA(214, 27, 27, 1), RGBA(191, 191, 192, 1))
                RGBA(191, 191, 192, 1)
            BorderThickness: =1
            Default: =
            FocusedBorderColor: =Self.HoverBorderColor
            FocusedBorderThickness: =1
            Font: =Font.Arial
            Height: =If(App.Width > 600, 165, 150) - If(AddCEOApprove_Checkbox.Visible, AddCEOApprove_Checkbox.Height, 0)
            HintText: ="Input your comment."
            HoverFill: =RGBA(186, 202, 226, 0)
            Mode: =TextMode.MultiLine
            PaddingBottom: =10
            PaddingTop: =10
            Size: =If(App.Width > 600, 10.5, 12)
            Visible: =(showRejectPopup || showApprovePopup || showRevisePopup) && CurrentDealSelectedStep <> 3
            Width: =DetailIRPopupBg_4.Width - 50
            X: =DetailIRName_Title_4.X
            Y: =DetailIRName_Title_4.Y + DetailIRName_Title_4.Height
            ZIndex: =35

        DetailIRSubmitButton_4 As button:
            BorderThickness: =0
            Fill: =If(showRejectPopup, RGBA(214, 27, 27, 1), showRevisePopup, RGBA(214, 117, 27, 1), RGBA(17, 79, 144, 1))
            FocusedBorderThickness: =0
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            Height: =44
            HoverFill: =ColorFade(Self.Fill , -15%)
            OnSelect: |-
                =Set(isJumpCloseDeal,
                    If(!IsBlank(dealSelected) && dealSelected.is_request_edit && showApprovePopup,
                        If( dealSelected.status = "PENDING_APPROVE_CEO", showApprovePopup,
                            dealSelected.status = "PENDING_REVIEW_HEAD_DIVISION", !(If(AddCEOApprove_Checkbox.Visible, AddCEOApprove_Checkbox.Value, showApprovePopup))
                        ),
                    false)
                );
                If(!IsBlank(dealSelected) && dealSelected.status in ["REQUEST_EDIT"] && showApprovePopup,
                    // --------------------------------------------
                    Set(approveAction, If(showApprovePopup, "APPROVE", showRejectPopup, "REJECT", "REVISE"));
                    Select(btnSubmit_4),
                    // --------------------------------------------
                    CurrentDealSelectedStep = 3,
                        Set(isLoading, true);
                        Set(approveAction, If(showApprovePopup, "APPROVE", showRejectPopup, "REJECT", "REVISE"));
                        Set(approveRejectMARes, 'TVS->ApproveReject-2-V1'.Run(resKeyOpenAll.open, resKeyOpenAll.close, dealSelected.status, currenUserV2.id,
                        If(showApprovePopup, "APPROVE", showRejectPopup, "REJECT", "REVISE"),
                        If(IsBlank(TextInputStep3.Text), "", TextInputStep3.Text), dealSelected.id, envDEV, envTEST, envUAT1, envUAT2, Upper(StatusDropDown.Text),
                        If(AddCEOApprove_Checkbox.Visible, AddCEOApprove_Checkbox.Value, true)));
                        If(approveRejectMARes.status <> "STATUS_EXIST",
                            // Send email and noti
                            Set(sendMAEmailRes, 'TVS->SendNotiEmail-Process2'.Run(
                                resKeyOpenAll.open,resKeyOpenAll.close,currenUserV2.id, dealSelected.status,
                                If(showApprovePopup, "APPROVE", showRejectPopup, "REJECT", "REVISE"), dealSelected.id,
                                "<a href='" & linkToApp & "?restartApp=true&screen=detail-ma&action=approve-ma&maId=" & dealSelected.id & "'>Link to item</a>",
                                currenUserV2.name, currenUserV2.email, currenUserV2.internal_email,
                                oldState <> dealSelected.state, // is diff state
                                If(IsBlank(dealSelected) || IsBlank(dealSelected.is_request_edit), false, dealSelected.is_request_edit),appProperty, emailFromConfix,
                                If(dealSelected.status = "REQUEST_EDIT", If(IsBlank(DetailIRReason_Input_4.Text), "", DetailIRReason_Input_4.Text), "")
                            ));
                
                            Set(ShowNotificationCheck, If(showApprovePopup, "APPROVED_SUCCESS", showRejectPopup, "REJECTED_SUCCESS", "REVISED_SUCCESS"));
                            // Navigate(MA),
                            If(!IsBlank(dealSelected) && dealSelected.is_request_edit && showRejectPopup, Navigate(MA);, Select(btnSubmit_4)),
                            Set(IsError, true);Set(NoticationText,"This record has been processed by another user, please reload this page.");UpdateContext({ShowNotification: true});
                        );
                        Set(isLoading, false);
                    ,
                    // --------------------------------------------
                    Set(isLoading, true); UpdateContext({ShowNotification: false}); Set(approveRejectMARes, Blank()); Set(isValid, false);
                    If( Len(StatusDropDown.Text) <= 0, Set(IsError, true); Set(NoticationText,"Status is required!"); UpdateContext({ShowNotification: true}),
                        // Len(DetailIRReason_Input_4.Text)<=0 && !showApprovePopup,Set(IsError,true);Set(NoticationText,"Comment is required!");UpdateContext({ShowNotification: true}),
                        Set(isValid, true));
                    If(isValid,
                        Set(isLoading, true);
                        Set(approveRejectMARes, 'TVS->ApproveReject-2-V1'.Run(resKeyOpenAll.open, resKeyOpenAll.close, dealSelected.status, currenUserV2.id,
                        If(showApprovePopup, "APPROVE", showRejectPopup, "REJECT", "REVISE"),
                        If(IsBlank(DetailIRReason_Input_4.Text), "", DetailIRReason_Input_4.Text), dealSelected.id, envDEV, envTEST, envUAT1, envUAT2, Upper(StatusDropDown.Text),
                        If(AddCEOApprove_Checkbox.Visible, AddCEOApprove_Checkbox.Value, true)));
                
                        If(approveRejectMARes.status <> "STATUS_EXIST",
                        // Send email and noti
                        Set(sendMAEmailRes, 'TVS->SendNotiEmail-Process2'.Run(resKeyOpenAll.open,resKeyOpenAll.close,currenUserV2.id, dealSelected.status,
                            If(isJumpCloseDeal, "CLOSED", If(showApprovePopup, "APPROVE", showRejectPopup, "REJECT", "REVISE")), dealSelected.id,
                            "<a href='" & linkToApp & "?restartApp=true&screen=detail-ma&action=approve-ma&maId=" & dealSelected.id & "'>Link to item</a>",
                            currenUserV2.name, currenUserV2.email, currenUserV2.internal_email,
                            oldState <> dealSelected.state, // is diff state
                            If(IsBlank(dealSelected) || IsBlank(dealSelected.is_request_edit), false, dealSelected.is_request_edit),appProperty, emailFromConfix,
                            If(dealSelected.status = "REQUEST_EDIT", If(IsBlank(DetailIRReason_Input_4.Text), "", DetailIRReason_Input_4.Text), "")
                        ));
                        Set(ShowNotificationCheck, If(showApprovePopup, "APPROVED_SUCCESS", showRejectPopup, "REJECTED_SUCCESS", "REVISED_SUCCESS"));
                        Set(approveAction, If(showApprovePopup, "APPROVE", showRejectPopup, "REJECT", "REVISE"));
                        Select(DetailIRPopupCloseIcon_4); // close popup
                        If(!IsBlank(dealSelected) && dealSelected.is_request_edit && showRejectPopup, Navigate(MA);, Select(btnSubmit_4)),
                        Set(IsError, true); Set(NoticationText,"This deal has been processed by another user, please reload this page."); UpdateContext({ShowNotification: true});
                        );
                    );
                    Set(isSummitedPopup, true); Set(isLoading, false);
                );
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedColor: =Self.Color 
            PressedFill: =Self.Fill
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Size: =10.5
            Text: |-
                =If(showRejectPopup,
                If(Language = "Vn", "Từ chối", "Reject"),
                showRevisePopup,
                If(Language = "Vn", "Trả lại", "Revise"),
                showPublishPopup,
                If(Language = "Vn", "Công bố", "Publish"),
                If(Language = "Vn", "Duyệt", "Approve"))
            Visible: =showRejectPopup || showApprovePopup || showRevisePopup
            Width: =120
            X: =DetailIRPopupBg_4.X + DetailIRPopupBg_4.Width - 150
            Y: =DetailIRPopupBg_4.Y + DetailIRPopupBg_4.Height - 70
            ZIndex: =36

        DetailIRCancelButton_4 As button:
            BorderColor: =Self.Color
            BorderThickness: =1
            Color: =RGBA(139, 139, 139, 1)
            DisabledFill: =Self.Fill
            Fill: =RGBA(255, 255, 255, 1)
            FocusedBorderThickness: =1
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            Height: =44
            HoverBorderColor: =Self.BorderColor
            HoverColor: =Self.Color
            HoverFill: =ColorFade(Self.Fill , -15%)
            OnSelect: =Set(showRejectPopup, false); Set(showApprovePopup, false); Set(showRevisePopup, false); Set(showPublishPopup, false);
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            PressedBorderColor: =Self.BorderColor
            PressedColor: =Self.Color 
            PressedFill: =Self.Fill
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Size: =10.5
            Text: =If(Language = "Vn", "Trở lại", "Cancel")
            Visible: =showRejectPopup || showApprovePopup || showRevisePopup
            Width: =120
            X: =DetailIRSubmitButton_4.X - 130
            Y: =DetailIRPopupBg_4.Y + DetailIRPopupBg_4.Height - 70
            ZIndex: =37

        DetailIRPopupCloseIcon_4 As icon.Cancel:
            Color: =RGBA(0, 0, 0, 1)
            Height: =20
            Icon: =Icon.Cancel
            OnSelect: =Set(showRejectPopup, false); Set(showApprovePopup, false); Set(showRevisePopup, false); Set(showPublishPopup, false);
            Visible: =showRejectPopup || showApprovePopup || showRevisePopup
            Width: =20
            X: =DetailIRPopupBg_4.X + DetailIRPopupBg_4.Width - 50
            Y: =DetailIR_Title_4.Y + 10
            ZIndex: =38

        DetailProposalName_Title_7 As label:
            Color: =RGBA(255, 0, 0, 1)
            Font: =Font.Arial
            Height: =20
            LineHeight: =2.2
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Size: =10.5
            Text: =LabelRequired.Text
            Visible: |-
                =// (showRejectPopup || showApprovePopup || showRevisePopup) && (isSummitedPopup && Len(DetailIRReason_Input_4.Text) = 0) && DetailIRSubmitButton_4.Text <> "Approve"
                false
            Width: =159
            X: =DetailProposalReason_Input.X
            Y: =DetailProposalReason_Input.Y + DetailProposalReason_Input.Height
            ZIndex: =39

        AddCEOApprove_Checkbox As checkbox:
            CheckboxBorderColor: =RGBA(116, 116, 116, 1)
            CheckboxSize: =25
            CheckmarkFill: =RGBA(116, 116, 116, 1)
            FocusedBorderThickness: =0
            Font: =Font.Arial
            Height: =30
            Size: =10.5
            Text: ="Additional CEO approval is required"
            Visible: =DetailIRReason_Input_4.Visible && !IsBlank(dealSelected) && dealSelected.status in ["PENDING_REVIEW_HEAD_DIVISION"] && dealSelected.is_request_edit && DetailIRSubmitButton_4.Text = "Approve"
            Width: =DetailIRReason_Input_4.Width
            X: =DetailIRReason_Input_4.X
            Y: =DetailIRReason_Input_4.Y + DetailIRReason_Input_4.Height
            ZIndex: =40

    Button2_5 As button:
        Font: =Font.Arial
        OnSelect: |-
            =Set(ShowNotificationCheck, "ACCESS_DENIED_IR");
            Navigate(WelcomePage, ScreenTransition.Fade)
        Text: ="Button"
        Visible: =false
        X: =40
        Y: =40
        ZIndex: =60

    MAFromLinkTimer As timer:
        Duration: =1000
        Font: =Font.Arial
        OnTimerEnd: |-
            =Set(dataResposneDealDraft, Blank());
            Set(approveRejectMARes, Blank());
            If(IsBlank(currenUserV2),
                If(IsBlank(env), Set(env, "TEST");Set(envDEV, false);Set(envTEST, true);Set(envUAT1, false);Set(envUAT2, false););
                If(IsBlank(resKeyOpenAll), Set(resKeyOpenAll, 'TVS->GetOpenAndCloseFinal-V1'.Run(envDEV,envTEST, envUAT1, envUAT2)));
                If(!IsBlank(resKeyOpenAll), ClearCollect(currentUserV2Res,'TVS->GetCurrentUser-V1'.Run(resKeyOpenAll.open, resKeyOpenAll.close, User().Email, envDEV,envTEST, envUAT1, envUAT2)));
                Clear(permissionLst);
                ForAll(currentUserV2Res,Collect(permissionLst,{
                    process_code:ThisRecord.process_code,
                    role:Distinct(Split(ThisRecord.role,"#"),Value),
                    company:Distinct(Split(ThisRecord.company,"#"),Value),
                    division:Distinct(Split(ThisRecord.division,"#"),Value),
                    action:Distinct(Split(ThisRecord.action,"#"),Value),
                    name_team:Distinct(Split(ThisRecord.name_team,"#"),Value)
                }));
                Set(currenUserV2,{
                    id:First(currentUserV2Res).id,
                    name:First(currentUserV2Res).name,
                    email:First(currentUserV2Res).email,
                    internal_email:First(currentUserV2Res).internal_email,
                    phone_number:First(currentUserV2Res).phone_number,
                    permissionList:permissionLst,
                    status:First(currentUserV2Res).status
                });
            );
            // Go from Link but not have permission 
            If(!("VIEW" in LookUp(currenUserV2.permissionList, process_code = "Process2", action) && currenUserV2.status = "ACTIVE"), Select(Button2_5));
            
            Set(isCreateUser, "CREATE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action));
            Set(isCEO, "CEO_APPROVE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action));
            Set(isIBDrirector, "IB_DIRECTOR_APPROVE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action));
            Set(isApproveStatus, dealSelected.status in ["PENDING_MANDATE_APPROVAL", "PENDING_REVIEW_DEAL_OWNER", "PENDING_REVIEW_HEAD_DIVISION", "PENDING_APPROVE_CEO", "REQUEST_EDIT"]);
            Set(isParticitatingUser, IsBlank(dealSelected) || currenUserV2.id in listDealSupport.employee_id || currenUserV2.id = dealSelected.deal_owner || currenUserV2.id = dealSelected.mentor);
            Set(isOwnerOrSupport, currenUserV2.id = dealSelected.deal_owner || currenUserV2.id in Filter(listDealSupport, type = "deal_support").employee_id);
            
            If(App.Width < 800, Set(showProgress, false));
            Set(isSubmited, false);
            
            // Reset Default value
            Set(CurrentStep, 1); Set(DealDetailTab, 2);
            // Step
            Set(CurrentDealSelectedStep, Switch(dealSelected.status,
                "NEW_LEAD_CREATION", 1, "DEAL_ADVISORY", 2, "PENDING_MANDATE_APPROVAL", 3,
                "PENDING_SERVICE_CONTRACT", 4.1, "PENDING_REVIEW_DEAL_OWNER", 4.2, "PENDING_REVIEW_HEAD_DIVISION", 4.3, "PENDING_APPROVE_CEO", 4.4,
                "PENDING_CONTRACT_DATE", 4, "PENDING_EXCUTION_SIGNING_CLOSING", 5, "DONE", 8, 1));
            Set(CurrentStep, If(CurrentDealSelectedStep = 8, 1, RoundDown(CurrentDealSelectedStep, 0)));
            If(CurrentStep = 4, Set(DealDetailTab, 1));
            Set(ClientNameShowDropdown, false);
            Set(clientNameSelectedValue, Blank());
            ClearCollect(listDeleteMA, []);
            Set(GalleryNoteMark, Blank()); Set(GalleryNoteMarkAtt, Blank());
            Reset(att_Step7); Reset(att_Step6); Reset(att_Step5); Reset(att_Step4_1); Reset(att_16); Reset(att_12); Reset(att_13);
            
            ClearCollect(companyList, 'TVS->FindAllCompanyPEVC-V1'.Run(resKeyOpenAll.open, resKeyOpenAll.close, envDEV, envTEST, envUAT1, envUAT2));
            
            Set(MASteps, [
                {step: 1, text: "New Lead Creation"},
                {step: 2, text: "Deal advisory opportunity assessment"},
                {step: 3, text: "Mandate Approval"},
                {step: 4, text: "Signing mandate",
                    subSteps: [{text: "Service contract proposal", step: 4.1}, {text: "Review by Deal Owner", step: 4.2}, {text: "Review by Head of Division", step: 4.3}, {text: "Approve by CEO", step: 4.4}]},
                {step: 5, text: "Execution"},
                {step: 6, text: "Signing of Definitive Agreements"},
                {step: 7, text: "Closing"}
            ]);
            ClearCollect(DataNoteList,
            [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step22", write_by: "", write_date: "", guid_mark: GUID()}]);
            ClearCollect(DataNoteListAtt,
            [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step23", write_by: "", write_date: "", guid_mark: GUID()}]);
            ClearCollect(DataNoteMandate,
            [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step41", write_by: "", write_date: "", guid_mark: GUID()}]);
            ClearCollect(DataNoteExecution,
            [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step5", write_by: "", write_date: "", guid_mark: GUID()}]);
            ClearCollect(DataNoteAgreements,
            [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step6", write_by: "", write_date: "", guid_mark: GUID()}]);
            ClearCollect(DataNoteClosing,
            [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step7", write_by: "", write_date: "", guid_mark: GUID()}]);
            
            
            ClearCollect(DataStatusBdc, [{title: "Active", value: "active"},{title: "Abandoned", value: "abandoned"},{title: "On hold", value: "onhold"},{title: "Close", value: "close"}]);
            
            If(!IsBlank(dealSelected),
                // Set default value if have data
                Set(dealType1SelectedValue, dealSelected.deal_type_1);
                Set(dealType2SelectedValue, dealSelected.deal_type_2);
                Set(dealType3SelectedValue, dealSelected.deal_type_3);
                Set(enagementRiskValue, dealSelected.engagement_risk);
                Set(approvalClientValue, dealSelected.approval_on_client_acceptance);
                Set(approvalEnagementValue, dealSelected.approval_on_engagement_acceptance);,
                // Reset value if not have data
                Set(dealType1SelectedValue, Blank());
                Set(dealType2SelectedValue, Blank());
                Set(dealType3SelectedValue, Blank());
                Set(enagementRiskValue, Blank());
                Set(approvalClientValue, Blank());
                Set(approvalEnagementValue, Blank());
            );
            
            // Fill Notes
            ClearCollect(noteStep22Data,
                Sort(AddColumns(Filter(noteOfDeal, screen = "step22" && Len(Trim(note)) > 0),
                guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
            ClearCollect(noteStep23Data,
                Sort(AddColumns(Filter(noteOfDeal, screen = "step23" && Len(Trim(note)) > 0),
                guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
            ClearCollect(noteStep41Data,
                Sort(AddColumns(Filter(noteOfDeal, screen = "step41" && Len(Trim(note)) > 0),
                guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
            ClearCollect(noteStep5Data,
                Sort(AddColumns(Filter(noteOfDeal, screen = "step5" && Len(Trim(note)) > 0),
                guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
            ClearCollect(noteStep6Data,
                Sort(AddColumns(Filter(noteOfDeal, screen = "step6" && Len(Trim(note)) > 0),
                guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
            ClearCollect(noteStep7Data,
                Sort(AddColumns(Filter(noteOfDeal, screen = "step7" && Len(Trim(note)) > 0),
                guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
            
            If(!IsEmpty(noteStep22Data), ClearCollect(DataNoteList, noteStep22Data); Clear(noteStep22Data));
            If(!IsEmpty(noteStep23Data), ClearCollect(DataNoteListAtt, noteStep23Data); Clear(noteStep23Data));
            If(!IsEmpty(noteStep41Data), ClearCollect(DataNoteMandate, noteStep41Data); Clear(noteStep41Data));
            If(!IsEmpty(noteStep5Data), ClearCollect(DataNoteExecution, noteStep5Data); Clear(noteStep5Data));
            If(!IsEmpty(noteStep6Data), ClearCollect(DataNoteAgreements, noteStep6Data); Clear(noteStep6Data));
            If(!IsEmpty(noteStep7Data), ClearCollect(DataNoteClosing, noteStep7Data); Clear(noteStep7Data));
            
            // Reset input form
            Reset(input_deal_value);Reset(input_Probability);Reset(input_Transaction);Reset(input_Retainer);Reset(input_Success_fee);Reset(input_Ugency);
            Reset(input_Importance);Reset(DatePicker_Expected_closing_time); Reset(att_16); Reset(TextInputStep3); Reset(ContractDate);
        Start: =startMATimer
        Visible: =false
        X: =60
        Y: =60
        ZIndex: =61

    SetPercentVariables As button:
        Font: =Font.Arial
        OnSelect: |-
            =// probabilityOfSuccessMA
            Set(OriginalText, Substitute(dealSelected.probability_of_success, ",", ""));
            Set(FirstDotIndex, Find(".", OriginalText));
            Set(TextBeforeFirstDot, Left(OriginalText, FirstDotIndex));
            Set(TextAfterFirstDot, Mid(OriginalText, FirstDotIndex + 1, Len(OriginalText) - FirstDotIndex));
            Set(ModifiedText, TextBeforeFirstDot & Substitute(TextAfterFirstDot, ".", ""));
            If(!IsNumeric(ModifiedText), Substitute(dealSelected.probability_of_success, dealSelected.probability_of_success, "");Set(probabilityOfSuccessMA, Blank()),
            Set(probabilityOfSuccessMA, ModifiedText));
            
            // successFeeMA
            Set(OriginalText, Substitute(dealSelected.percent_success_fee, ",", ""));
            Set(FirstDotIndex, Find(".", OriginalText));
            Set(TextBeforeFirstDot, Left(OriginalText, FirstDotIndex));
            Set(TextAfterFirstDot, Mid(OriginalText, FirstDotIndex + 1, Len(OriginalText) - FirstDotIndex));
            Set(ModifiedText, TextBeforeFirstDot & Substitute(TextAfterFirstDot, ".", ""));
            If(!IsNumeric(ModifiedText), Substitute(dealSelected.percent_success_fee, dealSelected.percent_success_fee, "");Set(successFeeMA, Blank()),
            Set(successFeeMA, ModifiedText));
            
            // ugencyMA
            Set(OriginalText, Substitute(dealSelected.ugency, ",", ""));
            Set(FirstDotIndex, Find(".", OriginalText));
            Set(TextBeforeFirstDot, Left(OriginalText, FirstDotIndex));
            Set(TextAfterFirstDot, Mid(OriginalText, FirstDotIndex + 1, Len(OriginalText) - FirstDotIndex));
            Set(ModifiedText, TextBeforeFirstDot & Substitute(TextAfterFirstDot, ".", ""));
            If(!IsNumeric(ModifiedText), Substitute(dealSelected.ugency, dealSelected.ugency, "");Set(ugencyMA, Blank()),
            Set(ugencyMA, ModifiedText));
            
            // importanceMA
            Set(OriginalText, Substitute(dealSelected.importance, ",", ""));
            Set(FirstDotIndex, Find(".", OriginalText));
            Set(TextBeforeFirstDot, Left(OriginalText, FirstDotIndex));
            Set(TextAfterFirstDot, Mid(OriginalText, FirstDotIndex + 1, Len(OriginalText) - FirstDotIndex));
            Set(ModifiedText, TextBeforeFirstDot & Substitute(TextAfterFirstDot, ".", ""));
            If(!IsNumeric(ModifiedText), Substitute(dealSelected.importance, dealSelected.importance, "");Set(importanceMA, Blank()),
            Set(importanceMA, ModifiedText));
        Text: ="Button"
        Visible: =false
        X: =80
        Y: =80
        ZIndex: =62

    SubHeader_MA_Group As group:
        Height: =5
        Width: =5
        X: =120
        Y: =120
        ZIndex: =63

        SubHeaderBg_6 As rectangle:
            BorderColor: =RGBA(255, 255, 255, 1)
            Fill: =RGBA(255, 255, 255, 1)
            Height: =If(App.Width <= 600 && StatusDropDown.Visible, 110, 60)
            Width: =Parent.Width - If(Parent.Width > 800, If(MobileShowMenu, 240, 50), 0)
            X: =If(App.Width > 800, If(MobileShowMenu, 240, 50), 0)
            Y: =HeaderQT2List_9.Y + HeaderQT2List_9.Height
            ZIndex: =3

        SaveButton_OwnerChangeDealValue As htmlViewer:
            BorderStyle: =BorderStyle.Solid
            Font: =Font.Arial
            Height: =50
            HtmlText: |-
                ="<div style=""width: 40px; height: 38px; display: flex; justify-content: center; align-items: center; border: 1px solid black; border-radius: 5px; cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                  <path d=""M21 7V19C21 19.55 20.804 20.021 20.412 20.413C20.02 20.805 19.5493 21.0007 19 21H5C4.45 21 3.979 20.804 3.587 20.412C3.195 20.02 2.99934 19.5493 3 19V5C3 4.45 3.196 3.979 3.588 3.587C3.98 3.195 4.45067 2.99934 5 3H17L21 7ZM19 7.85L16.15 5H5V19H19V7.85ZM12 18C12.8333 18 13.5417 17.7083 14.125 17.125C14.7083 16.5417 15 15.8333 15 15C15 14.1667 14.7083 13.4583 14.125 12.875C13.5417 12.2917 12.8333 12 12 12C11.1667 12 10.4583 12.2917 9.875 12.875C9.29167 13.4583 9 14.1667 9 15C9 15.8333 9.29167 16.5417 9.875 17.125C10.4583 17.7083 11.1667 18 12 18ZM6 10H15V6H6V10ZM5 7.85V19V5V7.85Z"" fill=""#525252""/>
                </svg></div>"
            OnSelect: =Select(SaveButton_6)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Tooltip: ="Save this deal"
            Visible: =!SaveButton_6.Visible && CurrentStep = 2 && (isOwnerOrSupport || isIBDrirector) && !(dealSelected.status in ["DONE", "REJECTED", "CANCELED", "CLOSE", "REJECT", "CANCEL", "REQUEST_EDIT", "CLOSED"])
            Width: =42
            X: =SaveButton_6.X
            Y: =SaveButton_6.Y
            ZIndex: =4

        SaveButton_ContractDate As htmlViewer:
            BorderStyle: =BorderStyle.Solid
            Font: =Font.Arial
            Height: =50
            HtmlText: |-
                ="<div style=""width: 40px; height: 38px; display: flex; justify-content: center; align-items: center; border: 1px solid black; border-radius: 5px; cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                  <path d=""M21 7V19C21 19.55 20.804 20.021 20.412 20.413C20.02 20.805 19.5493 21.0007 19 21H5C4.45 21 3.979 20.804 3.587 20.412C3.195 20.02 2.99934 19.5493 3 19V5C3 4.45 3.196 3.979 3.588 3.587C3.98 3.195 4.45067 2.99934 5 3H17L21 7ZM19 7.85L16.15 5H5V19H19V7.85ZM12 18C12.8333 18 13.5417 17.7083 14.125 17.125C14.7083 16.5417 15 15.8333 15 15C15 14.1667 14.7083 13.4583 14.125 12.875C13.5417 12.2917 12.8333 12 12 12C11.1667 12 10.4583 12.2917 9.875 12.875C9.29167 13.4583 9 14.1667 9 15C9 15.8333 9.29167 16.5417 9.875 17.125C10.4583 17.7083 11.1667 18 12 18ZM6 10H15V6H6V10ZM5 7.85V19V5V7.85Z"" fill=""#525252""/>
                </svg></div>"
            OnSelect: =Select(SaveButton_6)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Tooltip: ="Save this deal"
            Visible: =!SaveButton_6.Visible && ContractDate.Visible && ContractDate.DisplayMode = DisplayMode.Edit
            Width: =42
            X: |-
                =If(CurrentStep in [5,6,7],
                If(btnSubmit_4.Visible, btnSubmit_4.X - Self.Width - 8, btnSubmit_4.X + btnSubmit_4.Width - Self.Width),
                If(StatusDropDown.Visible, StatusDropDown.X - Self.Width - 8, btnSubmit_4.Visible, btnSubmit_4.X - Self.Width - 8, btnSubmit_4.X + btnSubmit_4.Width - Self.Width)
                )
            Y: =btnApprove_MA.Y
            ZIndex: =5

        SaveButton_6 As htmlViewer:
            BorderStyle: =BorderStyle.Solid
            Font: =Font.Arial
            Height: =50
            HtmlText: |-
                ="<div style=""width: 40px; height: 38px; display: flex; justify-content: center; align-items: center; border: 1px solid black; border-radius: 5px; cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                  <path d=""M21 7V19C21 19.55 20.804 20.021 20.412 20.413C20.02 20.805 19.5493 21.0007 19 21H5C4.45 21 3.979 20.804 3.587 20.412C3.195 20.02 2.99934 19.5493 3 19V5C3 4.45 3.196 3.979 3.588 3.587C3.98 3.195 4.45067 2.99934 5 3H17L21 7ZM19 7.85L16.15 5H5V19H19V7.85ZM12 18C12.8333 18 13.5417 17.7083 14.125 17.125C14.7083 16.5417 15 15.8333 15 15C15 14.1667 14.7083 13.4583 14.125 12.875C13.5417 12.2917 12.8333 12 12 12C11.1667 12 10.4583 12.2917 9.875 12.875C9.29167 13.4583 9 14.1667 9 15C9 15.8333 9.29167 16.5417 9.875 17.125C10.4583 17.7083 11.1667 18 12 18ZM6 10H15V6H6V10ZM5 7.85V19V5V7.85Z"" fill=""#525252""/>
                </svg></div>"
            OnSelect: |-
                =Set(isLazyload, true);
                Set(dealStage, If(IsBlank(dealSelected) || IsBlank(dealSelected.deal_stage), "Evaluating", dealSelected.deal_stage));
                Set(DealDetailTab, If(CurrentStep = 4, 1, 2));
                // Set deal status and main procedures
                If( !IsBlank(dealSelected) && dealSelected.deal_status = "Revised",
                    Set(dealStatusToSend, dealSelected.deal_status); Set(mainProceduresToSend, dealSelected.deal_main_procedure);,
                    IsBlank(dealSelected) || dealSelected.status = "NEW_LEAD_CREATION",
                    Set(dealStatusToSend, "Draft"); Set(mainProceduresToSend, "New lead creation");,
                    dealSelected.status = "DEAL_ADVISORY" || dealSelected.status = "REVISED",
                    Set(dealStatusToSend, "Draft"); Set(mainProceduresToSend, "Deal advisory opportunity");,
                    dealSelected.status = "PENDING_MANDATE_APPROVAL",
                    Set(dealStatusToSend, "Pending approval"); Set(mainProceduresToSend, "Mandate Approval");,
                    dealSelected.status = "PENDING_SERVICE_CONTRACT",
                    Set(dealStatusToSend, "Draft"); Set(mainProceduresToSend, "Signing mandate");,
                    dealSelected.status = "PENDING_REVIEW_DEAL_OWNER",
                    Set(dealStatusToSend, "Pending approval"); Set(mainProceduresToSend, "Signing mandate");,
                    dealSelected.status = "REVISED",
                    Set(dealStatusToSend, "Draft"); Set(mainProceduresToSend, "Signing mandate");,
                    dealSelected.status = "PENDING_REVIEW_HEAD_DIVISION",
                    Set(dealStatusToSend, "Pending approval"); Set(mainProceduresToSend, "Signing mandate");,
                    dealSelected.status = "PENDING_REVIEW_CEO",
                    Set(dealStatusToSend, "Pending approval"); Set(mainProceduresToSend, "Signing mandate"); Set(dealStage, "Execution"),
                    dealSelected.status in ["PENDING_SIGNING", "PENDING_CLOSING", "PENDING_EXCUTION_SIGNING_CLOSING"],
                    Set(dealStatusToSend, "Draft");
                    Set(mainProceduresToSend, dealSelected.deal_main_procedure);,
                    // Default
                    Set(dealStatusToSend, dealSelected.deal_status); Set(mainProceduresToSend, dealSelected.deal_main_procedure);
                );
                
                If(!IsBlank(dealSelected) && dealSelected.status = "PENDING_SIGNING" && approveAction = "APPROVE", Set(dealStage, "Closing"));
                If(!IsBlank(dealSelected) && dealSelected.is_request_edit, Set(dealStage, "Closing"); Set(mainProceduresToSend, "Closing"));
                If(dealStatusToSend = "Closed", Set(mainProceduresToSend, "Closing"); Set(dealStage, "Closing"));
                If(mainProceduresToSend = "Closing", Set(dealStage, "Closing"));
                If(dealSelected.status = "REVISED", Set(dealStatusToSend, "Revised"));
                
                UpdateContext({ShowNotification: false});
                Set(dataResposneDealDraft, Blank());
                // files
                ClearCollect(listAttToSend, []);
                ClearCollect(listAtt, AddColumns(att_12.Attachments, title, "step231"), AddColumns(att_13.Attachments, title, "step232"), AddColumns(att_16.Attachments, title, "step22"), AddColumns(att_Step4_1.Attachments, title, "step4"), AddColumns(att_Step5.Attachments, title, "step5"), AddColumns(att_Step6.Attachments, title, "step6"), AddColumns(att_Step7.Attachments, title, "step7"));
                ForAll(listAtt, Collect(listAttToSend,{file_name: Text(Now(), "ddmmyyyy_hhmmss_") & ThisRecord.Name,title: ThisRecord.'data-ADB4D7A662F548B49FAC2B986E348A1Btitle',date: Text(Now(), "yyyy-mm-dd hh:mm:ss"),by: currenUserV2.id,size: ""}));
                
                 // Save files to blob
                Clear(listAttachFileToSave);
                Clear(listAttachFileNonPrefix);
                Clear(colAttachments);
                ForAll(listAtt As att,
                Collect(colAttachments,{Id:"",Date: nowV1,By: User().FullName,Name: att.Name, file_name: att.Name,NameGroup: att.Name,Value: att.Value,File: {file: {contentBytes: att.Value,name: att.Name, file_name: Text(Now(), "ddmmyyyy_hhmmss_") & att.Name}},IsDeleted:false,Size: ""}));
                ClearCollect(GroupedItems,GroupBy(colAttachments,NameGroup,Group));
                ForAll(GroupedItems,Collect(listAttachFileNonPrefix,First(ThisRecord.Group)); );
                UpdateIf(listAttachFileNonPrefix, true, {Name: Text(Now(), "ddmmyyyy_hhmmss_") & Name, file_name: Text(Now(), "ddmmyyyy_hhmmss_") & Name});
                Collect(listAttachFileToSave,listAttachFileNonPrefix);
                
                Set(isLoading, true);
                
                Reset(att_Step7); Reset(att_Step6); Reset(att_Step5); Reset(att_Step4_1); Reset(att_16); Reset(att_12); Reset(att_13);
                
                // notes
                ClearCollect(NoteDataToSend, []);
                ClearCollect(NoteData,
                    If(!IsEmpty(DataNoteList),
                        Filter(DataNoteList, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep22Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteListAtt),
                        Filter(DataNoteListAtt, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep23Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteMandate),
                        Filter(DataNoteMandate, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep41Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteExecution),
                        Filter(DataNoteExecution, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep5Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteAgreements),
                        Filter(DataNoteAgreements, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep6Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteClosing),
                        Filter(DataNoteClosing, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep7Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    )
                );
                ForAll(NoteData, Collect(NoteDataToSend,{idNote: "",LabelNotedBy: ThisRecord.created_by,location: ThisRecord.location, screen: ThisRecord.screen,note: ThisRecord.note}));
                
                // JSON data to send
                Set(dealInfo,{
                    company_id: If(IsBlank(clientNameSelectedValue.id_company),"",clientNameSelectedValue.id_company),
                    deal_name: "-"&ClientName_Input_MAStep1.Text,
                    deal_type_1: If(IsBlank(dealType1SelectedValue), "", dealType1SelectedValue),
                    deal_type_2: If(IsBlank(dealType2SelectedValue), "", dealType2SelectedValue),
                    deal_type_3: If(IsBlank(dealType3SelectedValue), "", dealType3SelectedValue),
                    engagement_risk: If(IsBlank(MA_EngagementRiskDropdown.Text), "",MA_EngagementRiskDropdown.Text),
                    ugency: If(IsBlank(input_Ugency.Text), "", input_Ugency.Text),
                    importance: If(IsBlank(input_Importance.Text), "", input_Importance.Text),           
                    probability_of_success: If(IsBlank(input_Probability.Text), "", input_Probability.Text),
                    deal_value: If(IsBlank(input_deal_value.Text), "", ""&Value(Substitute(input_deal_value.Text, ",", ""))&""),
                    conclusions_on_client_acceptance: "" ,
                    approval_on_client_acceptance: If(IsBlank(MA_ApprovalOnClientDropdown.Text), "", MA_ApprovalOnClientDropdown.Text) ,
                    conclusions_on_engagement_acceptance:"" ,
                    approval_on_engagement_acceptance: If(IsBlank(MA_ApprovalOnEnagementDropdown.Text), "", MA_ApprovalOnEnagementDropdown.Text) ,
                    transaction_fee: If(IsBlank(input_Probability.Text), "", ""&Value(Substitute(input_Transaction.Text, ",", ""))&""),
                    percent_success_fee: If(IsBlank(input_Success_fee.Text), "", input_Success_fee.Text),
                    retainer_fee: If(IsBlank(input_Retainer.Text), "", ""&Value(Substitute(input_Retainer.Text, ",",""))&""),
                    percentage_of_stock_for_sale:"" ,
                    deal_stage: dealStage,
                    deal_status: dealStatusToSend,
                    deal_main_procedure: mainProceduresToSend,
                    deal_owner: If(IsBlank(dealSelected) || IsBlank(dealSelected.deal_owner), currenUserV2.id, dealSelected.deal_owner),
                    mentor: If(IsBlank(dealSelected) || IsBlank(dealSelected.mentor), "", dealSelected.mentor),
                    observer: If(IsBlank(dealSelected) || IsBlank(dealSelected.observer), "", dealSelected.observer),
                    actual_closing_time: If(IsBlank(dealSelected) || IsBlank(dealSelected.actual_closing_time), "", dealSelected.actual_closing_time),
                    contract_date: Text(ContractDate.SelectedDate, "yyyy-mm-dd hh:mm:ss"),
                    expected_closing_time: Text(DatePicker_Expected_closing_time.SelectedDate, "yyyy-mm-dd hh:mm:ss"),
                    divestment_motive: If(IsBlank(dealSelected) || IsBlank(dealSelected.divestment_motive), "", dealSelected.divestment_motive),
                    state: If(IsBlank(dealSelected) || IsBlank(dealSelected.state), "ACTIVE", dealSelected.state),
                    stage: If(IsBlank(dealSelected) || IsBlank(dealSelected.stage), "Assessment", dealSelected.stage),
                    status: If(IsBlank(dealSelected) || IsBlank(dealSelected.status), "NEW_LEAD_CREATION", dealSelected.status),
                    share: If(IsBlank(dealSelected) || IsBlank(dealSelected.share), "Restricted", dealSelected.share),
                    created_by: currenUserV2.id,
                    is_request_edit: If(IsBlank(dealSelected) || IsBlank(dealSelected.is_request_edit), "false", dealSelected.is_request_edit),
                    comment_mandate: If(IsBlank(TextInputStep3.Text), "", TextInputStep3.Text),
                    created_comment_date: If(IsBlank(dealSelected) || IsBlank(dealSelected.created_comment_date), Text(Now(), "yyyy-mm-dd hh:mm:ss"), dealSelected.created_comment_date)
                });
                
                Set(jsonToSend, {deal_info: dealInfo,attach_insert: AddColumns(listAttToSend, FilePath, urlUploadMAHead & file_name, Container, bucketMAAttach),attach_delete: listDeleteMA,noteList: NoteDataToSend});
                
                // Call API
                Set(dataResposneDealDraft,'TVS->Deal_Information-Insert-Update' .Run(JSON(jsonToSend, JSONFormat.IndentFour),If(IsBlank(dealSelected),"0",dealSelected.id),resKeyOpenAll.open,resKeyOpenAll.close,currenUserV2.id,"",If(IsBlank(dealSelected.status),"",dealSelected.status),
                false// isSubmit
                ,false,true,false,false,"1,2,3,4"));
                
                If(dataResposneDealDraft.status = "200",
                    Set(isSubmited, false);
                    Set(IsError, false); Set(NoticationText,"Saved successfully!"); UpdateContext({ShowNotification: true});
                    Set(isLoading, false);
                    // Refresh data
                    ClearCollect(dealSelected1, 'TVS->FindByIDDeal'.Run(resKeyOpenAll.open,resKeyOpenAll.close,dataResposneDealDraft.id));
                    Set(dealSelected, First(dealSelected1));
                
                    Set(isCreateUser, "CREATE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action));
                    Set(isCEO, "CEO_APPROVE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action));
                    Set(isIBDrirector, (IsBlank(dealSelected) || !(dealSelected.status in ["CLOSED"])) && "IB_DIRECTOR_APPROVE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action));
                    Set(isApproveStatus, dealSelected.status in ["PENDING_MANDATE_APPROVAL", "PENDING_REVIEW_DEAL_OWNER", "PENDING_REVIEW_HEAD_DIVISION", "PENDING_APPROVE_CEO", "REQUEST_EDIT"]);
                    Set(isParticitatingUser, IsBlank(dealSelected) || currenUserV2.id in listDealSupport.employee_id || currenUserV2.id = dealSelected.deal_owner || currenUserV2.id = dealSelected.mentor);
                    Set(isOwner, currenUserV2.id = dealSelected.deal_owner);
                    Set(isOwnerOrSupport, currenUserV2.id = dealSelected.deal_owner || currenUserV2.id in Filter(listDealSupport, type = "deal_support").employee_id);
                
                    Select(SetPercentVariables);
                    // Step
                    Set(CurrentDealSelectedStep, Switch(dealSelected.status,
                        "NEW_LEAD_CREATION", 1, "DEAL_ADVISORY", 2, "PENDING_MANDATE_APPROVAL", 3,
                        "PENDING_SERVICE_CONTRACT", 4.1, "REVISED", 4.1, "PENDING_REVIEW_DEAL_OWNER", 4.2, "PENDING_REVIEW_HEAD_DIVISION", 4.3, "PENDING_APPROVE_CEO", 4.4,
                        "PENDING_CONTRACT_DATE", 4, "PENDING_EXCUTION_SIGNING_CLOSING", 5, "PENDING_SIGNING", 6, "PENDING_CLOSING", 7, "DONE", 8, "CLOSED", 1, 1));
                    // If(IsBlank(dealSelected) || !dealSelected.is_request_edit, Set(CurrentStep, If(CurrentDealSelectedStep = 8, 1, RoundDown(CurrentDealSelectedStep, 0))););
                
                    Set(reasonOfDeal,
                        AddColumns('TVS->getReasonOfDeal'.Run(dataResposneDealDraft.id,resKeyOpenAll.open,resKeyOpenAll.close), step,
                        Switch(status, "PENDING_SERVICE_CONTRACT", 4.1, "PENDING_REVIEW_DEAL_OWNER", 4.2, "PENDING_REVIEW_HEAD_DIVISION", 4.3, "PENDING_APPROVE_CEO", 4.4, "PENDING_CONTRACT_DATE", 4.5)));
                    ClearCollect(reasonOfOwner,Filter(reasonOfDeal, status="dealOwner_Approve"));
                    ClearCollect(reasonOfCEO,Filter(reasonOfDeal, status="CEO_Approve"));
                    ClearCollect(noteOfDeal,'TVS->GetNoteByDealID-DEV'.Run(resKeyOpenAll.open,resKeyOpenAll.close,dataResposneDealDraft.id));
                    ClearCollect(listFile,'TVS->GetFileByIDDeal'.Run(resKeyOpenAll.open,resKeyOpenAll.close,dataResposneDealDraft.id));
                
                    // Re-run onVisible
                    ClearCollect(DataNoteList,
                    [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step22", write_by: "", write_date: "", guid_mark: GUID()}]);
                    ClearCollect(DataNoteListAtt,
                    [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step23", write_by: "", write_date: "", guid_mark: GUID()}]);
                    ClearCollect(DataNoteMandate,
                    [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step41", write_by: "", write_date: "", guid_mark: GUID()}]);
                    ClearCollect(DataNoteExecution,
                    [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step5", write_by: "", write_date: "", guid_mark: GUID()}]);
                    ClearCollect(DataNoteAgreements,
                    [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step6", write_by: "", write_date: "", guid_mark: GUID()}]);
                    ClearCollect(DataNoteClosing,
                    [{created_by: "", created_date: "", id_deal_note: "", isSelected: true, isLastest: "true", location: "1", note: "", screen: "step7", write_by: "", write_date: "", guid_mark: GUID()}]);
                
                    If(!IsBlank(dealSelected),
                        // Set default value if have data
                        Set(dealType1SelectedValue, dealSelected.deal_type_1);
                        Set(dealType2SelectedValue, dealSelected.deal_type_2);
                        Set(dealType3SelectedValue, dealSelected.deal_type_3);
                        Set(enagementRiskValue, dealSelected.engagement_risk);
                        Set(approvalClientValue, dealSelected.approval_on_client_acceptance);
                        Set(approvalEnagementValue, dealSelected.approval_on_engagement_acceptance);,
                        // Reset value if not have data
                        Set(dealType1SelectedValue, Blank());
                        Set(dealType2SelectedValue, Blank());
                        Set(dealType3SelectedValue, Blank());
                        Set(enagementRiskValue, Blank());
                        Set(approvalClientValue, Blank());
                        Set(approvalEnagementValue, Blank());
                    );
                
                    // Fill Notes
                    ClearCollect(noteStep22Data,
                        Sort(AddColumns(Filter(noteOfDeal, screen = "step22" && Len(Trim(note)) > 0),
                        guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
                    ClearCollect(noteStep23Data,
                        Sort(AddColumns(Filter(noteOfDeal, screen = "step23" && Len(Trim(note)) > 0),
                        guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
                    ClearCollect(noteStep41Data,
                        Sort(AddColumns(Filter(noteOfDeal, screen = "step41" && Len(Trim(note)) > 0),
                        guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
                    ClearCollect(noteStep5Data,
                        Sort(AddColumns(Filter(noteOfDeal, screen = "step5" && Len(Trim(note)) > 0),
                        guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
                    ClearCollect(noteStep6Data,
                        Sort(AddColumns(Filter(noteOfDeal, screen = "step6" && Len(Trim(note)) > 0),
                        guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
                    ClearCollect(noteStep7Data,
                        Sort(AddColumns(Filter(noteOfDeal, screen = "step7" && Len(Trim(note)) > 0),
                        guid_mark, GUID(), isSelected, If(isLastest = "true", true, false), note_old, note), write_date));
                
                    If(!IsEmpty(noteStep22Data), ClearCollect(DataNoteList, noteStep22Data); Clear(noteStep22Data));
                    If(!IsEmpty(noteStep23Data), ClearCollect(DataNoteListAtt, noteStep23Data); Clear(noteStep23Data));
                    If(!IsEmpty(noteStep41Data), ClearCollect(DataNoteMandate, noteStep41Data); Clear(noteStep41Data));
                    If(!IsEmpty(noteStep5Data), ClearCollect(DataNoteExecution, noteStep5Data); Clear(noteStep5Data));
                    If(!IsEmpty(noteStep6Data), ClearCollect(DataNoteAgreements, noteStep6Data); Clear(noteStep6Data));
                    If(!IsEmpty(noteStep7Data), ClearCollect(DataNoteClosing, noteStep7Data); Clear(noteStep7Data));
                
                    // Reset input form
                    Reset(input_deal_value);Reset(input_Probability);Reset(input_Transaction);Reset(input_Retainer);Reset(input_Success_fee);Reset(input_Ugency);
                    Reset(input_Importance);Reset(DatePicker_Expected_closing_time); Reset(att_16); Reset(TextInputStep3); Reset(ContractDate);
                    // Send email and noti
                    If(!IsBlank(dealSelected) && !IsBlank(oldState) && !IsBlank(dealSelected.state) && (oldState <> dealSelected.state),
                        Set(sendMAEmailRes, 'TVS->SendNotiEmail-Process2'.Run(
                            resKeyOpenAll.open,resKeyOpenAll.close,currenUserV2.id, dealSelected.status,
                            "SAVE", dealSelected.id,
                            "<a href='" & linkToApp & "?restartApp=true&screen=detail-ma&action=approve-ma&maId=" & dealSelected.id & "'>Link to item</a>",
                            currenUserV2.name, currenUserV2.email, currenUserV2.internal_email,
                            oldState <> dealSelected.state, // is diff state
                            If(IsBlank(dealSelected) || IsBlank(dealSelected.is_request_edit), false, dealSelected.is_request_edit), appProperty, emailFromConfix, "")
                        );
                    );
                    ForAll(listAttachFileToSave,If(IsBlank(ThisRecord.Id) && !ThisRecord.IsDeleted,AzureBlobStorage.CreateFile(bucketMAAttach,ThisRecord.file_name,ThisRecord.Value)));
                    Set(oldState, If(IsBlank(dealSelected), "", dealSelected.state));
                    ,
                
                    Set(IsError, true); Set(NoticationText,"This deal has been processed by another user, please reload this page.");
                    UpdateContext({ShowNotification: true});
                );
                Set(isLoading, false);
                Set(isLazyload, false);
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Tooltip: ="Save this deal"
            Visible: |-
                =If(!IsBlank(dealSelected) && dealSelected.status in ["REVISED"], (CurrentStep < 5 && isOwnerOrSupport) || isIBDrirector,
                    !IsBlank(dealSelected) && dealSelected.is_request_edit && dealSelected.status in ["APPROVE_REQUEST_EDIT", "NEW_LEAD_CREATION"], isOwnerOrSupport || isIBDrirector,
                    !IsBlank(dealSelected) && !dealSelected.is_request_edit && dealSelected.is_revise && dealSelected.status in ["NEW_LEAD_CREATION"] && CurrentStep in [1, 2],
                    isOwnerOrSupport || isIBDrirector,
                    If( IsBlank(dealSelected), true,
                        dealSelected.status in ["REQUEST_EDIT"], false,
                        dealSelected.status in ["CLOSED"], false,
                        !IsBlank(dealSelected) && dealSelected.status in ["NEW_LEAD_CREATION"] && dealSelected.is_request_edit, isOwnerOrSupport || isIBDrirector,
                        dealSelected.status in ["PENDING_REVIEW_HEAD_DIVISION", "PENDING_MANDATE_APPROVAL", "DONE", "CLOSED"], isIBDrirector,
                        dealSelected.status in ["PENDING_APPROVE_CEO"], If((Round(CurrentStep, 0) = 4), isCEO, false),
                        dealSelected.status in ["PENDING_REVIEW_DEAL_OWNER"], isOwner || isIBDrirector,
                        If(Round(CurrentDealSelectedStep, 0) >= 4 && CurrentStep < 4, isIBDrirector, true),
                        isIBDrirector || (isCreateUser && isOwnerOrSupport)
                    ) && If(IsBlank(dealSelected) || isIBDrirector, true, CurrentStep in [5,6,7], isOwnerOrSupport || isIBDrirector, true)
                    && If(!IsBlank(dealSelected) && !IsBlank(dealSelected.is_request_edit) && dealSelected.is_request_edit, true,
                            If(!IsBlank(dealSelected) && dealSelected.status in ["NEW_LEAD_CREATION"] && dealSelected.is_request_edit, isOwnerOrSupport || isIBDrirector,
                                dealSelected.status in ["PENDING_REVIEW_HEAD_DIVISION", "PENDING_MANDATE_APPROVAL", "DONE", "CLOSED"], isIBDrirector,
                                CurrentDealSelectedStep >= CurrentStep))
                    && If(CurrentDealSelectedStep in [5,6,7] && !(CurrentStep in [5,6,7]), isIBDrirector, true)
                )
            Width: =43
            X: |-
                =If(!IsBlank(dealSelected) && dealSelected.is_request_edit,
                    If(StatusDropDown.Visible, StatusDropDown.X - Self.Width - 8,
                        btnSubmit_4.Visible, btnSubmit_4.X - Self.Width - 8,
                        btnReject_4.Visible, btnReject_4.X - Self.Width - 8,
                        btnSubmit_4.X + btnSubmit_4.Width - Self.Width),
                    If(CurrentStep in [5,6,7],
                    If(StatusDropDown.Visible, StatusDropDown.X - Self.Width - 8, btnSubmit_4.Visible, btnSubmit_4.X - Self.Width - 8, btnReject_4.Visible, btnReject_4.X - Self.Width - 8, btnSubmit_4.X + btnSubmit_4.Width - Self.Width),
                    If(StatusDropDown.Visible, StatusDropDown.X - Self.Width - 8, btnSubmit_4.Visible, btnSubmit_4.X - Self.Width - 8, btnReject_4.Visible, btnReject_4.X - Self.Width - 8, btnSubmit_4.X + btnSubmit_4.Width - Self.Width)
                ))
            Y: =btnApprove_MA.Y
            ZIndex: =6

        IconBack_6 As icon.ArrowLeft:
            Color: =RGBA(0, 0, 0, 1)
            Height: =25
            Icon: =Icon.ArrowLeft
            OnSelect: |-
                =Set(DealDetailTab, 1);
                Switch(DealDetailTab, 1, ClearCollect(listItem, listItemActionNeeded), 2, ClearCollect(listItem, listItemUnderProcessing), 3, ClearCollect(listItem, listItemCompleted));
                ClearCollect(listRes, listItem.listItem);
                Navigate(MA);
                Set(dealSelected,Blank());
            Width: =25
            X: =SubHeaderBg_6.X + 10
            Y: =SubHeaderBg_6.Y + 15
            ZIndex: =7

        LabelTitle_4 As label:
            Font: =Font.Arial
            FontWeight: =FontWeight.Semibold
            Height: =19
            Size: =10.5
            Text: =If(IsBlank(dealSelected), If(IsBlank(dataResposneDealDraft.id), ""), dealSelected.deal_name&If(dealSelected.company_name in dealSelected.deal_name, "", "- "&dealSelected.company_name))
            Width: =If(App.Width <= 600 && StatusDropDown.Visible,  SubHeaderBg_6.X + SubHeaderBg_6.Width - Self.X - 10, If(DeleteIcon_4.Visible, DeleteIcon_4.X, SaveButton_6.X) - Self.X)
            Wrap: =false
            X: =IconBack_6.X + IconBack_6.Width + 10
            Y: =IconBack_6.Y - 3
            ZIndex: =8

        LabelSubTitle_4 As label:
            Font: =Font.Arial
            Height: =19
            Size: =10.5
            Text: |-
                =If(App.Width > 800, "Last edited user: ", "")& If(IsBlank(dealSelected), currenUserV2.name, If(IsBlank(dealSelected.name_write_by), dealSelected.name_created_by, dealSelected.name_write_by)) & " " & If(IsBlank(dealSelected), Text(Now(), "dd/mm/yyyy hh:mm:ss"), Text(DateTimeValue(If(IsBlank(dealSelected.write_date), dealSelected.created_date, dealSelected.write_date)), If(App.Width > 800, "dd/mm/yyyy hh:mm:ss", "dd/mm/yyyy")))
            Width: =LabelTitle_4.Width 
            Wrap: =false
            X: =LabelTitle_4.X
            Y: =LabelTitle_4.Y + LabelTitle_4.Height
            ZIndex: =9

        IconDeleteNav As htmlViewer:
            Font: =Font.Arial
            Height: =44
            HtmlText: |-
                ="<div style=""cursor:pointer; width:40px; height: 37px; display:flex; justify-content:center; align-items:center""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 16 16"" fill=""none"">
                  <path d=""M4.66683 2.66634C4.66683 2.31272 4.8073 1.97358 5.05735 1.72353C5.3074 1.47348 5.64654 1.33301 6.00016 1.33301H10.0002C10.3538 1.33301 10.6929 1.47348 10.943 1.72353C11.193 1.97358 11.3335 2.31272 11.3335 2.66634V3.99967H14.0002C14.177 3.99967 14.3465 4.06991 14.4716 4.19494C14.5966 4.31996 14.6668 4.48953 14.6668 4.66634C14.6668 4.84315 14.5966 5.01272 14.4716 5.13775C14.3465 5.26277 14.177 5.33301 14.0002 5.33301H13.2875L12.7095 13.4277C12.6856 13.7641 12.535 14.0789 12.2882 14.3087C12.0415 14.5386 11.7167 14.6663 11.3795 14.6663H4.62016C4.28292 14.6663 3.95821 14.5386 3.71142 14.3087C3.46463 14.0789 3.31411 13.7641 3.29016 13.4277L2.7135 5.33301H2.00016C1.82335 5.33301 1.65378 5.26277 1.52876 5.13775C1.40373 5.01272 1.3335 4.84315 1.3335 4.66634C1.3335 4.48953 1.40373 4.31996 1.52876 4.19494C1.65378 4.06991 1.82335 3.99967 2.00016 3.99967H4.66683V2.66634ZM6.00016 3.99967H10.0002V2.66634H6.00016V3.99967ZM4.0495 5.33301L4.62083 13.333H11.3802L11.9515 5.33301H4.0495ZM6.66683 6.66634C6.84364 6.66634 7.01321 6.73658 7.13823 6.8616C7.26326 6.98663 7.3335 7.1562 7.3335 7.33301V11.333C7.3335 11.5098 7.26326 11.6794 7.13823 11.8044C7.01321 11.9294 6.84364 11.9997 6.66683 11.9997C6.49002 11.9997 6.32045 11.9294 6.19542 11.8044C6.0704 11.6794 6.00016 11.5098 6.00016 11.333V7.33301C6.00016 7.1562 6.0704 6.98663 6.19542 6.8616C6.32045 6.73658 6.49002 6.66634 6.66683 6.66634ZM9.3335 6.66634C9.51031 6.66634 9.67988 6.73658 9.8049 6.8616C9.92992 6.98663 10.0002 7.1562 10.0002 7.33301V11.333C10.0002 11.5098 9.92992 11.6794 9.8049 11.8044C9.67988 11.9294 9.51031 11.9997 9.3335 11.9997C9.15668 11.9997 8.98712 11.9294 8.86209 11.8044C8.73707 11.6794 8.66683 11.5098 8.66683 11.333V7.33301C8.66683 7.1562 8.73707 6.98663 8.86209 6.8616C8.98712 6.73658 9.15668 6.66634 9.3335 6.66634Z"" fill=""#D00C0C""/>
                </svg></div>"
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Visible: =false 
            Width: =44
            X: =SaveButton_6.X - Self.Width - If(App.Width > 800, 10, 0)
            Y: =SaveButton_6.Y
            ZIndex: =10

        btnApprove_MA As button:
            BorderColor: =Self.Fill
            BorderThickness: =0
            DisabledFill: =Self.Fill
            Fill: =RGBA(17, 79, 144, 1)
            FocusedBorderThickness: =0
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            OnSelect: |-
                =Set(isValid, false);
                Set(isSubmited, true);
                Reset(AddCEOApprove_Checkbox);
                If(!IsBlank(dealSelected) && dealSelected.status in ["REQUEST_EDIT"],
                    Reset(DetailIRReason_Input_4);
                    Set(isSummitedPopup, false);
                    Set(showApprovePopup, true);,
                    UpdateContext({ShowNotification: false});
                    If(CurrentDealSelectedStep = 3,
                        If(Len(StatusDropDown.Text) <= 0, Set(IsError, true); Set(NoticationText,"Status is required!"); UpdateContext({ShowNotification: true}), Set(isValid, true));
                        If(isValid,
                            Reset(DetailIRReason_Input_4);
                            Set(isSummitedPopup, false);
                            Set(showApprovePopup, true);
                        );,
                        Reset(DetailIRReason_Input_4);
                        Set(isSummitedPopup, false);
                        Set(showApprovePopup, true);
                    );
                )
            PaddingLeft: =30
            PressedColor: =Self.Color
            PressedFill: =Self.Fill
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            Size: =10.5
            Text: =If(App.Width > 1100, "Approve", "")
            Tooltip: ="Approve"
            Visible: |-
                =If(!IsBlank(dealSelected) && dealSelected.status in ["REQUEST_EDIT", "CLOSED"], isIBDrirector,
                    !IsBlank(dealSelected) &&
                    If(!IsBlank(dealSelected) && dealSelected.is_request_edit, true, RoundDown(CurrentDealSelectedStep, 0) = RoundDown(CurrentStep, 0)) &&
                    If( IsBlank(dealSelected), false,
                        dealSelected.status in ["PENDING_REVIEW_HEAD_DIVISION", "PENDING_MANDATE_APPROVAL"], isIBDrirector,
                        dealSelected.status in ["PENDING_APPROVE_CEO"], isCEO,
                        dealSelected.status in ["PENDING_REVIEW_DEAL_OWNER"], isOwner,
                        false
                    )
                )
            Width: =If(App.Width > 1100, 90, 40)
            X: =Parent.Width - Self.Width - 20
            Y: =SubHeaderBg_6.Y + If(App.Width <= 600 && StatusDropDown.Visible, 60, 10)
            ZIndex: =11

        btnApprove_MA_Icon As htmlViewer:
            Font: =Font.Arial
            HtmlText: |-
                ="<div style=""width: 40px; height: 38px; display: flex; justify-content: center; align-items: center; cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                  <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M21.546 5.11155C21.8272 5.39285 21.9852 5.77431 21.9852 6.17205C21.9852 6.5698 21.8272 6.95126 21.546 7.23255L10.303 18.4756C10.1544 18.6242 9.97805 18.7421 9.7839 18.8225C9.58976 18.9029 9.38167 18.9443 9.17153 18.9443C8.96138 18.9443 8.75329 18.9029 8.55915 18.8225C8.365 18.7421 8.1886 18.6242 8.04003 18.4756L2.45403 12.8906C2.31076 12.7522 2.19649 12.5867 2.11787 12.4037C2.03926 12.2207 1.99788 12.0238 1.99615 11.8247C1.99442 11.6255 2.03237 11.428 2.10779 11.2436C2.18322 11.0593 2.29459 10.8918 2.43543 10.751C2.57627 10.6101 2.74375 10.4987 2.92809 10.4233C3.11244 10.3479 3.30996 10.3099 3.50913 10.3117C3.7083 10.3134 3.90513 10.3548 4.08813 10.4334C4.27114 10.512 4.43666 10.6263 4.57503 10.7696L9.17103 15.3656L19.424 5.11155C19.5633 4.97216 19.7287 4.86159 19.9108 4.78615C20.0928 4.71071 20.288 4.67188 20.485 4.67188C20.6821 4.67188 20.8772 4.71071 21.0593 4.78615C21.2413 4.86159 21.4067 4.97216 21.546 5.11155Z"" fill=""#FEFEFE""/>
                </svg></div>"
            OnSelect: =Select(btnApprove_MA)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Tooltip: ="Approve"
            Visible: =btnApprove_MA.Visible
            Width: =40
            X: =btnApprove_MA.X - If(App.Width > 1100, 2, 0)
            Y: =btnApprove_MA.Y
            ZIndex: =12

        btnRevise_3 As button:
            BorderColor: =Self.Fill
            BorderThickness: =0
            DisabledFill: =Self.Fill
            Fill: =RGBA(214, 117, 27, 1)
            FocusedBorderThickness: =0
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            OnSelect: |-
                =Set(isValid, false);
                Set(isSubmited, true);
                UpdateContext({ShowNotification: false});
                
                If(CurrentDealSelectedStep = 3,
                    If(Len(StatusDropDown.Text) <= 0,
                        Set(IsError, true); Set(NoticationText,"Status is required!"); UpdateContext({ShowNotification: true}),
                        IsBlank(TextInputStep3.Text),
                        // Set(IsError, true); Set(NoticationText,"Comment is required!"); UpdateContext({ShowNotification: true}),
                        Set(isValid, true);
                    );
                
                    If(isValid,
                        Reset(DetailIRReason_Input_4);
                        Set(isSummitedPopup, false);
                        Set(showRevisePopup, true);
                    );,
                    Reset(DetailIRReason_Input_4);
                    Set(isSummitedPopup, false);
                    Set(showRevisePopup, true);
                );
            PaddingLeft: =30
            PressedColor: =Self.Color
            PressedFill: =Self.Fill
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            Size: =10.5
            Text: =If(App.Width > 1100, "Revise", "")
            Tooltip: ="Revise"
            Visible: =btnApprove_MA.Visible && !(dealSelected.status in ["REQUEST_EDIT"])
            Width: =If(App.Width > 1100, 90, 40 )
            X: =btnApprove_MA.X - Self.Width - 8
            Y: =btnApprove_MA.Y
            ZIndex: =13

        ReviseIcon_3 As htmlViewer:
            Font: =Font.Arial
            HtmlText: |-
                ="<div style=""width: 40px; height: 38px; display: flex; justify-content: center; align-items: center; cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                  <path d=""M9.505 21H4.5C4.10218 21 3.72064 20.842 3.43934 20.5607C3.15804 20.2794 3 19.8978 3 19.5V4.5C3 4.10218 3.15804 3.72064 3.43934 3.43934C3.72064 3.15804 4.10218 3 4.5 3H19.5C19.8978 3 20.2794 3.15804 20.5607 3.43934C20.842 3.72064 21 4.10218 21 4.5V9.515M14.5185 21H20.5C20.6326 21 20.7598 20.9473 20.8536 20.8536C20.9473 20.7598 21 20.6326 21 20.5V14.5175H9"" stroke=""white"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round""/>
                  <path d=""M11.5 11.5L8.5 14.5L11.5 17.5"" stroke=""white"" stroke-width=""2"" stroke-linecap=""round"" stroke-linejoin=""round""/>
                </svg></div>"
            OnSelect: =Select(btnRevise_3)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Tooltip: ="Revise"
            Visible: =btnApprove_MA.Visible
            Width: =40
            X: =btnRevise_3.X
            Y: =btnRevise_3.Y
            ZIndex: =14

        btnReject_4 As button:
            BorderColor: =Self.Fill
            BorderThickness: =0
            DisabledFill: =Self.Fill
            Fill: =RGBA(214, 27, 27, 1)
            FocusedBorderThickness: =0
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            OnSelect: |-
                =Set(isValid, false);
                Set(isSubmited, true);
                UpdateContext({ShowNotification: false});
                If(CurrentDealSelectedStep = 3,
                    If(
                        Len(StatusDropDown.Text) <= 0, Set(IsError, true); Set(NoticationText,"Status is required!"); UpdateContext({ShowNotification: true}),
                        // IsBlank(TextInputStep3.Text), Set(IsError, true); Set(NoticationText,"Comment is required!"); UpdateContext({ShowNotification: true}),
                        Set(isValid, true);
                    );
                
                    If(isValid,
                        Reset(DetailIRReason_Input_4);
                        Set(isSummitedPopup, false);
                        Set(showRejectPopup, true);
                    );,
                    Reset(DetailIRReason_Input_4);
                    Set(isSummitedPopup, false);
                    Set(showRejectPopup, true);
                );
            PaddingLeft: =30
            PressedColor: =Self.Color
            PressedFill: =Self.Fill
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            Size: =10.5
            Text: =If(App.Width > 1100, "Reject", "")
            Tooltip: ="Reject"
            Visible: =btnApprove_MA.Visible
            Width: =If(App.Width > 1100, 90, 40)
            X: =If(btnRevise_3.Visible, btnRevise_3.X, btnApprove_MA.X) - Self.Width - 8
            Y: =btnApprove_MA.Y
            ZIndex: =15

        RejectIcon_4 As icon.CancelBadge:
            Color: =RGBA(255, 255, 255, 1)
            Height: =20
            Icon: =Icon.CancelBadge
            OnSelect: =Select(btnReject_4);
            Tooltip: ="Reject"
            Visible: =btnApprove_MA.Visible
            Width: =20
            X: =btnReject_4.X + 10
            Y: =btnReject_4.Y + 10
            ZIndex: =16

        StatusDropDown As button:
            Align: =Align.Left
            BorderColor: =If(IsBlank(Self.Text) && isSubmited, RGBA(214, 27, 27, 1), If(statusShowDropdown, RGBA(0, 18, 107, 1), ColorFade(Self.Fill, -15%)))
            BorderThickness: =1
            Color: =RGBA(82, 82, 82, 1)
            Fill: =RGBA(255, 255, 255, 1)
            FocusedBorderThickness: =1
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =RGBA(241, 244, 249, 1)
            OnSelect: =Set(statusShowDropdown, !statusShowDropdown)
            PaddingLeft: =15
            PaddingRight: =5.27
            PaddingTop: =5.27
            PressedBorderColor: =
            PressedColor: =
            PressedFill: =
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            Size: =10.5
            Text: =First(Filter(DataStatusBdc, Lower(Substitute(If(IsBlank(dealSelected.state), "ACTIVE", dealSelected.state), " ", "")) = ThisRecord.value)).title
            Visible: |-
                =If(CurrentStep in [5, 6, 7], isIBDrirector && !(dealSelected.status in ["REQUEST_EDIT"]), btnApprove_MA.Visible && !(dealSelected.status in ["REQUEST_EDIT"])) &&
                If(!IsBlank(dealSelected) && !IsBlank(dealSelected.is_request_edit) && dealSelected.is_request_edit, true, CurrentDealSelectedStep >= CurrentStep) && isIBDrirector
            Width: =If(App.Width > 800, 140, 120)
            X: =If(btnReject_4.Visible, btnReject_4.X, btnSubmit_4.Visible, btnSubmit_4.X, btnSubmit_4.X + btnSubmit_4.Width) - Self.Width - 10
            Y: =IconDeleteNav.Y
            ZIndex: =17

        iconStatusDropDown As htmlViewer:
            Font: =Font.Arial
            Height: =44
            HtmlText: |-
                =If(statusShowDropdown,
                "<div style=""cursor: pointer""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                <g clip-path=""url(#clip0_1760_3688)"">
                <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill=""#525252""/>
                </g>
                <defs>
                <clipPath id=""clip0_1760_3688"">
                <rect width=""24"" height=""24"" fill=""white""/>
                </clipPath>
                </defs>
                </svg></div>"
                , "<div style=""cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill=""#525252""/>
                </svg></div>")
            OnSelect: =Set(statusShowDropdown, !statusShowDropdown)
            PaddingRight: =5.27
            PaddingTop: =5.27
            Size: =11.60
            Visible: =StatusDropDown.Visible
            Width: =35
            X: =StatusDropDown.X + StatusDropDown.Width - Self.Width
            Y: =StatusDropDown.Y + 3
            ZIndex: =18

        btnSubmit_4 As button:
            BorderColor: =Self.Fill
            BorderThickness: =0
            DisabledFill: =Self.Fill
            Fill: =RGBA(17, 79, 144, 1)
            FocusedBorderThickness: =0
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            OnSelect: |-
                =If(!IsBlank(dealSelected) && dealSelected.status in ["DONE"],
                    Set(requestEditRes, Blank());
                    Set(dealStatusToSend, "Pending request edit"); Set(mainProceduresToSend, "Closing");
                    UpdateContext({ShowNotification: false});
                    Set(requestEditRes, 'TVS->DealRequestEdit'.Run(resKeyOpenAll.open, resKeyOpenAll.close, dealSelected.id, dealSelected.status, dealStatusToSend, mainProceduresToSend, currenUserV2.id));
                
                    If(!IsBlank(requestEditRes) && requestEditRes.status = "200",
                        Set(ShowNotificationCheck, "REQUEST_EDIT_SUCCESS");
                        Navigate(MA);
                        // Send email and noti
                            Set(sendMAEmailRes, 'TVS->SendNotiEmail-Process2'.Run(
                                resKeyOpenAll.open,resKeyOpenAll.close,currenUserV2.id,
                                dealSelected.status, "",
                                If(IsBlank(dealSelected), dataResposneDealDraft.id, dealSelected.id),
                                "<a href='" & linkToApp & "?restartApp=true&screen=detail-ma&action=approve-ma&maId=" &
                                If(IsBlank(dealSelected), dataResposneDealDraft.id, dealSelected.id) & "'>Link to item</a>",
                                currenUserV2.name, currenUserV2.email, currenUserV2.internal_email,
                                false, // is diff state
                                If(IsBlank(dealSelected) || IsBlank(dealSelected.is_request_edit), false, dealSelected.is_request_edit),appProperty, emailFromConfix,
                                If(dealSelected.status = "REQUEST_EDIT", If(IsBlank(DetailIRReason_Input_4.Text), "", DetailIRReason_Input_4.Text), "")));
                        ,
                        Set(IsError, true); Set(NoticationText,"This deal has been processed by another user, please reload this page."); UpdateContext({ShowNotification: true});
                    );
                ,
                    UpdateContext({ShowNotification: false});
                    Set(isSubmited, true);
                    Set(isValid, false);
                    Set(dealStage, If(IsBlank(dealSelected) || IsBlank(dealSelected.deal_stage), "Evaluating", dealSelected.deal_stage));
                    // Set deal status and main procedures
                    If( IsBlank(dealSelected) || (dealSelected.status = "NEW_LEAD_CREATION" && !dealSelected.is_request_edit && !dealSelected.is_revise),
                        Set(dealStatusToSend, "Draft"); Set(mainProceduresToSend, "Deal advisory opportunity");,
                        dealSelected.status = "NEW_LEAD_CREATION" && dealSelected.is_request_edit,
                        Set(dealStatusToSend, "Pending approval"); Set(mainProceduresToSend, "Signing mandate");,
                        dealSelected.status = "NEW_LEAD_CREATION" && !dealSelected.is_request_edit && dealSelected.is_revise,
                        Set(dealStatusToSend, "Pending approval"); Set(mainProceduresToSend, "Mandate Approval");,
                        dealSelected.status = "DEAL_ADVISORY",
                        Set(dealStatusToSend, "Pending approval"); Set(mainProceduresToSend, "Mandate Approval");,
                        dealSelected.status = "PENDING_MANDATE_APPROVAL" && !IsBlank(approveAction),
                        Set(dealStatusToSend, Switch(approveAction, "APPROVE", "Draft", "REVISE", "Revised", "REJECT", "Rejected", "")); Set(mainProceduresToSend, If(approveAction = "APPROVE", "Signing mandate", "Mandate Approval"));,
                        dealSelected.status = "PENDING_SERVICE_CONTRACT",
                        Set(dealStatusToSend, "Pending approval"); Set(mainProceduresToSend, "Signing mandate");,
                        dealSelected.status = "PENDING_REVIEW_DEAL_OWNER" && !IsBlank(approveAction),
                        Set(dealStatusToSend, Switch(approveAction, "APPROVE", "Pending approval", "REVISE", "Revised", "REJECT", "Rejected", "")); Set(mainProceduresToSend, "Signing mandate");,
                        dealSelected.status = "PENDING_REVIEW_HEAD_DIVISION" && !IsBlank(approveAction),
                        Set(dealStatusToSend, Switch(approveAction, "APPROVE", "Pending approval", "REVISE", "Revised", "REJECT", "Rejected", "")); Set(mainProceduresToSend, "Signing mandate");,
                        dealSelected.status = "PENDING_APPROVE_CEO" && !IsBlank(approveAction),
                        Set(dealStatusToSend, Switch(approveAction, "APPROVE", "Draft", "REVISE", "Revised", "REJECT", "Rejected", ""));
                        Set(mainProceduresToSend, Switch(approveAction, "APPROVE", "Deal execution", "Signing mandate"));
                        If(approveAction = "APPROVE",  Set(dealStage, "Execution")),
                        dealSelected.status in ["PENDING_EXCUTION_SIGNING_CLOSING"],
                        Set(dealStatusToSend, "Draft"); Set(mainProceduresToSend, "Signing of definitive agreements");,
                        dealSelected.status in ["PENDING_SIGNING"],
                        Set(dealStatusToSend, "Draft"); Set(mainProceduresToSend, "Closing");,
                        dealSelected.status in ["PENDING_CLOSING"],
                        Set(dealStatusToSend, "Closed"); Set(mainProceduresToSend, "Closing");,
                        dealSelected.status = "DONE",
                        Set(dealStatusToSend, "Pending request edit"); Set(mainProceduresToSend, "Closing");,
                        dealSelected.status = "REQUEST_EDIT",
                        Set(dealStatusToSend, Switch(approveAction, "APPROVE", "Approved request edit", "REJECT", "Closed", ""));
                        Set(mainProceduresToSend, Switch(approveAction, "APPROVE", "Closing", "REJECT", "Closed", ""));,
                        dealSelected.status = "APPROVED_REQUEST_EDIT",
                        Set(dealStatusToSend, "Pending review deal owner"); Set(mainProceduresToSend, "Closing");,
                        dealSelected.status = "SUBMIT_REQUEST_EDIT",
                        Set(dealStatusToSend, "Closed"); Set(mainProceduresToSend, "Closing");,
                        dealSelected.status = "REVISED",
                        Set(dealStatusToSend, "Pending approval"); Set(mainProceduresToSend, "Signing mandate");,
                        dealSelected.status = "PENDING_APPROVE_CEO" && !IsBlank(approveAction) && dealSelected.is_ceo_approve && dealSelected.is_request_edit,
                        Set(dealStatusToSend, Switch(approveAction, "APPROVE", "Closed", "REVISE", "Revised", "REJECT", "Rejected", ""));
                        Set(mainProceduresToSend, Switch(approveAction, "APPROVE", "Closing", "Signing mandate"));,
                        // Default
                        Set(dealStatusToSend, dealSelected.deal_status); Set(mainProceduresToSend, dealSelected.deal_main_procedure);
                    );
                    If(!IsBlank(dealSelected) && dealSelected.status = "PENDING_SIGNING" && approveAction = "APPROVE", Set(dealStage, "Closing"));
                    If(!IsBlank(dealSelected) && approveAction = "REJECT" && dealSelected.is_request_edit, Set(dealStatusToSend, "Closed"); Set(mainProceduresToSend, "Closing"););
                    If(!IsBlank(dealSelected) && dealSelected.is_request_edit, Set(dealStage, "Closing"); Set(mainProceduresToSend, "Closing"));
                    If(isJumpCloseDeal, Set(dealStatusToSend, "Closed"));
                    If(dealStatusToSend = "Closed", Set(mainProceduresToSend, "Closing"); Set(dealStage, "Closing"));
                    If(mainProceduresToSend = "Closing", Set(dealStage, "Closing"));
                    If(!IsBlank(dealSelected) && dealSelected.is_request_edit, Set(mainProceduresToSend, "Closing"); Set(dealStage, "Closing"));
                
                    // Check validate here
                    If(CurrentDealSelectedStep = 1,
                        If( IsBlank(ClientName_Input_MAStep1.Text), Set(IsError, true); Set(NoticationText,"Client name is required!"); UpdateContext({ShowNotification: true}),
                            IsBlank(DealType1DropDown.Text), Set(IsError, true); Set(NoticationText,"Deal type 1 is required!"); UpdateContext({ShowNotification: true}),
                            IsBlank(DealType2DropDown.Text), Set(IsError, true); Set(NoticationText,"Deal type 2 is required!"); UpdateContext({ShowNotification: true}),
                            IsBlank(DealType3DropDown.Text), Set(IsError, true); Set(NoticationText,"Deal type 3 is required!"); UpdateContext({ShowNotification: true}),
                            Set(isValid, true);
                        )
                    );
                    If(CurrentDealSelectedStep = 2,
                        If( IsBlank(input_deal_value.Text), Set(IsError, true); Set(NoticationText,"Deal value is required!"); UpdateContext({ShowNotification: true}),
                            IsBlank(input_Probability.Text), Set(IsError, true); Set(NoticationText,"Probability of Success (%) is required!"); UpdateContext({ShowNotification: true}),
                            IsBlank(input_Transaction.Text), Set(IsError, true); Set(NoticationText,"Transaction fee is required!"); UpdateContext({ShowNotification: true}),
                            IsBlank(input_Retainer.Text), Set(IsError, true); Set(NoticationText,"Retainer fee is required!"); UpdateContext({ShowNotification: true}),
                            IsBlank(input_Success_fee.Text), Set(IsError, true); Set(NoticationText,"% Success fee is required!"); UpdateContext({ShowNotification: true}),
                            IsBlank(input_Ugency.Text), Set(IsError, true); Set(NoticationText,"Ugency is required!"); UpdateContext({ShowNotification: true}),
                            IsBlank(input_Importance.Text), Set(IsError, true); Set(NoticationText,"Importance is required!"); UpdateContext({ShowNotification: true}),
                            IsBlank(DatePicker_Expected_closing_time.SelectedDate), Set(IsError, true); Set(NoticationText,"Expected closing time is required!"); UpdateContext({ShowNotification: true}),
                            IsBlank(MA_EngagementRiskDropdown.Text), Set(IsError, true); Set(NoticationText,"Engagement risk is required!"); UpdateContext({ShowNotification: true}),
                            IsBlank(MA_ApprovalOnClientDropdown.Text), Set(IsError, true); Set(NoticationText,"Approval on Client Acceptance is required!"); UpdateContext({ShowNotification: true}),
                            IsBlank(MA_ApprovalOnEnagementDropdown.Text), Set(IsError, true); Set(NoticationText,"Approval on Engagement Acceptance is required!"); UpdateContext({ShowNotification: true}),
                            Set(isValid, true);
                        )
                    );
                    If(RoundDown(CurrentDealSelectedStep, 0) = 4 && dealSelected.status <> "PENDING_CONTRACT_DATE", Set(isValid, true));
                    If(!IsBlank(dealSelected) && dealSelected.status = "PENDING_CONTRACT_DATE",
                        If(IsBlank(ContractDate.SelectedDate),
                        Set(IsError, true); Set(NoticationText,"Contract date is required!"); UpdateContext({ShowNotification: true}),
                        Set(isValid, true))
                    );
                    If(CurrentStep in [3, 5, 6, 7], Set(isValid, true));
                    If(!IsBlank(dealSelected) && dealSelected.status = "DONE", Set(isValid, true));
                    // end validate
                
                    If(isValid,
                        // files
                        ClearCollect(listAttToSend, []);
                        ClearCollect(listAtt, AddColumns(att_12.Attachments, title, "step231"), AddColumns(att_13.Attachments, title, "step232"), AddColumns(att_16.Attachments, title, "step22"), AddColumns(att_Step4_1.Attachments, title, "step4"), AddColumns(att_Step5.Attachments, title, "step5"), AddColumns(att_Step6.Attachments, title, "step6"), AddColumns(att_Step7.Attachments, title, "step7"));
                        ForAll(listAtt, Collect(listAttToSend,{file_name: Text(Now(), "ddmmyyyy_hhmmss_") & ThisRecord.Name,title: ThisRecord.'data-ADB4D7A662F548B49FAC2B986E348A1Btitle',date: Text(Now(), "yyyy-mm-dd hh:mm:ss"),by: currenUserV2.id,size: ""}));
                
                        // Save files to blob
                        Clear(listAttachFileToSave);
                        Clear(listAttachFileNonPrefix);
                        Clear(colAttachments);
                        ForAll(listAtt As att,
                        Collect(colAttachments,{Id:"",Date: nowV1,By: User().FullName,Name: att.Name, file_name: att.Name,NameGroup: att.Name,Value: att.Value,File: {file: {contentBytes: att.Value,name: att.Name, file_name: Text(Now(), "ddmmyyyy_hhmmss_") & att.Name}},IsDeleted:false,Size: ""}));
                        ClearCollect(GroupedItems,GroupBy(colAttachments,NameGroup,Group));
                        ForAll(GroupedItems,Collect(listAttachFileNonPrefix,First(ThisRecord.Group)); );
                        UpdateIf(listAttachFileNonPrefix, true, {Name: Text(Now(), "ddmmyyyy_hhmmss_") & Name, file_name: Text(Now(), "ddmmyyyy_hhmmss_") & Name});
                        Collect(listAttachFileToSave,listAttachFileNonPrefix);
                
                        // Reset attachment
                        Reset(att_Step7); Reset(att_Step6); Reset(att_Step5); Reset(att_Step4_1); Reset(att_16); Reset(att_12); Reset(att_13);
                
                        // notes
                        ClearCollect(NoteDataToSend, []);
                        ClearCollect(NoteData,
                            If(!IsEmpty(DataNoteList),
                                Filter(DataNoteList, isSelected && Len(Trim(note)) > 0 &&
                                    If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", true, Trim(note) <> Trim(note_old))),
                                Filter(noteStep22Data, isSelected && Len(Trim(note)) > 0 &&
                                    If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", true, Trim(note) <> Trim(note_old)))
                            ),
                            If(!IsEmpty(DataNoteListAtt),
                                Filter(DataNoteListAtt, isSelected && Len(Trim(note)) > 0 &&
                                    If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", true, Trim(note) <> Trim(note_old))),
                                Filter(noteStep23Data, isSelected && Len(Trim(note)) > 0 &&
                                    If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", true, Trim(note) <> Trim(note_old)))
                            ),
                            If(!IsEmpty(DataNoteMandate),
                                Filter(DataNoteMandate, isSelected && Len(Trim(note)) > 0 &&
                                    If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", true, Trim(note) <> Trim(note_old))),
                                Filter(noteStep41Data, isSelected && Len(Trim(note)) > 0 &&
                                    If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", true, Trim(note) <> Trim(note_old)))
                            ),
                            If(!IsEmpty(DataNoteExecution),
                                Filter(DataNoteExecution, isSelected && Len(Trim(note)) > 0
                                    && If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", true, Trim(note) <> Trim(note_old))),
                                Filter(noteStep5Data, isSelected && Len(Trim(note)) > 0 &&
                                    If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", true, Trim(note) <> Trim(note_old)))
                            ),
                            If(!IsEmpty(DataNoteAgreements),
                                Filter(DataNoteAgreements, isSelected && Len(Trim(note)) > 0 &&
                                    If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", true, Trim(note) <> Trim(note_old))),
                                Filter(noteStep6Data, isSelected && Len(Trim(note)) > 0 &&
                                    If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", true, Trim(note) <> Trim(note_old)))
                            ),
                            If(!IsEmpty(DataNoteClosing),
                                Filter(DataNoteClosing, isSelected && Len(Trim(note)) > 0 &&
                                    If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", true, Trim(note) <> Trim(note_old))),
                                Filter(noteStep7Data, isSelected && Len(Trim(note)) > 0 &&
                                    If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", true, Trim(note) <> Trim(note_old)))
                            )
                        );
                        ForAll(NoteData, Collect(NoteDataToSend,{idNote: "",LabelNotedBy: ThisRecord.created_by,location: ThisRecord.location,screen: ThisRecord.screen,note: ThisRecord.note}));
                
                        // JSON data to send
                        Set(dealInfo,{
                            company_id: If(IsBlank(clientNameSelectedValue.id_company),"",clientNameSelectedValue.id_company),
                            deal_name: "-"&ClientName_Input_MAStep1.Text,
                            deal_type_1: If(IsBlank(dealType1SelectedValue), "", dealType1SelectedValue),
                            deal_type_2: If(IsBlank(dealType2SelectedValue), "", dealType2SelectedValue),
                            deal_type_3: If(IsBlank(dealType3SelectedValue), "", dealType3SelectedValue),
                            engagement_risk: If(IsBlank(MA_EngagementRiskDropdown.Text), "",MA_EngagementRiskDropdown.Text),
                            ugency: If(IsBlank(input_Ugency.Text), "", input_Ugency.Text),
                            importance: If(IsBlank(input_Importance.Text), "", input_Importance.Text),           
                            probability_of_success: If(IsBlank(input_Probability.Text), "", input_Probability.Text),
                            deal_value: If(IsBlank(input_deal_value.Text), "", ""&Value(Substitute(input_deal_value.Text, ",", ""))&""),
                            conclusions_on_client_acceptance: "" ,
                            approval_on_client_acceptance: If(IsBlank(MA_ApprovalOnClientDropdown.Text), "", MA_ApprovalOnClientDropdown.Text) ,
                            conclusions_on_engagement_acceptance:"" ,
                            approval_on_engagement_acceptance: If(IsBlank(MA_ApprovalOnEnagementDropdown.Text), "", MA_ApprovalOnEnagementDropdown.Text) ,
                            transaction_fee: If(IsBlank(input_Probability.Text), "", ""&Value(Substitute(input_Transaction.Text, ",", ""))&""),
                            percent_success_fee: If(IsBlank(input_Success_fee.Text), "", input_Success_fee.Text),
                            retainer_fee: If(IsBlank(input_Retainer.Text), "", ""&Value(Substitute(input_Retainer.Text, ",",""))&""),
                            percentage_of_stock_for_sale:"" ,
                            deal_stage: dealStage,
                            deal_status: dealStatusToSend,
                            deal_main_procedure: mainProceduresToSend,
                            deal_owner: If(IsBlank(dealSelected) || IsBlank(dealSelected.deal_owner), currenUserV2.id, dealSelected.deal_owner),
                            mentor: If(IsBlank(dealSelected) || IsBlank(dealSelected.mentor), "", dealSelected.mentor),
                            observer: If(IsBlank(dealSelected) || IsBlank(dealSelected.observer), "", dealSelected.observer),
                            actual_closing_time: If(IsBlank(dealSelected) || IsBlank(dealSelected.actual_closing_time), "", dealSelected.actual_closing_time),
                            contract_date: Text(ContractDate.SelectedDate, "yyyy-mm-dd hh:mm:ss"),
                            expected_closing_time: Text(DatePicker_Expected_closing_time.SelectedDate, "yyyy-mm-dd hh:mm:ss"),
                            divestment_motive: If(IsBlank(dealSelected) || IsBlank(dealSelected.divestment_motive), "", dealSelected.divestment_motive),
                            state: If(approveAction = "REJECT", "CLOSE", If(IsBlank(dealSelected) || IsBlank(dealSelected.state), "ACTIVE", dealSelected.state)),
                            stage: If(IsBlank(dealSelected) || IsBlank(dealSelected.stage), "Assessment", dealSelected.stage),
                            status: If(IsBlank(dealSelected) || IsBlank(dealSelected.status), "DEAL_ADVISORY", dealSelected.status),
                            share: If(IsBlank(dealSelected) || IsBlank(dealSelected.share), "Restricted", dealSelected.share),
                            created_by: currenUserV2.id,
                            is_request_edit: If(IsBlank(dealSelected) || IsBlank(dealSelected.is_request_edit), "false", dealSelected.is_request_edit),
                            comment_mandate: If(IsBlank(TextInputStep3.Text), "", TextInputStep3.Text),
                            created_comment_date: If(IsBlank(dealSelected) || IsBlank(dealSelected.created_comment_date), Text(Now(), "yyyy-mm-dd hh:mm:ss"), dealSelected.created_comment_date)
                        });
                        Set(jsonToSend, {deal_info: dealInfo,attach_insert: AddColumns(listAttToSend, FilePath, urlUploadMAHead & file_name, Container, bucketMAAttach),attach_delete: listDeleteMA,noteList: NoteDataToSend});
                
                        // Call API
                        Set(isLoading, true);
                        Set(dataResposneDealDraft,'TVS->Deal_Information-Insert-Update' .Run(JSON(jsonToSend, JSONFormat.IndentFour),If(IsBlank(dealSelected),"0",dealSelected.id),resKeyOpenAll.open,resKeyOpenAll.close,currenUserV2.id,"",
                        If(IsBlank(approveRejectMARes.status) || approveRejectMARes.status = "STATUS_EXIST", If(IsBlank(dealSelected.status),"",dealSelected.status), approveRejectMARes.status),
                        IsBlank(approveRejectMARes.status) || approveRejectMARes.status = "STATUS_EXIST", // isSubmit
                        false,true,false,false, If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", "", "1,2,3,4")));
                        Set(isLoading, false);
                        If(dataResposneDealDraft.status = "200" && (IsBlank(approveRejectMARes.status) || approveRejectMARes.status = "STATUS_EXIST"),
                            // right notification on web
                            If(IsBlank(approveRejectMARes.status) || approveRejectMARes.status = "STATUS_EXIST",
                                Set(ShowNotificationCheck, If(!IsBlank(dealSelected),If(!IsBlank(dealSelected) && dealSelected.status = "REQUEST_EDIT", "APPROVED_SUCCESS",If(Self.Text = "Done", "CLOSED_SUCCESS", "UPDATED_SUCCESS")),"CREATED_SUCCESS")));
                            If(IsBlank(dealSelected) || (dealSelected.status = "NEW_LEAD_CREATION" && isOwner && !dealSelected.is_revise),
                                // Send email and noti
                                Set(sendMAEmailRes, 'TVS->SendNotiEmail-Process2'.Run(
                                    resKeyOpenAll.open,resKeyOpenAll.close,currenUserV2.id,
                                    If(IsBlank(dealSelected), "NEW_LEAD_CREATION", dealSelected.status),
                                    Switch(approveAction, "APPROVE", "APPROVE", "REVISE", "REVISE", "REJECT", "REJECT", "SUBMIT"),
                                    If(IsBlank(dealSelected), dataResposneDealDraft.id, dealSelected.id),
                                    "<a href='" & linkToApp & "?restartApp=true&screen=detail-ma&action=approve-ma&maId=" &
                                    If(IsBlank(dealSelected), dataResposneDealDraft.id, dealSelected.id) & "'>Link to item</a>",
                                    currenUserV2.name, currenUserV2.email, currenUserV2.internal_email,
                                    false, // is diff state
                                    If(IsBlank(dealSelected) || IsBlank(dealSelected.is_request_edit), false, dealSelected.is_request_edit),appProperty, emailFromConfix,
                                    If(dealSelected.status = "REQUEST_EDIT", If(IsBlank(DetailIRReason_Input_4.Text), "", DetailIRReason_Input_4.Text), "")));
                                Set(approveAction, Blank());
                                // Refresh data
                                Set(isSubmited, false);
                                ClearCollect(dealSelected1, 'TVS->FindByIDDeal'.Run(resKeyOpenAll.open,resKeyOpenAll.close,dataResposneDealDraft.id));
                                Set(dealSelected, First(dealSelected1));
                
                                Set(isCreateUser, "CREATE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action));
                                Set(isCEO, "CEO_APPROVE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action));
                                Set(isIBDrirector, (IsBlank(dealSelected) || !(dealSelected.status in ["CLOSED"])) && "IB_DIRECTOR_APPROVE" in LookUp(currenUserV2.permissionList, process_code = "Process2", action));
                                Set(isApproveStatus, dealSelected.status in ["PENDING_MANDATE_APPROVAL", "PENDING_REVIEW_DEAL_OWNER", "PENDING_REVIEW_HEAD_DIVISION", "PENDING_APPROVE_CEO", "REQUEST_EDIT"]);
                                Set(isParticitatingUser, IsBlank(dealSelected) || currenUserV2.id in listDealSupport.employee_id || currenUserV2.id = dealSelected.deal_owner || currenUserV2.id = dealSelected.mentor);
                                Set(isOwner, currenUserV2.id = dealSelected.deal_owner);
                                Set(isOwnerOrSupport, currenUserV2.id = dealSelected.deal_owner || currenUserV2.id in Filter(listDealSupport, type = "deal_support").employee_id);
                
                                Select(SetPercentVariables);
                                // Step
                                Set(CurrentDealSelectedStep, Switch(dealSelected.status,
                                    "NEW_LEAD_CREATION", 1, "DEAL_ADVISORY", 2, "REVISED", 2, "PENDING_MANDATE_APPROVAL", 3,
                                    "PENDING_SERVICE_CONTRACT", 4.1, "PENDING_REVIEW_DEAL_OWNER", 4.2, "PENDING_REVIEW_HEAD_DIVISION", 4.3, "PENDING_APPROVE_CEO", 4.4,
                                    "PENDING_CONTRACT_DATE", 4, "PENDING_EXCUTION_SIGNING_CLOSING", 5, "PENDING_SIGNING", 6, "PENDING_CLOSING", 7, "DONE", 8, "CLOSED", 1, 1));
                                Set(CurrentStep, If(CurrentDealSelectedStep = 8, 1, RoundDown(CurrentDealSelectedStep, 0)));,
                
                                Navigate(MA);
                                ForAll(listAttachFileToSave,If(IsBlank(ThisRecord.Id) && !ThisRecord.IsDeleted,AzureBlobStorage.CreateFile(bucketMAAttach,ThisRecord.file_name,ThisRecord.Value)));
                                // Send email and noti
                                Set(sendMAEmailRes, 'TVS->SendNotiEmail-Process2'.Run(
                                    resKeyOpenAll.open,resKeyOpenAll.close,currenUserV2.id,
                                    If(IsBlank(dealSelected), "NEW_LEAD_CREATION", dealSelected.status),
                                    Switch(approveAction, "APPROVE", "APPROVE", "REVISE", "REVISE", "REJECT", "REJECT", "SUBMIT"),
                                    If(IsBlank(dealSelected), dataResposneDealDraft.id, dealSelected.id),
                                    "<a href='" & linkToApp & "?restartApp=true&screen=detail-ma&action=approve-ma&maId=" &
                                    If(IsBlank(dealSelected), dataResposneDealDraft.id, dealSelected.id) & "'>Link to item</a>",
                                    currenUserV2.name, currenUserV2.email, currenUserV2.internal_email,
                                    false, // is diff state
                                    If(IsBlank(dealSelected) || IsBlank(dealSelected.is_request_edit), false, dealSelected.is_request_edit),appProperty, emailFromConfix,
                                    If(dealSelected.status = "REQUEST_EDIT", If(IsBlank(DetailIRReason_Input_4.Text), "", DetailIRReason_Input_4.Text), "")));
                                Set(approveAction, Blank());
                            );
                        , dataResposneDealDraft.status = "200" && !IsBlank(approveRejectMARes.status),
                            Set(ShowNotificationCheck, Switch(approveAction, "APPROVE","APPROVED_SUCCESS", "REJECT", "REJECTED_SUCCESS", "REVISED_SUCCESS"));
                            Navigate(MA);
                            ForAll(listAttachFileToSave,If(IsBlank(ThisRecord.Id) && !ThisRecord.IsDeleted,AzureBlobStorage.CreateFile(bucketMAAttach,ThisRecord.file_name,ThisRecord.Value)));
                            Set(approveAction, Blank());
                        ,
                            If(IsBlank(approveRejectMARes.status) || approveRejectMARes.status = "STATUS_EXIST",
                                Set(approveAction, Blank());
                                Set(IsError, true); Set(NoticationText,"This deal has been processed by another user, please reload this page.");
                                UpdateContext({ShowNotification: true});
                            );
                        );
                    );
                );
                
                If(!IsBlank(dealSelected) && dataResposneDealDraft.status = "200" && (IsBlank(approveRejectMARes.status) || approveRejectMARes.status = "STATUS_EXIST"),
                    // Send email and noti
                    If(!IsBlank(dealSelected) && !IsBlank(oldState) && !IsBlank(dealSelected.state) && (oldState <> dealSelected.state),
                        Set(sendMAEmailRes, 'TVS->SendNotiEmail-Process2'.Run(
                            resKeyOpenAll.open,resKeyOpenAll.close,currenUserV2.id, dealSelected.status,
                            "SAVE", dealSelected.id,
                            "<a href='" & linkToApp & "?restartApp=true&screen=detail-ma&action=approve-ma&maId=" & dealSelected.id & "'>Link to item</a>",
                            currenUserV2.name, currenUserV2.email, currenUserV2.internal_email,
                            oldState <> dealSelected.state, // is diff state
                            If(IsBlank(dealSelected) || IsBlank(dealSelected.is_request_edit), false, dealSelected.is_request_edit), appProperty, emailFromConfix, "")
                        );
                    );
                    Set(oldState, If(IsBlank(dealSelected), "", dealSelected.state));
                );
                //Set(DealDetailTab, If(CurrentStep = 4, 1, 2));
                Set(isJumpCloseDeal, false);
            PaddingLeft: =30
            PressedColor: =Self.Color
            PressedFill: =Self.Fill
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            Size: =10.5
            Text: |-
                =If(App.Width > 800,
                    If( !IsBlank(dealSelected) && dealSelected.status = "DONE",
                        "Request edit",
                        IsBlank(dealSelected) || !(dealSelected.status = "PENDING_CLOSING" && CurrentStep = 7),
                        "Submit",
                        "Done"),
                    "")
            Visible: |-
                =If(!IsBlank(dealSelected) && !dealSelected.is_request_edit && dealSelected.is_revise && dealSelected.status in ["NEW_LEAD_CREATION"] && CurrentStep in [1, 2],
                    isOwnerOrSupport || isIBDrirector,
                
                
                    If( !IsBlank(dealSelected) && dealSelected.status in ["REVISED"], CurrentStep < 5 && isOwnerOrSupport,
                        !IsBlank(dealSelected) && dealSelected.status in ["DONE"], isOwnerOrSupport, //isOwnerOrSupport && !isIBDrirector
                        !IsBlank(dealSelected) && dealSelected.status in ["REQUEST_EDIT"], false,
                        !IsBlank(dealSelected) && dealSelected.status in ["CLOSED"], false,
                        !IsBlank(dealSelected) && dealSelected.status in ["NEW_LEAD_CREATION"] && dealSelected.is_request_edit, isOwnerOrSupport,
                        If(CurrentStep = 7, (isOwner || isIBDrirector), RoundDown(CurrentStep, 0) = RoundDown(CurrentDealSelectedStep, 0)) &&
                        !btnApprove_MA.Visible &&
                        (If(IsBlank(dealSelected), isCreateUser, isCreateUser && isOwnerOrSupport) || isIBDrirector) &&
                        (IsBlank(dealSelected) || !(dealSelected.status in ["PENDING_MANDATE_APPROVAL", "PENDING_REVIEW_DEAL_OWNER", "PENDING_REVIEW_HEAD_DIVISION", "PENDING_APPROVE_CEO"])) &&
                        (If(dealSelected.status in ["PENDING_EXCUTION_SIGNING_CLOSING", "PENDING_SIGNING", "PENDING_CLOSING"],
                            RoundDown(CurrentStep, 0) = RoundDown(CurrentDealSelectedStep, 0) && CurrentStep in [5,6,7] && (isOwnerOrSupport || isIBDrirector), true ))
                    ) && If(!IsBlank(dealSelected) && !IsBlank(dealSelected.is_request_edit) && dealSelected.is_request_edit, true, CurrentDealSelectedStep >= CurrentStep)
                )
            Width: =If(App.Width > 800, If(Self.Text = "Request edit", 140, 110), 40)
            X: =Parent.Width - Self.Width - If(App.Width > 800, 20, 10)
            Y: =SubHeaderBg_6.Y + If(App.Width <= 600 && StatusDropDown.Visible, 60, 10)
            ZIndex: =19

        btnSubmitIcon_4 As htmlViewer:
            Font: =Font.Arial
            HtmlText: |-
                =If(!IsBlank(dealSelected) && dealSelected.status in ["PENDING_CLOSING"],
                "<div style=""width: 40px; height: 38px; display: flex; justify-content: center; align-items: center; cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                  <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M21.546 5.11155C21.8272 5.39285 21.9852 5.77431 21.9852 6.17205C21.9852 6.5698 21.8272 6.95126 21.546 7.23255L10.303 18.4756C10.1544 18.6242 9.97805 18.7421 9.7839 18.8225C9.58976 18.9029 9.38167 18.9443 9.17153 18.9443C8.96138 18.9443 8.75329 18.9029 8.55915 18.8225C8.365 18.7421 8.1886 18.6242 8.04003 18.4756L2.45403 12.8906C2.31076 12.7522 2.19649 12.5867 2.11787 12.4037C2.03926 12.2207 1.99788 12.0238 1.99615 11.8247C1.99442 11.6255 2.03237 11.428 2.10779 11.2436C2.18322 11.0593 2.29459 10.8918 2.43543 10.751C2.57627 10.6101 2.74375 10.4987 2.92809 10.4233C3.11244 10.3479 3.30996 10.3099 3.50913 10.3117C3.7083 10.3134 3.90513 10.3548 4.08813 10.4334C4.27114 10.512 4.43666 10.6263 4.57503 10.7696L9.17103 15.3656L19.424 5.11155C19.5633 4.97216 19.7287 4.86159 19.9108 4.78615C20.0928 4.71071 20.288 4.67188 20.485 4.67188C20.6821 4.67188 20.8772 4.71071 21.0593 4.78615C21.2413 4.86159 21.4067 4.97216 21.546 5.11155Z"" fill=""#FEFEFE""/>
                </svg></div>",
                !IsBlank(dealSelected) && dealSelected.status in ["DONE"],
                "<div style=""width: 40px; height: 38px; display: flex; justify-content: center; align-items: center; cursor: pointer""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg""><g clip-path=""url(#clip0_278_696)""><path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M5 2C4.46957 2 3.96086 2.21071 3.58579 2.58579C3.21071 2.96086 3 3.46957 3 4V19C3 19.5304 3.21071 20.0391 3.58579 20.4142C3.96086 20.7893 4.46957 21 5 21H8V19H5V4H17V8H19V4C19 3.46957 18.7893 2.96086 18.4142 2.58579C18.0391 2.21071 17.5304 2 17 2H5ZM8 7C7.73478 7 7.48043 7.10536 7.29289 7.29289C7.10536 7.48043 7 7.73478 7 8C7 8.26522 7.10536 8.51957 7.29289 8.70711C7.48043 8.89464 7.73478 9 8 9H12C12.2652 9 12.5196 8.89464 12.7071 8.70711C12.8946 8.51957 13 8.26522 13 8C13 7.73478 12.8946 7.48043 12.7071 7.29289C12.5196 7.10536 12.2652 7 12 7H8ZM15.949 10.811C16.5132 10.256 17.2739 9.94648 18.0653 9.9498C18.8567 9.95311 19.6147 10.269 20.1743 10.8287C20.7338 11.3884 21.0496 12.1465 21.0527 12.9379C21.0558 13.7293 20.7461 14.4899 20.191 15.054L14.535 20.711C14.3475 20.8985 14.0932 21.0039 13.828 21.004H10.999C10.7338 21.004 10.4794 20.8986 10.2919 20.7111C10.1044 20.5236 9.999 20.2692 9.999 20.004V17.175C9.99906 16.9098 10.1045 16.6555 10.292 16.468L15.949 10.811ZM18.777 12.225C18.5895 12.0375 18.3352 11.9322 18.07 11.9322C17.8048 11.9322 17.5505 12.0375 17.363 12.225L18.777 13.64C18.87 13.5471 18.9437 13.4368 18.9941 13.3154C19.0444 13.194 19.0703 13.0639 19.0703 12.9325C19.0703 12.8011 19.0444 12.671 18.9941 12.5496C18.9437 12.4282 18.87 12.3179 18.777 12.225ZM17.363 15.054L15.949 13.64L11.999 17.59V19.004H13.413L17.363 15.054Z"" fill=""#FEFEFE""/></g><defs><clipPath id=""clip0_278_696""><rect width=""24"" height=""24"" fill=""white""/></clipPath></defs></svg></div>",
                
                "<div style=""width: 40px; height: 38px; display: flex; justify-content: center; align-items: center; cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""25"" height=""24"" viewBox=""0 0 25 24"" fill=""none"">
                  <path d=""M5 2.25V21.75H20V7.2L19.775 6.975L15.275 2.475L15.05 2.25H5ZM6.5 3.75H14V8.25H18.5V20.25H6.5V3.75ZM15.5 4.8L17.45 6.75H15.5V4.8ZM12.5 9.75L9.5 12.75H11.75V16.5H13.25V12.75H15.5L12.5 9.75ZM9.5 17.25V18.75H15.5V17.25H9.5Z"" fill=""#FEFEFE""/>
                </svg></div>")
            OnSelect: =Select(btnSubmit_4);
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Visible: =btnSubmit_4.Visible
            Width: =40
            X: =btnSubmit_4.X + If(App.Width > 800, 7, 0)
            Y: =btnSubmit_4.Y
            ZIndex: =20

        btnDelete_4 As button:
            BorderColor: =RGBA(219, 219, 219, 1)
            BorderThickness: =1
            DisabledFill: =Self.Fill
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderThickness: =0
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            HoverColor: =Self.Color
            HoverFill: =Self.Fill
            OnSelect: |-
                =Set(idProposalDelete, If(IsBlank(proposalInfoEdit), IdCreateProposal, proposalInfoEdit.id));
                Set(isShowPopupDelete, true);
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingTop: =0
            PressedColor: =Self.Color
            PressedFill: =Self.Fill
            RadiusBottomLeft: =5
            RadiusBottomRight: =5
            RadiusTopLeft: =5
            RadiusTopRight: =5
            Size: =10.5
            Text: =""
            Tooltip: ="Close this deal"
            Visible: =false
            Width: =40
            X: =If(SaveButton_6.Visible, SaveButton_6.X, btnSubmit_4.X) - Self.Width - 8
            Y: =btnSubmit.Y
            ZIndex: =21

        DeleteIcon_4 As htmlViewer:
            Font: =Font.Arial
            Height: =50
            HtmlText: |-
                ="<div style=""cursor: pointer"">
                <svg width=""40"" height=""40"" viewBox=""0 0 40 40"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                <rect x=""0.5"" y=""0.5"" width=""39"" height=""39"" rx=""4.5"" stroke=""#525252""/>
                <path d=""M18.3647 20.3638L20.5882 18.1402L22.8118 20.3638L23.5402 19.6353L21.3167 17.4118L23.5402 15.1882L22.8118 14.4598L20.5882 16.6833L18.3647 14.4598L17.6362 15.1882L19.8598 17.4118L17.6362 19.6353L18.3647 20.3638ZM14.8865 24.8235C14.3994 24.8235 13.9928 24.6605 13.6667 24.3344C13.3399 24.0075 13.1765 23.6006 13.1765 23.1135V11.71C13.1765 11.2229 13.3399 10.8164 13.6667 10.4902C13.9928 10.1634 14.3994 10 14.8865 10H26.29C26.7771 10 27.1836 10.1634 27.5098 10.4902C27.8366 10.8164 28 11.2229 28 11.71V23.1135C28 23.6006 27.8369 24.0075 27.5108 24.3344C27.184 24.6605 26.7771 24.8235 26.29 24.8235H14.8865ZM11.71 28C11.2229 28 10.8164 27.8369 10.4902 27.5108C10.1634 27.184 10 26.7771 10 26.29V13.8276H11.0588V26.29C11.0588 26.4524 11.1266 26.6016 11.2621 26.7379C11.3984 26.8734 11.5476 26.9412 11.71 26.9412H24.1724V28H11.71Z"" fill=""#6D6D6D""/>
                </svg>
                </div>"
            OnSelect: =Select(btnDelete_4)
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =0
            PaddingTop: =0
            Tooltip: ="Cancel this deal"
            Visible: |-
                =!IsBlank(dealSelected) && CurrentDealSelectedStep > 1 &&
                If(CurrentStep in [5, 6, 7], false, RoundDown(CurrentStep, 0) = RoundDown(CurrentDealSelectedStep, 0)) &&
                If(dealSelected.status in ["PENDING_MANDATE_APPROVAL", "PENDING_REVIEW_HEAD_DIVISION", "PENDING_EXCUTION_SIGNING_CLOSING"], isIBDrirector,
                dealSelected.status in ["DEAL_ADVISORY"], (isIBDrirector || isOwnerOrSupport), false) &&
                !StatusDropDown.Visible &&
                (IsBlank(dealSelected) || IsBlank(dealSelected.is_request_edit) || !dealSelected.is_request_edit) &&
                If(!IsBlank(dealSelected) && !IsBlank(dealSelected.is_request_edit) && dealSelected.is_request_edit, true, CurrentDealSelectedStep >= CurrentStep)
            Width: =42
            X: =btnDelete_4.X
            Y: =btnDelete_4.Y + 1
            ZIndex: =22

        SubHeaderHr_7 As rectangle:
            Fill: =RGBA(191, 191, 192, 1)
            Height: =IconBack_2.Height + 10
            Visible: =App.Width > 600
            Width: =0.5
            X: =IconBack_6.X + IconBack_6.Width + 5
            Y: =IconBack_2.Y - 5
            ZIndex: =23

        CloseDropdownMA_Approve As rectangle:
            Fill: =RGBA(255, 255, 255, 0)
            Height: =App.Height
            OnSelect: =Set(statusShowDropdown, false);
            Visible: =Gl_StatusDropDown.Visible
            Width: =Parent.Width
            ZIndex: =24

        "Gl_StatusDropDown As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver5.0'":
            '#CopilotOverlayLabel': ="Filtered"
            BorderColor: =RGBA(191, 191, 192, 1)
            BorderThickness: =0.5
            Fill: =RGBA(255, 255, 255, 1)
            Height: =Min(Self.AllItemsCount, 4) * Self.TemplateHeight + 10
            Items: =DataStatusBdc
            Layout: =Layout.Vertical
            LoadingSpinner: =LoadingSpinner.Data
            TemplatePadding: =0
            TemplateSize: =40
            Visible: =statusShowDropdown && StatusDropDown.Visible
            Width: =StatusDropDown.Width
            X: =StatusDropDown.X
            Y: =StatusDropDown.Y + 45
            ZIndex: =25

            Button6_42 As button:
                Align: =Align.Left
                BorderThickness: =0
                Color: =RGBA(82, 82, 82, 1)
                Fill: =If(dealSelected.state = ThisItem.value, RGBA(241, 244, 249, 1), RGBA(0, 0, 0, 0))
                FocusedBorderThickness: =0
                Font: =Font.Arial
                FontWeight: =FontWeight.Normal
                HoverColor: =RGBA(0, 0, 0, 1)
                HoverFill: =RGBA(241, 244, 249, 1)
                OnSelect: |-
                    =If(Lower(Text(ThisItem.value)) <> Lower(dealSelected.state),
                    Set(dealStateNew, Text(ThisItem.value));
                    Set(showCloseDealPopup, true););
                    Set(statusShowDropdown, false);
                PaddingLeft: =15
                PaddingRight: =5.27
                PaddingTop: =5.27
                PressedColor: =Self.Color
                PressedFill: =
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10.5
                Text: =ThisItem.title
                Width: =Parent.Width
                X: =0.00
                ZIndex: =1

        ShowHideProgress As button:
            Align: =Align.Left
            BorderThickness: =0
            Color: =RGBA(0, 0, 0, 1)
            Fill: =RGBA(248, 248, 249, 1)
            FocusedBorderThickness: =0
            Font: =Font.Arial
            FontWeight: =FontWeight.Normal
            Height: =30
            HoverColor: =RGBA(0, 0, 0, 1)
            HoverFill: =
            OnSelect: =Set(showProgress, !showProgress)
            PaddingLeft: =15
            PressedColor: =Self.Color
            PressedFill: =Self.Fill
            RadiusBottomLeft: =0
            RadiusBottomRight: =0
            RadiusTopLeft: =0
            RadiusTopRight: =0
            Size: =10.5
            Text: =If(!showProgress, "Show progress", "Hide progress")
            Visible: =App.Width <= 800
            Width: =App.Width - Self.X
            Y: =SubHeaderBg_6.Y + SubHeaderBg_6.Height
            ZIndex: =26

        ShowHideProgressIcon As htmlViewer:
            Font: =Font.Arial
            Height: =44
            HtmlText: |-
                =If(showProgress,
                "<div style=""cursor: pointer""><svg width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"" xmlns=""http://www.w3.org/2000/svg"">
                <g clip-path=""url(#clip0_1760_3688)"">
                <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M11.2682 8.62347C11.4558 8.436 11.7101 8.33068 11.9752 8.33068C12.2404 8.33068 12.4947 8.436 12.6822 8.62347L18.3392 14.2805C18.4348 14.3727 18.5109 14.4831 18.5633 14.6051C18.6158 14.7271 18.6433 14.8583 18.6445 14.9911C18.6456 15.1238 18.6203 15.2555 18.5701 15.3784C18.5198 15.5013 18.4455 15.613 18.3516 15.7069C18.2577 15.8008 18.1461 15.875 18.0232 15.9253C17.9003 15.9756 17.7686 16.0009 17.6358 15.9997C17.5031 15.9986 17.3718 15.971 17.2498 15.9186C17.1278 15.8662 17.0175 15.79 16.9252 15.6945L11.9752 10.7445L7.02524 15.6945C6.83664 15.8766 6.58404 15.9774 6.32184 15.9751C6.05965 15.9729 5.80883 15.8677 5.62342 15.6823C5.43802 15.4969 5.33285 15.2461 5.33057 14.9839C5.32829 14.7217 5.42908 14.4691 5.61124 14.2805L11.2682 8.62347Z"" fill=""#"&If(input_Probability.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                </g>
                <defs>
                <clipPath id=""clip0_1760_3688"">
                <rect width=""24"" height=""24"" fill=""white""/>
                </clipPath>
                </defs>
                </svg></div>"
                , "<div style=""cursor: pointer""><svg xmlns=""http://www.w3.org/2000/svg"" width=""24"" height=""24"" viewBox=""0 0 24 24"" fill=""none"">
                <path fill-rule=""evenodd"" clip-rule=""evenodd"" d=""M12.7069 15.7071C12.5193 15.8946 12.265 15.9999 11.9999 15.9999C11.7347 15.9999 11.4804 15.8946 11.2929 15.7071L5.63585 10.0501C5.54034 9.95785 5.46416 9.84751 5.41175 9.7255C5.35934 9.6035 5.33176 9.47228 5.3306 9.3395C5.32945 9.20672 5.35475 9.07504 5.40503 8.95215C5.45531 8.82925 5.52957 8.7176 5.62346 8.6237C5.71735 8.52981 5.829 8.45556 5.9519 8.40528C6.0748 8.355 6.20648 8.32969 6.33926 8.33085C6.47204 8.332 6.60325 8.35959 6.72526 8.412C6.84726 8.46441 6.95761 8.54059 7.04985 8.6361L11.9999 13.5861L16.9499 8.6361C17.1385 8.45394 17.3911 8.35315 17.6533 8.35542C17.9155 8.3577 18.1663 8.46287 18.3517 8.64828C18.5371 8.83369 18.6423 9.0845 18.6445 9.3467C18.6468 9.60889 18.546 9.8615 18.3639 10.0501L12.7069 15.7071Z"" fill=""#"&If(input_Probability.DisplayMode = DisplayMode.Disabled, "b6b6c0", "525252")&"""/>
                </svg></div>")
            OnSelect: =Select(ShowHideProgress)
            PaddingRight: =5.27
            PaddingTop: =5.27
            Size: =11.60
            Visible: =ShowHideProgress.Visible
            Width: =35
            X: =ShowHideProgress.X + 105
            Y: =ShowHideProgress.Y
            ZIndex: =27

    CloseConfirm As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =64

        RejectPopupBack_17 As rectangle:
            Fill: =RGBA(0.3, 0.3, 0.3, 0.3)
            Height: =Parent.Height
            Visible: =showCloseDealPopup
            Width: =Parent.Width
            ZIndex: =48

        DeleteConfirmBg_14 As htmlViewer:
            Font: =Font.Arial
            Height: =If(Parent.Width > 600, 200, 200)
            HtmlText: |-
                ="<div style='margin-left: 8px; width: calc(100% - 16px); height: "& Self.Height - 20 &"px; background-color: white; border-radius: 12px;box-shadow: 5px 4px 8px 0px rgba(0, 0, 0, 0.10);
                '></div>"
            PaddingRight: =5.00
            PaddingTop: =5.00
            Size: =11.00
            Visible: =showCloseDealPopup
            Width: =If(App.Width > 600, 550, App.Width + 5)
            X: =If(App.Width > 600, App.Width * 0.5 - DeleteConfirmBg_14.Width *0.5, -3)
            Y: =App.Height / 2 - Self.Height
            ZIndex: =49

        CancelResearchOpinionButton_11 As button:
            BorderColor: =Self.Color
            BorderThickness: =1
            Color: =RGBA(149, 149, 149, 1)
            DisabledBorderColor: =RGBA(149, 149, 149, 1)
            DisabledColor: =RGBA(149, 149, 149, 1)
            DisabledFill: =RGBA(0, 0, 0, 0)
            Fill: =RGBA(0, 0, 0, 0)
            FocusedBorderThickness: =1
            Font: =Font.Arial
            Height: =44
            HoverColor: =RGBA(149, 149, 149, 1)
            HoverFill: =ColorFade(Self.Fill , -15%)
            OnSelect: =Set(showCloseDealPopup, false);
            PressedBorderColor: =RGBA(149, 149, 149, 1)
            PressedColor: =RGBA(149, 149, 149, 1)
            PressedFill: =
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Size: =10.5
            Text: ="Cancel"
            Visible: =showCloseDealPopup
            Width: =120
            X: =DeleteConfirmBg_14.X + DeleteConfirmBg_14.Width - 280
            Y: =DeleteConfirmBg_14.Y + DeleteConfirmBg_14.Height - 70
            ZIndex: =50

        DeleteResearchOpinionButton_11 As button:
            BorderThickness: =
            DisabledBorderColor: =RGBA(17, 79, 144, 1)
            DisabledColor: =RGBA(255, 255, 255, 1)
            DisabledFill: =RGBA(17, 79, 144, 1)
            Fill: =RGBA(17, 79, 144, 1)
            FocusedBorderThickness: =
            Font: =Font.Arial
            Height: =44
            HoverFill: =ColorFade(Self.Fill , -15%)
            OnSelect: |-
                =UpdateContext({ShowNotification: false});
                If(dealStateNew <> "close",
                Set(dealSelected, Patch(dealSelected, {state: dealStateNew}));
                Set(dealStateNew, Blank()); Set(showCloseDealPopup, false);
                Set(IsError, false); Set(NoticationText,"Updated state successfully!");
                UpdateContext({ShowNotification: true});
                ,
                Set(dealSelected, Patch(dealSelected, {state: "close"}));
                Set(showCloseDealPopup, false);
                
                // Set deal status and main procedures
                If( dealSelected.status = "DEAL_ADVISORY" || dealSelected.status = "REVISED",
                    Set(dealStatusToSend, "Canceled"); Set(mainProceduresToSend, "Deal advisory opportunity");,
                    dealSelected.status = "PENDING_MANDATE_APPROVAL",
                    Set(dealStatusToSend, "Canceled"); Set(mainProceduresToSend, "Mandate Approval");,
                    dealSelected.status = "PENDING_REVIEW_HEAD_DIVISION",
                    Set(dealStatusToSend, "Canceled"); Set(mainProceduresToSend, "Signing Mandate");,
                    dealSelected.status = "PENDING_EXCUTION_SIGNING_CLOSING",
                    Set(dealStatusToSend, "Canceled"); Set(mainProceduresToSend, Switch(CurrentStep, 5, "Deal execution", 6, "Singing of definitive agreements", dealSelected.deal_main_procedure));,
                    // Default
                    Set(dealStatusToSend, dealSelected.deal_status); Set(mainProceduresToSend, dealSelected.deal_main_procedure);
                );
                If(!IsBlank(dealSelected) && dealSelected.is_request_edit, Set(dealStage, "Closing"); Set(mainProceduresToSend, "Closing"));
                If(mainProceduresToSend = "Closing", Set(dealStage, "Closing"));
                
                UpdateContext({ShowNotification: false});
                Set(dataResposneDealDraft, Blank());
                // files
                ClearCollect(listAttToSend, []);
                ClearCollect(listAtt, AddColumns(att_12.Attachments, title, "step231"), AddColumns(att_13.Attachments, title, "step232"), AddColumns(att_16.Attachments, title, "step22"), AddColumns(att_Step4_1.Attachments, title, "step4"), AddColumns(att_Step5.Attachments, title, "step5"), AddColumns(att_Step6.Attachments, title, "step6"), AddColumns(att_Step7.Attachments, title, "step7"));
                ForAll(listAtt, Collect(listAttToSend,{file_name: Text(Now(), "ddmmyyyy_hhmmss_") & ThisRecord.Name,title: ThisRecord.'data-ADB4D7A662F548B49FAC2B986E348A1Btitle',date: Text(Now(), "yyyy-mm-dd hh:mm:ss"),by: currenUserV2.id,size: ""}));
                
                 // Save files to blob
                Clear(listAttachFileToSave);
                Clear(listAttachFileNonPrefix);
                Clear(colAttachments);
                ForAll(listAtt As att,
                Collect(colAttachments,{Id:"",Date: nowV1,By: User().FullName,Name: att.Name, file_name: att.Name,NameGroup: att.Name,Value: att.Value,File: {file: {contentBytes: att.Value,name: att.Name, file_name: Text(Now(), "ddmmyyyy_hhmmss_") & att.Name}},IsDeleted:false,Size: ""}));
                ClearCollect(GroupedItems,GroupBy(colAttachments,NameGroup,Group));
                ForAll(GroupedItems,Collect(listAttachFileNonPrefix,First(ThisRecord.Group)); );
                UpdateIf(listAttachFileNonPrefix, true, {Name: Text(Now(), "ddmmyyyy_hhmmss_") & Name, file_name: Text(Now(), "ddmmyyyy_hhmmss_") & Name});
                Collect(listAttachFileToSave,listAttachFileNonPrefix);
                
                ForAll(listAttachFileToSave,If(IsBlank(ThisRecord.Id) && !ThisRecord.IsDeleted,AzureBlobStorage.CreateFile(bucketMAAttach,ThisRecord.file_name,ThisRecord.Value)));
                
                Reset(att_Step7); Reset(att_Step6); Reset(att_Step5); Reset(att_Step4_1); Reset(att_16); Reset(att_12); Reset(att_13);
                
                // notes
                ClearCollect(NoteDataToSend, []);
                ClearCollect(NoteData,
                    If(!IsEmpty(DataNoteList),
                        Filter(DataNoteList, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep22Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteListAtt),
                        Filter(DataNoteListAtt, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep23Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteMandate),
                        Filter(DataNoteMandate, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep41Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteExecution),
                        Filter(DataNoteExecution, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep5Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteAgreements),
                        Filter(DataNoteAgreements, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep6Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    ),
                    If(!IsEmpty(DataNoteClosing),
                        Filter(DataNoteClosing, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old)),
                        Filter(noteStep7Data, isSelected && Len(Trim(note)) > 0 && Trim(note) <> Trim(note_old))
                    )
                );
                ForAll(NoteData, Collect(NoteDataToSend,{idNote: "",LabelNotedBy: ThisRecord.created_by,location: ThisRecord.location, screen: ThisRecord.screen,note: ThisRecord.note}));
                
                // JSON data to send
                Set(dealInfo,{
                    company_id: If(IsBlank(clientNameSelectedValue.id_company),"",clientNameSelectedValue.id_company),
                    deal_name: "-"&ClientName_Input_MAStep1.Text,
                    deal_type_1: If(IsBlank(dealType1SelectedValue), "", dealType1SelectedValue),
                    deal_type_2: If(IsBlank(dealType2SelectedValue), "", dealType2SelectedValue),
                    deal_type_3: If(IsBlank(dealType3SelectedValue), "", dealType3SelectedValue),
                    engagement_risk: If(IsBlank(MA_EngagementRiskDropdown.Text), "",MA_EngagementRiskDropdown.Text),
                    ugency: If(IsBlank(input_Ugency.Text), "", input_Ugency.Text), importance: If(IsBlank(input_Importance.Text), "", input_Importance.Text),           
                    probability_of_success: If(IsBlank(input_Probability.Text), "", input_Probability.Text),
                    deal_value:Substitute(Substitute(input_deal_value.Text, ",", ""), ".", ""),
                    conclusions_on_client_acceptance: "" ,
                    approval_on_client_acceptance: If(IsBlank(MA_ApprovalOnClientDropdown.Text), "", MA_ApprovalOnClientDropdown.Text) ,
                    conclusions_on_engagement_acceptance:"" ,
                    approval_on_engagement_acceptance: If(IsBlank(MA_ApprovalOnEnagementDropdown.Text), "", MA_ApprovalOnEnagementDropdown.Text) ,
                    transaction_fee: Substitute(Substitute(input_Transaction.Text, ",", ""), ".", ""),
                    percent_success_fee: If(IsBlank(input_Success_fee.Text), "", input_Success_fee.Text),
                    retainer_fee: Substitute(Substitute(input_Retainer.Text, ",", ""), ".", ""),
                    percentage_of_stock_for_sale:"" ,
                    deal_stage: If(IsBlank(dealSelected) || IsBlank(dealSelected.deal_stage), "Evaluating", dealSelected.deal_stage),
                    deal_status: dealStatusToSend,
                    deal_main_procedure: mainProceduresToSend,
                    deal_owner: If(IsBlank(dealSelected) || IsBlank(dealSelected.deal_owner), currenUserV2.id, dealSelected.deal_owner),
                    mentor: If(IsBlank(dealSelected) || IsBlank(dealSelected.mentor), "", dealSelected.mentor),
                    observer: If(IsBlank(dealSelected) || IsBlank(dealSelected.observer), "", dealSelected.observer),
                    actual_closing_time: If(IsBlank(dealSelected) || IsBlank(dealSelected.actual_closing_time), "", dealSelected.actual_closing_time),
                    contract_date: Text(ContractDate.SelectedDate, "yyyy-mm-dd hh:mm:ss"),
                    expected_closing_time: Text(DatePicker_Expected_closing_time.SelectedDate, "yyyy-mm-dd hh:mm:ss"),
                    divestment_motive: If(IsBlank(dealSelected) || IsBlank(dealSelected.divestment_motive), "", dealSelected.divestment_motive),
                    state: If(IsBlank(dealSelected) || IsBlank(dealSelected.state), "ACTIVE", dealSelected.state),
                    stage: If(IsBlank(dealSelected) || IsBlank(dealSelected.stage), "Assessment", dealSelected.stage),
                    status: If(IsBlank(dealSelected) || IsBlank(dealSelected.status), "DEAL_ADVISORY", dealSelected.status),
                    share: If(IsBlank(dealSelected) || IsBlank(dealSelected.share), "General", dealSelected.share),
                    created_by: currenUserV2.id,
                    is_request_edit: If(IsBlank(dealSelected) || IsBlank(dealSelected.is_request_edit), "false", dealSelected.is_request_edit),
                    comment_mandate: If(IsBlank(TextInputStep3.Text), "", TextInputStep3.Text),
                    created_comment_date: If(IsBlank(dealSelected) || IsBlank(dealSelected.created_comment_date), Text(Now(), "yyyy-mm-dd hh:mm:ss"), dealSelected.created_comment_date)
                });
                
                Set(jsonToSend, {deal_info: dealInfo,attach_insert: listAttToSend,attach_delete: listDeleteMA,noteList: NoteDataToSend});
                
                // Call API
                Set(isLoading, true);
                Set(dataResposneDealDraft,'TVS->Deal_Information_Closed' .Run(JSON(jsonToSend, JSONFormat.IndentFour),If(IsBlank(dealSelected),"0",dealSelected.id),resKeyOpenAll.open,resKeyOpenAll.close,currenUserV2.id,"","CLOSED",true,false,true,false,false,"1,2,3,4"));
                
                If(dataResposneDealDraft.status = "200",
                    Select(DeleteConfirmCloseIcon_15);
                    Set(IsError, false); Set(NoticationText,"Closed successfully!"); UpdateContext({ShowNotification: true});
                    // Send email and noti
                    If(!IsBlank(dealSelected) && !IsBlank(oldState) && !IsBlank(dealSelected.state) && (oldState <> dealSelected.state),
                        Set(sendMAEmailRes, 'TVS->SendNotiEmail-Process2'.Run(
                            resKeyOpenAll.open,resKeyOpenAll.close,currenUserV2.id, dealSelected.status,
                            "SAVE", dealSelected.id,
                            "<a href='" & linkToApp & "?restartApp=true&screen=detail-ma&action=approve-ma&maId=" & dealSelected.id & "'>Link to item</a>",
                            currenUserV2.name, currenUserV2.email, currenUserV2.internal_email,
                            oldState <> dealSelected.state, // is diff state
                            If(IsBlank(dealSelected) || IsBlank(dealSelected.is_request_edit), false, dealSelected.is_request_edit),appProperty, emailFromConfix, "")
                        );
                    );
                );
                Set(isLoading, false);
                Navigate(MA);
                );
            PressedColor: =RGBA(255, 255, 255, 1)
            PressedFill: =RGBA(17, 79, 144, 1)
            RadiusBottomLeft: =8
            RadiusBottomRight: =8
            RadiusTopLeft: =8
            RadiusTopRight: =8
            Size: =10.5
            Text: ="Yes"
            Visible: =showCloseDealPopup
            Width: =120
            X: =DeleteConfirmBg_14.X + DeleteConfirmBg_14.Width - 150
            Y: =DeleteConfirmBg_14.Y + DeleteConfirmBg_14.Height - 70
            ZIndex: =51

        DeleteConfirmCloseIcon_16 As icon.Cancel:
            Color: =RGBA(26, 26, 26, 1)
            Height: =20
            Icon: =Icon.Cancel
            OnSelect: =Set(showCloseDealPopup, false);
            Visible: =showCloseDealPopup
            Width: =20
            X: =DeleteConfirmBg_14. X + DeleteConfirmBg_14.Width -50
            Y: =DeleteConfirmBg_14.Y + 20
            ZIndex: =52

        DeleteConfirmLabel_17 As label:
            Font: =Font.Arial
            Size: =10.5
            Text: ="Are you sure to change the state of the deal from """&StatusDropDown.Text&""" to """&Proper(dealStateNew)&"""?"
            Visible: =showCloseDealPopup
            Width: =DeleteConfirmBg_14.Width - 100 - DeleteConfirmCloseIcon_16.Width
            X: =Label2_11.X
            Y: =Label2_11.Y + Label2_11.Height + 10
            ZIndex: =53

        Label2_11 As label:
            Font: =Font.Arial
            FontWeight: =FontWeight.Bold
            Size: =12
            Text: ="Update deal state"
            Visible: =showCloseDealPopup
            Width: =200
            X: =DeleteConfirmBg_14.X + 30
            Y: =DeleteConfirmBg_14.Y + 10
            ZIndex: =54

